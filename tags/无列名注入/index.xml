<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>无列名注入 on</title><link>/tags/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/</link><description>Recent content in 无列名注入 on</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 15 Apr 2021 09:55:17 +0000</lastBuildDate><atom:link href="/tags/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5/index.xml" rel="self" type="application/rss+xml"/><item><title>SWPU2019 Web1</title><link>/posts/ctf/swpu2019web1/</link><pubDate>Thu, 15 Apr 2021 09:55:17 +0000</pubDate><guid>/posts/ctf/swpu2019web1/</guid><description>&lt;p>一个登陆界面，再看下url地址为login.php，确认了使用的是php&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415091617.png" alt="">&lt;/p>
&lt;p>直接查看源码，在源码中找到了register.php。先注册一个进去看一看。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415091705.png" alt="">&lt;/p>
&lt;p>是一个发布广告的信息页，发布广告时需要输入广告的标题和内容，联想一下之前做过的发布文章的，应该是sql注入，输入广告标题输入一个单引号&lt;code>'&lt;/code>试一试&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415091924.png" alt="">&lt;/p>
&lt;p>广告详情中出现了数据库报错&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415091959.png" alt="">猜测应该是二次注入，发布时加上一些转义字符没有出现错误，但是查看详情时再次从数据库中取出带有payload的数据，可以执行sql语句。而且上面的单引号测试出来了是&lt;strong>字符型单引号闭合&lt;/strong>。&lt;/p>
&lt;p>接下来是尝试过滤。我试出来的有空格（使用&lt;code>/**/&lt;/code>绕过）、or，and（可以使用&amp;amp;&amp;amp;，||），同时or被过滤，就说明保存数据库表名的库&lt;strong>information_schema&lt;/strong>没有办法查询，并且&lt;strong>orderby&lt;/strong>也不能使用，需要使用其他办法获取表内容。&lt;/p>
&lt;p>测试一下当前表的字段数，从1开始加，一直会报字段数不匹配，直到尝试到22。还需要主义的是执行的sql语句后面的 &lt;code>LIMIT 0,1&lt;/code>需要闭合，所以最后添加了一个单引号&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415092716.png" alt="">&lt;/p>
&lt;p>说明回显位是2和3。&lt;/p>
&lt;p>由于没有办法查询表名，所以需要我们自己猜测，CTF比赛中常见的表名就是flag、users、举办方的缩写啥的。&lt;del>这种没有办法查询表名的题目表名应该都不会设置太难&lt;/del>&lt;/p>
&lt;p>测试的语句&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;/**/union/**/select/**/1,(select/**/*/**/from/**/flag),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当测到&lt;code>users&lt;/code>表时返回了当前字段数不匹配的错误，说名users里有多个字段，肯定没有办法显示在一列中。所以接下来是猜users表的字段数。&lt;/p>
&lt;p>首先讲解一波&lt;strong>无列名注入&lt;/strong>。&lt;/p>
&lt;p>先来个正常表（flag）的查询&lt;/p>
&lt;p>&lt;img src="D:%5CDROPS%5CCTF%E6%AF%94%E8%B5%9B%E9%A2%98%E8%A7%A3%5CBUUCTF%5CWeb%5BSWPU2019%5DWeb1%5C20210415094632.png" alt="">&lt;/p>
&lt;p>我们知道在sql语句查询的时候，可以给列名起别名形如&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415094059.png" alt="">&lt;/p>
&lt;p>使用联合查询的时候，只要前后表的字段数相同，前面查询的就会成为表名&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415094238.png" alt="">&lt;/p>
&lt;p>所以当我们不知道flag表的字段，并且想要查询里面的内容时，比如我想查询flag表的flag字段，可以构造&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415094814.png" alt="">&lt;/p>
&lt;p>需要为子查询的结果再起一个别名（图中为&lt;code>x&lt;/code>），这样我们就不用列名查询到了字段。总结一下思路就是：自己构造一个表名并且联合查询想要查询的表名，再使用&lt;code>group_concat&lt;/code>函数输出自己构造的表名。&lt;/p>
&lt;p>所以测试users表的字段数时，就通过形如上图的格式，改变联合查询的字段数判断。&lt;/p>
&lt;p>最终的payload：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;/**/union/**/select/**/1,(select/**/group_concat(b)/**/from(select/**/1,2/**/as/**/a,3/**/as/**/b/**/union/**/select/**/*/**/from/**/users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>