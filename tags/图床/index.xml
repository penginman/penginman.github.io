<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>图床 on Braindance</title><link>https://www.braindance.top/tags/%E5%9B%BE%E5%BA%8A/</link><description>Recent content in 图床 on Braindance</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 01 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.braindance.top/tags/%E5%9B%BE%E5%BA%8A/index.xml" rel="self" type="application/rss+xml"/><item><title>博客图床迁移</title><link>https://www.braindance.top/posts/play_time/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E8%BF%81%E7%A7%BB/</link><pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate><guid>https://www.braindance.top/posts/play_time/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E8%BF%81%E7%A7%BB/</guid><description>&lt;h2 id="起因"&gt;起因
&lt;/h2&gt;&lt;p&gt;原来博客的图片使用Jsdelivr和github的方式存储访问，但是最近Jsdelivr频繁的被墙，感觉可能在未来的不久会失效，毕竟好多人用来当免费的CDN（&lt;del&gt;比如我&lt;/del&gt;），也会有人使用其访问些zz敏感或其他的文件，被墙了也情有可原，而且github的仓库的作用也是用来存储代码而非图床，像我这样的人也导致了仓库的滥用，所以决定找个新的途径。&lt;/p&gt;
&lt;h2 id="过程"&gt;过程
&lt;/h2&gt;&lt;p&gt;当时在网上找了好久，最后在loc上找到了 一个&lt;a class="link" href="https://hostloc.com/thread-807685-1-1.html" target="_blank" rel="noopener"
&gt;帖子&lt;/a&gt;，感觉把目前行得通的方法都列出来了。&lt;/p&gt;
&lt;p&gt;一、第三方存储&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;github+jsdelivr 或 gitee 可以搭配PicGo使用&lt;/li&gt;
&lt;li&gt;茎肛互撸娃大佬的鸡霸图床&lt;/li&gt;
&lt;li&gt;国内对象存储&lt;/li&gt;
&lt;li&gt;使用Onedrive 或 Google Drive 搭建图床&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、自行搭建&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;（腾讯云轻量香港 or CDN） 反代 （本地 or 大盘鸡）&lt;/li&gt;
&lt;li&gt;北岸域名+国内机器&lt;/li&gt;
&lt;li&gt;国内机器非标准端口&lt;/li&gt;
&lt;li&gt;家宽开通公网IP存在家里&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三、直接嵌在文档中，图片转base64，markdown插入&lt;/p&gt;
&lt;p&gt;最后我是选择了良心云的cos对象存储，新用户第一年便宜，就算以后续费一年差不多也70左右。之前自己有了解过对象存储这一技术，但是当时听闻的是有人被套路云的流量计费给掏空了，这次在良心云的计费方式中找到了按量计费，这也刚好满足了博客图片也不多的需求，更不怕被人把钱包给刷爆了。&lt;/p&gt;
&lt;p&gt;上传的方式还是配合PicGo上传，又添加了一个&lt;a class="link" href="https://github.com/liuwave/picgo-plugin-rename-file" target="_blank" rel="noopener"
&gt;rename-file&lt;/a&gt;插件实现上传路径的命名。因为感觉对象存储给的链接太长，国内没有备案的域名，使用了一个服务器直接域名重定向到对象存储给的域名。&lt;/p&gt;
&lt;h2 id="结果"&gt;结果
&lt;/h2&gt;&lt;p&gt;宣布从这篇文章开始往后的图片都会用对象存储，之前的文章如果有需要评论或者联系我再补上吧。&lt;/p&gt;
&lt;h3 id="插曲避坑"&gt;插曲（避坑）
&lt;/h3&gt;&lt;p&gt;期间使用对象存储测试图片的时候，发现过一阵子图片就访问不了了，去桶里一看发现空空如也，发生了两次清空也不知道啥原因，最后一次点了下清空存储桶，发现使用方式里有个&lt;strong&gt;生命周期管理&lt;/strong&gt;，发现是这玩意自动删除文件，所以记得把&lt;strong&gt;生命周期规则修改一下&lt;/strong&gt;。&lt;/p&gt;</description></item><item><title>PicGo复制自定义链接</title><link>https://www.braindance.top/posts/play_time/picgo%E5%A4%8D%E5%88%B6%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE%E6%8E%A5/</link><pubDate>Mon, 30 Nov 2020 09:54:11 +0000</pubDate><guid>https://www.braindance.top/posts/play_time/picgo%E5%A4%8D%E5%88%B6%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE%E6%8E%A5/</guid><description>&lt;p&gt;2022年2月3日22:41:32&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;！！！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;建议直接看文章末尾，我发现我就是个笨比。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id="前言"&gt;前言
&lt;/h1&gt;&lt;p&gt;现在博客里面的图片使用的是github+jsdelivr+PicGo图床。PicGo是一个开源的上传图片的软件，支持大部分图床的上传，只需要设置对应的图床参数即可一键上传。github上PicGo的概述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PicGo: 一个用于快速上传图片并获取图片 URL 链接的工具&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PicGo 本体支持如下图床：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;七牛图床&lt;/code&gt; v1.0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;腾讯云 COS v4\v5 版本&lt;/code&gt; v1.1 &amp;amp; v1.5.0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;又拍云&lt;/code&gt; v1.2.0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GitHub&lt;/code&gt; v1.5.0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SM.MS V2&lt;/code&gt; v2.3.0-beta.0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;阿里云 OSS&lt;/code&gt; v1.6.0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Imgur&lt;/code&gt; v1.6.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;本体不再增加默认的图床支持。你可以自行开发第三方图床插件。&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;项目地址：&lt;a class="link" href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener"
&gt;PicGo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;软件界面：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130095609.png"
loading="lazy"
&gt;&lt;/p&gt;
&lt;h1 id="起因"&gt;起因
&lt;/h1&gt;&lt;p&gt;PicGo上传成功以后可以自动复制url，但是默认复制的图片链接是github提供的，github在国内又经常抽风，图片通常都是无法访问的，所以我使用了jsdelivr提供的链接访问图片，PicGo也提供了自定义链接，但是规定必须包含&lt;code&gt;$url&lt;/code&gt;参数，也就是默认的url地址：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130093835.png"
loading="lazy"
&gt;&lt;/p&gt;
&lt;p&gt;起初是把jsdelivr的链接直接拼在后面，每次使用的时候都再删一次。直到昨晚受不了了就尝试去修改软件试图绕过判断。&lt;/p&gt;
&lt;h1 id="解决方法"&gt;解决方法
&lt;/h1&gt;&lt;p&gt;在软件设置的配置文件里找到了&lt;code&gt;customLink&lt;/code&gt;，和之前自己设置的链接对照了一下，认为这个就是实际的自定义链接，直接在此处修改，再上传自动复制的链接就正确了，而且绕过了必须包含$url。&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130094455.png"
loading="lazy"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130094651.png"
loading="lazy"
&gt;&lt;/p&gt;
&lt;h1 id="结语"&gt;结语
&lt;/h1&gt;&lt;p&gt;软件提供了自动使用时间戳重命名，所以我自定义链接中还是使用了&lt;code&gt;$filename&lt;/code&gt;变量，然后博客中的图片大部分都是使用QQ的截屏功能，出来的截图后缀都是&lt;code&gt;png&lt;/code&gt;格式，这个可以根据需要自己设定拼接，然后使用的markdown编辑器是typora，想要添加图片直接&lt;code&gt;Crtl+Shift+i&lt;/code&gt;，把图片链接贴里面就彳亍了。~&lt;del&gt;白嫖真爽&lt;/del&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2022-1-31 11:43:48&lt;/p&gt;
&lt;p&gt;这时候发现自定义链接直接用markdown格式就更好了&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code class="language-other" data-lang="other"&gt;![$fileName](https://cdn.jsdelivr.net/gh/username/repo@master/artical/$fileName.png)
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h1 id="最简单修改"&gt;最简单修改
&lt;/h1&gt;&lt;p&gt;前面的都是我在改自定义链接，至少明白了可以绕过自定义链接必须包含变量名称这个限制。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202032246055.png"
loading="lazy"
alt="image-20220203224558136"
&gt;&lt;/p&gt;
&lt;p&gt;直接在自定义域名那里修改成jsDeliver对应的仓库路径，比如我的&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code class="language-other" data-lang="other"&gt;https://cdn.jsdelivr.net/gh/penginman/PicBed@master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后返回的链接就会把原来的&lt;code&gt;raw.github.com/xxxxxx&lt;/code&gt;给替代了。&lt;/p&gt;</description></item><item><title>Chevereto-搭建一个自己的图床</title><link>https://www.braindance.top/posts/play_time/chevereto-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/</link><pubDate>Sun, 20 Sep 2020 11:09:02 +0000</pubDate><guid>https://www.braindance.top/posts/play_time/chevereto-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/</guid><description>&lt;p&gt;博客搭完了，自己选择的这个博客主题又是以图片为主要元素的，当然要考虑图片的使用问题了，原来打算直接放在服务器上，但是后来想了想，以后如果文章&lt;del&gt;越写越多&lt;/del&gt;用的图太多服务器的流量也不够用，想到了图床这一托管图片的服务，但是放在别人的上面总怕会受到&lt;del&gt;限制&lt;/del&gt;，正好发现了&lt;code&gt;Chevereto&lt;/code&gt;这一图床系统，可以自己搭建一个图床服务器，正好自己还有一个阿里云学生云，那就开工。&lt;/p&gt;
&lt;h3 id="chevereto-说明"&gt;Chevereto 说明
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Chevereto是一个可以帮助你建立自己的图像分享网站（图床）的应用程序，我们的目标是可以让世界上的任何一个人都可以建立自己的图像共享平台。我们坚定不移的为那些想要可定制的白标图像共享服务的人建立一个真正的替代品。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Chevereto&lt;/code&gt;分为免费版和付费版，区别肯定就是大小什么的，我这个搭在学生云上肯定就不用想我会选择哪个了吧🤣&lt;/p&gt;
&lt;h3 id="环境说明"&gt;环境说明
&lt;/h3&gt;&lt;p&gt;因为&lt;code&gt;Chevereto&lt;/code&gt;所需要的环境为&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Apache/Nginx&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PHP 5.5+&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 5.0+&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;del&gt;我太懒了不想动&lt;/del&gt;所以我选择使用宝塔面板为我们搭建web环境。&lt;/p&gt;
&lt;p&gt;宝塔面板官网：https://www.bt.cn/&lt;/p&gt;
&lt;p&gt;安装完成以后进入管理面板应该会直接提示你安装需要的环境&lt;/p&gt;
&lt;p&gt;我的环境如下图&lt;/p&gt;
&lt;p&gt;&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9TVP.png"
loading="lazy"
alt="BJ9TVP.png"
&gt;&lt;/p&gt;
&lt;h3 id="总结安装步骤"&gt;总结安装步骤
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;去github下载Chevereto的压缩包。&lt;/li&gt;
&lt;li&gt;在宝塔面板上新建网站目录，创建一个存图片的数据库(自行创建)。&lt;/li&gt;
&lt;li&gt;将Chevereto的压缩包上传到网站目录解压。&lt;/li&gt;
&lt;li&gt;访问新建的网站就是Chevereto的管理面板，并进行初始配置。&lt;/li&gt;
&lt;li&gt;无了。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="开始"&gt;开始
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class="link" href="https://github.com/Chevereto/Chevereto-Free/releases" target="_blank" rel="noopener"
&gt;github下载地址&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建网站目录和数据库用户&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9H58.png"
loading="lazy"
alt="BJ9H58.png"
&gt;&lt;/p&gt;
&lt;p&gt;因为我域名所以域名留空，提示默认使用&lt;code&gt;80&lt;/code&gt;端口，访问地址就是服务器ip地址，剩下的自己随机发挥。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建完成后需要配置一下网站配置文件才可以访问到配置页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9Ibt.png"
loading="lazy"
alt="BJ9Ibt.png"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9qPS.png"
loading="lazy"
alt="BJ9qPS.png"
&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;server{...}&lt;/code&gt;中添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-nginx" data-lang="nginx"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;location&lt;/span&gt; &lt;span style="color:#e6db74"&gt;/&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;try_files&lt;/span&gt; $uri $uri/ &lt;span style="color:#e6db74"&gt;/index.php?&lt;/span&gt;$query_string;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;配置完成以后应该会自动保存并重启&lt;code&gt;Nginx&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将在github上下载的&lt;code&gt;Chevereto&lt;/code&gt;压缩包上传到刚刚创建的网站目录中（上图是&lt;code&gt;/www/wwwroot&lt;/code&gt;）并解压。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之后就可以直接访问&lt;code&gt;服务器ip:80&lt;/code&gt;（80端口可以省略），然后一步一步的进行配置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可能会出现的错误&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Chevereto can’t create the app/settings.php file. You must manually create this file&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;解决方法：这个错误就是没有找到&lt;code&gt;setting.php&lt;/code&gt;配置文件，压缩包内似乎没有创建该文件，我们可以自行创建，在&lt;code&gt;Chevereto&lt;/code&gt;的网站目录下的&lt;code&gt;/app&lt;/code&gt;目录下执行命令创建文件，并修改文件权限&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;touch settings.php
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;chmod +x settings.php
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;我自己还遇到了第二个错误，大概的意思就是访问权限不足blahbalhblahbla，我改了好久都不行。最后直接把整个网站目录的权限给改了访问成功。知道这样做不对，希望大佬能指点。&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;访问网站进行网站的初始化配置，大概就是填写数据库名称、数据库账号密码、管理员的账户和密码和一些信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://s1.ax1x.com/2020/10/29/BJ97Uf.jpg"
loading="lazy"
alt="BJ97Uf.jpg"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9O2Q.jpg"
loading="lazy"
alt="BJ9O2Q.jpg"
&gt;&lt;/p&gt;
&lt;p&gt;完成以后就可以登陆管理员账号进入管理面板，我是首先去设置里找到语言设置把面板改成了中文。&lt;/p&gt;
&lt;h3 id="完工"&gt;完工
&lt;/h3&gt;&lt;p&gt;管理面板还有好多其他功能，我都还没研究过，大伙可以以后可以自己慢慢学习&lt;/p&gt;
&lt;p&gt;然后我的图床地址：http://47.97.231.10/ (已失效) &lt;del&gt;🈚👇👻来丶se兔&lt;/del&gt;&lt;/p&gt;</description></item></channel></rss>