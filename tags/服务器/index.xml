<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>服务器 on</title><link>/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><description>Recent content in 服务器 on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 05 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>ClawCloud使用体验</title><link>/posts/vps_setup_clawcloud/</link><pubDate>Wed, 05 Mar 2025 00:00:00 +0000</pubDate><guid>/posts/vps_setup_clawcloud/</guid><description>&lt;h2 id="前言"&gt;前言
&lt;/h2&gt;&lt;p&gt;快毕业了忙的飞起，上个服务器到期了我都没来得及管，现在写这篇博客还是在github的pages上，又接触了一些项目，想买个便宜好使的服务器玩玩。&lt;/p&gt;
&lt;p&gt;在论坛里搜到&lt;a class="link" href="https://claw.cloud/" target="_blank" rel="noopener"
&gt;ClawCloud&lt;/a&gt;评价不错，刚好最近有活动优惠就入手了一台系统为Debian，之前一直用的ubuntu，这下也换个玩玩。记录一下机器怎么样和自己配置过程，也边以后自己看。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;2C / 2G / 40G / 1T&lt;/th&gt;
&lt;th&gt;$25.20 USD&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="测评"&gt;测评
&lt;/h2&gt;&lt;p&gt;部分测试结果：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;VPS融合怪版本：2025.02.12
Shell项目地址：https://github.com/spiritLHLS/ecs
Go项目地址：https://github.com/oneclickvirt/ecs
---------------------基础信息查询--感谢所有开源项目---------------------
CPU 型号 : Intel(R) Xeon(R) Platinum
CPU 核心数 : 2
CPU 频率 : 2500.002 MHz
CPU 缓存 : L1: 32.00 KB / L2: 1.00 MB / L3: 33.00 MB
AES-NI指令集 : ✔ Enabled
VM-x/AMD-V支持 : ❌ Disabled
内存 : 130.84 MiB / 1.85 GiB
Swap : [ no swap partition or swap file detected ]
硬盘空间 : 911.28 MiB / 40110.19 MiB
启动盘路径 : /dev/vda1
系统在线时间 : 0 days, 0 hour 5 min
负载 : 1.02, 0.34, 0.12
系统 : Debian GNU/Linux 12 (bookworm) (x86_64)
架构 : x86_64 (64 Bit)
内核 : 6.1.0-31-cloud-amd64
TCP加速方式 : cubic
虚拟化架构 : KVM
NAT类型 : Full Cone
IPV4 ASN : AS45102 Alibaba (US) Technology Co., Ltd.
IPV4 位置 : Tokyo / Tokyo / JP
IPV6 ASN : AS45102 Alibaba
IPV6 位置 : Tokyo / Tokyo / Japan
IPV6 子网掩码 : 128
----------------------CPU测试--通过sysbench测试-------------------------
-&amp;gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec)
1 线程测试(单核)得分: 1062 Scores
2 线程测试(多核)得分: 1770 Scores
---------------------内存测试--感谢lemonbench开源-----------------------
-&amp;gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec)
单线程读测试: 5350.57 MB/s
单线程写测试: 5815.83 MB/s
------------------磁盘dd读写测试--感谢lemonbench开源--------------------
-&amp;gt; 磁盘IO测试中 (4K Block/1M Block, Direct Mode)
测试操作 写速度 读速度
100MB-4K Block 35.0 MB/s (8551 IOPS, 2.99s) 52.4 MB/s (12800 IOPS, 2.00s)
1GB-1M Block 232 MB/s (221 IOPS, 4.52s) 208 MB/s (198 IOPS, 5.04s)
---------------------磁盘fio读写测试--感谢yabs开源----------------------
Block Size | 4k (IOPS) | 64k (IOPS)
------ | --- ---- | ---- ----
Read | 20.68 MB/s (5.1k) | 96.31 MB/s (1.5k)
Write | 20.69 MB/s (5.1k) | 96.82 MB/s (1.5k)
Total | 41.37 MB/s (10.3k) | 193.13 MB/s (3.0k)
| |
Block Size | 512k (IOPS) | 1m (IOPS)
------ | --- ---- | ---- ----
Read | 91.97 MB/s (179) | 91.36 MB/s (89)
Write | 96.85 MB/s (189) | 97.44 MB/s (95)
Total | 188.82 MB/s (368) | 188.81 MB/s (184)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;完整测试结果连接如下：&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://paste.spiritlhl.net/#/show/WG2vI.txt" target="_blank" rel="noopener"
&gt;https://paste.spiritlhl.net/#/show/WG2vI.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="http://hpaste.spiritlhl.net/#/show/WG2vI.txt" target="_blank" rel="noopener"
&gt;http://hpaste.spiritlhl.net/#/show/WG2vI.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;咱也看不懂，也没有什么特殊需求，就部署点项目，下载包方便。&lt;/p&gt;
&lt;h2 id="配置"&gt;配置
&lt;/h2&gt;&lt;h3 id="更新组件包管理"&gt;更新组件、包管理
&lt;/h3&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;sudo apt update #这个命令会更新软件包列表，让系统知道有哪些软件包可以更新。
sudo apt upgrade --only-upgrade #这个命令会安装所有可用的软件包更新。
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="bbr"&gt;BBR
&lt;/h3&gt;&lt;p&gt;BBR 是 Google 提出的一种新型拥塞控制算法（Bottleneck Bandwidth and RTT），全称为瓶颈带宽和往返传播时间。&lt;/p&gt;
&lt;p&gt;在 Linux 系统中，BBR 主要有以下特点和作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;提高网络性能&lt;/strong&gt;：它可以显著提高吞吐量和降低 TCP 连接的延迟，使数据传输更加高效。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;适应不同网络环境&lt;/strong&gt;：适合高延迟、高带宽的网络链路，以及慢速接入网络的用户，能在一定丢包率的网络链路上充分利用带宽，并降低网络链路上的缓冲区占用率从而降低延迟。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优化拥塞控制&lt;/strong&gt;：BBR 改变了传统基于丢包反馈的拥塞控制机制，通过精确测量往返传播时间（RTT）和瓶颈带宽等参数来更有效地控制数据发送速率，避免了传统算法中因单纯丢包判断拥塞而导致的带宽利用率不高和端到端延迟大等问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提升网络稳定性&lt;/strong&gt;：有助于减少网络拥塞和数据包丢失，提高网络的稳定性和可靠性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;运行代码&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;amp;&amp;amp; chmod +x bbr.sh &amp;amp;&amp;amp; ./bbr.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;重启 VPS、使内核更新和BBR设置都生效&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;确认bbr是否开启&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;lsmod | grep bbr
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;结果为&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;tcp_bbr 20480 1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="添加sawp"&gt;添加SAWP
&lt;/h3&gt;&lt;p&gt;注意到测评结果里没有SAWP。在虚拟专用服务器（VPS）中，SWAP 是当物理内存（RAM）已被占满时用于存储数据的磁盘空间。它充当 RAM 的溢出区，允许系统将不活跃的内存页移动到 SWAP 空间，从而为活跃进程释放 RAM。这在处理占用大量内存的应用程序或同时运行多个应用程序时特别有用。然而，访问 SWAP 空间的速度比访问 RAM 慢，因为它涉及磁盘 I/O 操作。因此，虽然 SWAP 可以帮助避免内存不足错误，但应适当配置以确保 VPS 的最佳性能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用脚本添加&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;wget -O swap.sh https://raw.githubusercontent.com/yuju520/Script/main/swap.sh &lt;span style="color:#f92672"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod +x swap.sh &lt;span style="color:#f92672"&gt;&amp;amp;&amp;amp;&lt;/span&gt; clear &lt;span style="color:#f92672"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./swap.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意输入SWAP的大小为单位M&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看当前内存&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;free&lt;/span&gt; &lt;span style="color:#f92672"&gt;-&lt;/span&gt;m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="添加用户"&gt;添加用户
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;修改root密码，创建新用户，加入sudo列表；&lt;/li&gt;
&lt;li&gt;关闭root账户登陆，普通用户开启免密登录，并关闭密码登录；&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo adduser xiaoming
sudo passwd xiaoming
echo &amp;#39;xiaoming ALL=(ALL) ALL&amp;#39; | sudo tee /etc/sudoers.d/xiaoming
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;验证&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;su xiaoming
sudo cat /etc/shadow
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果能够成功执行命令，说明 sudo 权限已正确添加&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后添加公钥内容到服务器&lt;code&gt;/home/user/.ssh/authorized_keys&lt;/code&gt;中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;建议登录验证一下！！！再关闭密码登录&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="关闭root登录用户密码登录"&gt;关闭root登录、用户密码登录
&lt;/h3&gt;&lt;p&gt;修改&lt;code&gt;/etc/ssh/sshd_config &lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;PermitRootLogin no # 禁用root登录
PasswordAuthentication no #禁用用户密码登录
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果不生效了注意一下&lt;code&gt;sshd_config.d&lt;/code&gt;目录下的内容。重启ssh。&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;service ssh restart
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重启不生效就&lt;code&gt;reboot&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="修改ssh端口"&gt;修改ssh端口
&lt;/h3&gt;&lt;p&gt;修改&lt;code&gt;/etc/ssh/sshd_config &lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;#Port 22
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="安装docker"&gt;安装Docker
&lt;/h3&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;# 安装Docker
curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="安装ufw"&gt;安装ufw
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1、更新软件包&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo apt update
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2、安装 UFW&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo apt install ufw
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;3、如果你在远程位置连接你的服务器，在启用 UFW 防火墙之前，你必须显式允许进来的 SSH 连接。否则，你将永远都无法连接到机器上。&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo ufw allow 22/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;如果 SSH 运行在非标准端口，你需要将上述命令中的 22 端口替换为对应的 SSH 端口。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;5、启动 UFW&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo ufw enable
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="fail2ban"&gt;fail2ban
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1、安装 Fail2ban&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo apt-get install fail2ban
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2、Debian 12 及以上的版本需要手动安装 rsyslog&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo apt-get install rsyslog
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;3、启动 Fail2ban 服务&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo systemctl start fail2ban
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;4、开机自启动&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo systemctl enable fail2ban
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;5、查看 Fail2ban 服务状态。&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo systemctl status fail2ban
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="评价"&gt;评价
&lt;/h2&gt;&lt;p&gt;好使的一。官网也有测试的探针，我这是东京的比香港的好使点。终端的体验感觉也比rn的好多了。如果可以的话就传家宝了。&lt;/p&gt;</description></item></channel></rss>