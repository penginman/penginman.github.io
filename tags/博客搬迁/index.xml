<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>博客搬迁 on</title><link>/tags/%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%BF%81/</link><description>Recent content in 博客搬迁 on</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 31 Jan 2022 11:31:54 +0800</lastBuildDate><atom:link href="/tags/%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%BF%81/index.xml" rel="self" type="application/rss+xml"/><item><title>博客搬迁</title><link>/posts/play_time/%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%BF%81/</link><pubDate>Mon, 31 Jan 2022 11:31:54 +0800</pubDate><guid>/posts/play_time/%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%BF%81/</guid><description>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202201311142110.jpg" alt="202201311142110">&lt;/p>
&lt;p>大四开始写毕业设计了，在学的过程中想记一记笔记，但是之前的hexo博客没动很久了，就想着把博客搬迁下顺便起个头，激起一些学习的劲头。&lt;/p>
&lt;h1 id="为什么选择hugo">为什么选择Hugo&lt;/h1>
&lt;p>因为静态的网站生成框架也没几个，搜索的时候也就hexo、hugo、jekyll。之前用的hexo确实很顺手，但是自己改网站，加功能的时候搞了好多&lt;strong>依赖&lt;/strong>，感觉很臃肿，当时的博客文件夹带上依赖大概就有500+MB，现在换了hugo看下是90MB。&lt;/p>
&lt;p>hugo还有一个特点就是生成网站的速度很快。这一点我没有截图作比较，但是明显的感觉hugo比hexo快好多。引用一片文章里的一句话：&lt;/p>
&lt;blockquote>
&lt;p>根据相关博主提供的数据，他200篇左右的博文用Hexo 需要10分钟去生成静态网页，而Hugo 只需要10秒。&lt;/p>&lt;/blockquote>
&lt;p>所以感觉要是长期写东西的话，&lt;strong>选个好的框架也是个长远的选择&lt;/strong>。&lt;/p>
&lt;p>hugo在github上的⭐也比hexo多。&lt;/p>
&lt;p>&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=gohugoio&amp;amp;repo=hugo" alt="Readme Card">&lt;/p>
&lt;p>&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=hexojs&amp;amp;repo=hexo" alt="Readme Card">&lt;/p>
&lt;p>不过在迁移的过程中，最大的感受就是：&lt;strong>Hugo在国内的使用者不多&lt;/strong>。&lt;/p>
&lt;p>网上想要找个合适的教程非常难，然后就是去官网啃英文的文档。而且hugo框架和hexo比起来完全的不一样，鄙人go还没接触过，主要还是自己菜。一开始选了&lt;a href="https://github.com/luizdepra/hugo-coder">coder&lt;/a>这个主题，但是觉得还是对hugo本身的了解不够多，四处碰壁，最后选择了一个有国人维护的也是我现在在用的主题，就是&lt;a href="https://github.com/HEIGE-PCloud/DoIt">DoIt&lt;/a>，这个主题也是从上一代的主题迭代下来的，因为原来的那个已经很久没有维护了(可能觉得已经完工了)。这个主题的教程也很友好，摸完感觉我有点上手了。&lt;/p>
&lt;h1 id="博客的部署">博客的部署&lt;/h1>
&lt;p>之前使用hexo，在最后使用的时候发现了&lt;a href="https://www.travis-ci.com/">Travis CI - Test and Deploy with Confidence&lt;/a> &lt;strong>持续集成&lt;/strong>这个好东西，每次在本地写完博客以后push到github的仓库，然后这个app会自动构建博客发布到github pages。&lt;/p>
&lt;p>所以这次也是一样的选择，一个仓库用来放博客本体(顺便当一个备份)，使用持续集成发布到github pages和自己服务器里。不过这次学到的是github Actions。因为之前有用过一些自动签到的脚本，所以这个东西也略有了解，差不多就借一个生产环境干一些事情。具体的配置github的官方docs也写的比较清楚还有中文翻译，上手还看了一篇阮老师的博客&lt;a href="https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html">GitHub Actions 入门教程&lt;/a>。&lt;/p>
&lt;p>发布到自己服务器上那块感觉处理的还不是很好，找了好几种方法：ftp上传、webhook，最后用了执行git clone的命令从github pages拉仓库。&lt;/p>
&lt;p>所以最后的部署的流程就是：&lt;/p>
&lt;blockquote>
&lt;p>本地push到github仓库	&amp;ndash;&amp;gt;	仓库Actions发布到github pages、服务器拉取page仓库。&lt;/p>&lt;/blockquote></description></item></channel></rss>