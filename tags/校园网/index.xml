<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>校园网 on</title><link>/tags/%E6%A0%A1%E5%9B%AD%E7%BD%91/</link><description>Recent content in 校园网 on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 31 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/%E6%A0%A1%E5%9B%AD%E7%BD%91/index.xml" rel="self" type="application/rss+xml"/><item><title>ZUT 使用路由器连接校园网</title><link>/posts/play_time/zut-%E4%BD%BF%E7%94%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>/posts/play_time/zut-%E4%BD%BF%E7%94%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91/</guid><description>&lt;h2 id="前言"&gt;前言
&lt;/h2&gt;&lt;p&gt;我们学校的校园网不光每个月要宽带费 20/月，而且要绑定一个校园卡，我的一个月月租下来要 49/月，而且校园网还限制设备数量只能连接一个，我一般都是电脑连校园网，手机用流量，但是教职工的校园网就可以两个设备连接，寝室里目前有6+个设备也需要联网，商量以后打算搞个路由器贡献一个账号连校园网开 wifi，之前就见贴吧有老哥已经成功了，所以自己也尝试一下做个记录，给以后的同学看也不错。由于我已经连好路由器了，所以部分图片取自网络图片作为参考，我也尽量说的详细些。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;对于任何硬件、软件的损坏，本人没有赔偿的责任，哪怕这样的后果是因教程中的错误造成的。也请认真对待每一步操作，也许因为你的操作不当硬件因此变成一块砖。另外本教程的操作会使你的路由器失去保修。&lt;/li&gt;
&lt;li&gt;本篇文章仅起指导性的作用，在操作的过程中遇到的问题也许我也没有遇到过，请先自行尝试解决，如果我有空也会尽量帮助。&lt;/li&gt;
&lt;li&gt;学校明令禁止安装路由器，本人绝对没有怂恿或建议任何同学安装路由器，本人安装路由器的行为完全属于个人意志，仅仅作为个人的学习技术交流，请读者在安装好路由器之后 24 小时内再将之拆除，请按照学校指明的方式连接到互联网。如果学校根据校规等文件追究责任，与本人无关。&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;叠甲过&lt;/p&gt;
&lt;h2 id="前置知识"&gt;前置知识
&lt;/h2&gt;&lt;p&gt;校园网插入网线认证是要模拟 Dr.com 软件的发包认证，除了账号密码认证校园网以外，软件还会定时发送心跳包保证校园网连接。&lt;/p&gt;
&lt;p&gt;zut 的校园网认证格式为账号：&lt;code&gt;\r\n你的学号@[unicom|telecom|cmcc]&lt;/code&gt; ，其中 &lt;code&gt;@&lt;/code&gt; 后面的是你的运营商，对照前面的格式分别为：联通、电信、移动，例如我的是联通校园网，账号就是：&lt;code&gt;\r\n2022********@unicom&lt;/code&gt;，密码就是你自己的密码。&lt;/p&gt;
&lt;p&gt;zut 校园网的客户端版本为：6.0.0（P）&lt;/p&gt;
&lt;p&gt;校园网的防检测插件原理还没有写，自己用的 小米4C 是社区固件资源中自带的。想看原理可以看最后挖坑部分&lt;/p&gt;
&lt;h2 id="需要的材料"&gt;需要的材料
&lt;/h2&gt;&lt;p&gt;本教程使用的路由器型号 &lt;code&gt;Xiaomi router 4c&lt;/code&gt; pdd二手35，安装的系统 &lt;code&gt;openwrt&lt;/code&gt;。&lt;strong&gt;请注意&lt;/strong&gt;：路由器的选择直接影响到你后面的操作，我专门在网上挑了好久选的这个路由器，但是，&lt;strong&gt;唯独这个路由器的社区资源最特殊&lt;/strong&gt;，本人也是经过各种尝试才成功。如果选择其他路由器，本教程中的主要安装思路相同，但是需要自行寻找适合自己路由器的固件资源。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;路由器。&lt;/li&gt;
&lt;li&gt;网线两根。一根我买的8m的，因为宿舍AP在门上面，另一根需要连接路由器和电脑，长度自己看。&lt;/li&gt;
&lt;li&gt;开通校园网的账号。&lt;/li&gt;
&lt;li&gt;自己思考的能力。&lt;/li&gt;
&lt;li&gt;需要的软件压缩包：&lt;a class="link" href="https://wwn.lanzouy.com/igsaW0dn0k3a" target="_blank" rel="noopener"
&gt;zut_Xiaomi_router_4c.zip&lt;/a&gt;。其中包含
&lt;ul&gt;
&lt;li&gt;dogcom.zip。用来进行校园网模拟拨号，定时发送心跳包的工具。&lt;/li&gt;
&lt;li&gt;R3GV2 patches.zip。刷机的主要部分包含了：R3GV2 patches（前期连接路由器的工具）、Mi4C.bin（小米 4c 的 openwrt 固件自带防检测插件）、breed.bin（breed web 恢复控制台）&lt;/li&gt;
&lt;li&gt;MobaXterm_Portable.zip。用来连接路由器和传输文件的软件&lt;/li&gt;
&lt;li&gt;小米路由器4C恢复官方固件工具包.zip。刷成砖的&lt;a class="link" href="https://web.vip.miui.com/page/info/mio/mio/detail?postId=19134127&amp;amp;app_version=dev.20051" target="_blank" rel="noopener"
&gt;官方补救措施&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="教程参考的网站或资料"&gt;教程参考的网站或资料
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;贴吧老哥的教程：&lt;a class="link" href="https://tieba.baidu.com/p/7760362347" target="_blank" rel="noopener"
&gt;https://tieba.baidu.com/p/7760362347&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;广东工业大学在 github 上的教程：&lt;a class="link" href="https://github.com/shengqiangzhang/Drcom-GDUT-HC5661A-OpenWrt" target="_blank" rel="noopener"
&gt;https://github.com/shengqiangzhang/Drcom-GDUT-HC5661A-OpenWrt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;【记录】小米路由器 4C 刷机过程：&lt;a class="link" href="https://github.com/shengqiangzhang/Drcom-GDUT-HC5661A-OpenWrt/issues/27" target="_blank" rel="noopener"
&gt;https://github.com/shengqiangzhang/Drcom-GDUT-HC5661A-OpenWrt/issues/27&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;R4CM，说说我的小米路由器4C刷机过程：不用Linux也不用虚拟机…… ：&lt;a class="link" href="https://www.right.com.cn/FORUM/thread-4047571-1-1.html" target="_blank" rel="noopener"
&gt;https://www.right.com.cn/FORUM/thread-4047571-1-1.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;路由器认证校园网drcom：&lt;a class="link" href="https://www.brothereye.cn/router/669/" target="_blank" rel="noopener"
&gt;https://www.brothereye.cn/router/669/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="开工"&gt;开工
&lt;/h2&gt;&lt;p&gt;接通路由器电源，&lt;strong&gt;使用网线连接路由器&lt;/strong&gt;，进入初始化管理页面通常是 &lt;code&gt;192.168.1.1&lt;/code&gt;，能跳过就跳过，下图右选择无需拨号即可。（网络图片仅供参考）&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/63450a2f460ac.png"
loading="lazy"
alt="ab3pm-21hcz.png"
&gt;&lt;/p&gt;
&lt;p&gt;接下来设置 wifi 名称和密码，可以勾选管理密码和 wifi 密码相同的框，保存以后会提示新的管理后台地址，通常是 &lt;code&gt;192.168.31.1&lt;/code&gt;，使用管理密码登陆以后，显示路由器界面就算初始化成功。&lt;/p&gt;
&lt;h2 id="刷入不死-breed"&gt;刷入不死 Breed
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Breed 是国内个人 hackpascal 开发的闭源 Bootloader（引导加载器，即为用于加载操作系统的程序），也被称为“不死鸟”。
因为有些官方升级固件自带 bootloader，如果从官方固件升级，会导致现有 bootloader 被覆盖。而当 Breed 更新固件时，它会自动删除固件附带的引导加载程序，因此可以防止 Breed 被覆盖。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;刷入 Breed 的作用就是为后面刷固件做个保险，失败以后可以进行 reset 复位，防止路由器刷成一块砖。&lt;/p&gt;
&lt;h3 id="开启路由器-telnet-和-ftp"&gt;开启路由器 telnet 和 ftp
&lt;/h3&gt;&lt;p&gt;打开前面下载的压缩包中的 &lt;code&gt;R3GV2 patches&lt;/code&gt; 文件夹，运行其中的 &lt;code&gt;0.start_main.bat&lt;/code&gt;，这个批处理的命令主要是运行了文件夹中的 &lt;code&gt;main.py&lt;/code&gt; ，而 &lt;code&gt;main.py&lt;/code&gt; 做的事情就是尝试发现你的路由器后台地址，然后需要输入&lt;strong&gt;管理后台的密码&lt;/strong&gt;，然后执行一些 exploit 在路由器中写入后门，界面中出现 &lt;code&gt;Done&lt;/code&gt; 字样就算成功。&lt;/p&gt;
&lt;p&gt;这里遇到过扫描不到管理后台的情况，如果遇到了可以参考以下步骤。修改 &lt;code&gt;main.py&lt;/code&gt; 文件中的第 10 行到 15 行，删掉&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;line4 &lt;span style="color:#f92672"&gt;=&lt;/span&gt; subprocess&lt;span style="color:#f92672"&gt;.&lt;/span&gt;check_output([&lt;span style="color:#e6db74"&gt;&amp;#34;cmd&amp;#34;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#34;/c&amp;#34;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#34;chcp&amp;#34;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#34;437&amp;#34;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#34;&amp;amp;&amp;#34;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#34;tracert&amp;#34;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#34;-d&amp;#34;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#34;-h&amp;#34;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#34;1&amp;#34;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#34;1.1.1.1&amp;#34;&lt;/span&gt;])&lt;span style="color:#f92672"&gt;.&lt;/span&gt;decode()&lt;span style="color:#f92672"&gt;.&lt;/span&gt;split(&lt;span style="color:#e6db74"&gt;&amp;#34;&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;\r\n&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;&lt;/span&gt;)[&lt;span style="color:#ae81ff"&gt;4&lt;/span&gt;]&lt;span style="color:#f92672"&gt;.&lt;/span&gt;strip()&lt;span style="color:#f92672"&gt;.&lt;/span&gt;split(&lt;span style="color:#e6db74"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; data &lt;span style="color:#f92672"&gt;in&lt;/span&gt; line4:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; len(data&lt;span style="color:#f92672"&gt;.&lt;/span&gt;split(&lt;span style="color:#e6db74"&gt;&amp;#34;.&amp;#34;&lt;/span&gt;)) &lt;span style="color:#f92672"&gt;==&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;4&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; router_ip_address &lt;span style="color:#f92672"&gt;=&lt;/span&gt; data
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;添加 &lt;code&gt;router_ip_address&lt;/code&gt; 变量为你的管理后台地址，通常为 &lt;code&gt;192.168.31.1&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;router_ip_address &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;192.168.31.1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来使用 MobaXterm 连接路由器，新建一个 session 类型选择 telnet，这时的路由器地址就是管理后台的地址应该是 &lt;code&gt;192.168.31.1&lt;/code&gt;，用户为 &lt;code&gt;root&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/6345188f255ec.png"
loading="lazy"
alt="创建session"
&gt;&lt;/p&gt;
&lt;p&gt;ps：如果连接不成功就多运行几次 &lt;code&gt;0.start_main.bat&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id="备份原路由器信息"&gt;备份原路由器信息
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;以下步骤请注意！！！&lt;/strong&gt;
最好备份以下路由器原本分区文件，以防不备之需，其中&lt;code&gt;eeprom.bin&lt;/code&gt; 是最重要的，因为刷入 breed 以后可能会导致 MAC 地址全 0，需要刷入一次这个文件才会恢复。执行以下命令，&lt;code&gt;of&lt;/code&gt; 后面的就是文件输出的路径&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;dd if=/dev/mtd0 of=/tmp/all.bin
dd if=/dev/mtd2 of=/tmp/bootloader.bin
dd if=/dev/mtd3 of=/tmp/eeprom.bin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;打开电脑资源管理器，输入 &lt;code&gt;ftp://192.168.31.1&lt;/code&gt; 按回车，使用 ftp 连接路由器（为什么不用 MobaXterm，因为后门创建的 ftp 是匿名用户，直接使用 windows 资源管理器打开更方便）&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/63451aca4e1e0.png"
loading="lazy"
alt="连接 ftp"
&gt;&lt;/p&gt;
&lt;p&gt;找到 &lt;code&gt;tmp&lt;/code&gt; 文件夹其中的三个文件：&lt;code&gt;all.bin&lt;/code&gt; 、&lt;code&gt;bootloader.bin&lt;/code&gt; 和 &lt;code&gt;eeprom.bin&lt;/code&gt;，复制到本地做备份，下载以后一定要看清楚三个文件的大小分别是 &lt;code&gt;16MB&lt;/code&gt; 、&lt;code&gt;64k&lt;/code&gt; 和 &lt;code&gt;64k&lt;/code&gt;，如果大小是 &lt;code&gt;1k&lt;/code&gt; 那就是错误的，再备份几次，也有可能是后门没写牢再执行 &lt;code&gt;0.start_main.bat&lt;/code&gt; 试试。&lt;/p&gt;
&lt;h3 id="上传-breed--文件并刷入"&gt;上传 Breed 文件并刷入
&lt;/h3&gt;&lt;p&gt;在资源管理器的 ftp 中把 &lt;code&gt;breed.bin&lt;/code&gt; 文件上传到 &lt;code&gt;/tmp&lt;/code&gt; 文件夹下，在 telnet 中执行指令刷入引导加载器&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;mtd write /tmp/breed.bin Bootloader
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不提示错误信息就是刷入成功了。&lt;/p&gt;
&lt;h3 id="重启路由器进入-breed"&gt;重启路由器进入 Breed
&lt;/h3&gt;&lt;p&gt;拔掉路由器电源，用一根牙签类似的东西，插入路由器后面的 reset 孔不要松开，再插上电源，路由器灯会先闪一下，直到连续闪烁几次以后再松开 reset，这时路由器已经进入 breed 了，打开浏览器访问 &lt;code&gt;192.168.1.1&lt;/code&gt; 就可以看到 Breed 的界面（网络图片仅供参考，系统信息可能不一样）&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/63451fb563c3a.png"
loading="lazy"
alt="Breed界面"
&gt;&lt;/p&gt;
&lt;p&gt;如果你在之后有不可挽回的错误操作，都可以通过以上操作进行复位重置。&lt;/p&gt;
&lt;h3 id="检查-mac-地址"&gt;检查 MAC 地址
&lt;/h3&gt;&lt;p&gt;进入 MAC 地址修改，通常你应该看到的前三个 MAC 地址应该是全0，这就需要刷入 一次之前的 &lt;code&gt;eeprom.bin&lt;/code&gt;。（网络图片仅供参考）&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/6345201b6c592.png"
loading="lazy"
alt="MAC 地址修改"
&gt;&lt;/p&gt;
&lt;p&gt;进入&lt;strong&gt;固件更新&lt;/strong&gt; （界面同下面），勾选 &lt;strong&gt;EEPORM&lt;/strong&gt;，选择文件 &lt;code&gt;eeprom.bin&lt;/code&gt;，其他的都不要动，然后上传，根据提示更新，之后会重新回到 Breed 控制台。&lt;/p&gt;
&lt;h2 id="刷入-openwrt"&gt;刷入 openwrt
&lt;/h2&gt;&lt;p&gt;同样在 Breed 控制台选择&lt;strong&gt;固件更新&lt;/strong&gt; ，勾选&lt;strong&gt;固件&lt;/strong&gt;，选择 &lt;code&gt;Mi4C.bin&lt;/code&gt; openwrt 固件文件，根据提示上传安装。（网络图片仅供参考）&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/634527710db18.png"
loading="lazy"
alt="固件更新"
&gt;&lt;/p&gt;
&lt;p&gt;之后路由器灯会全灭，然后电源灯进入&lt;strong&gt;黄色闪烁&lt;/strong&gt;的状态，就是正在安装，等待安装成功以后等会变成&lt;strong&gt;蓝色&lt;/strong&gt;，之后就可以访问 &lt;code&gt;192.168.1.1&lt;/code&gt; 进入openwrt 管理后台页面，默认密码为 &lt;code&gt;password&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/634524441d739.png"
loading="lazy"
alt="openwrt 界面"
&gt;&lt;/p&gt;
&lt;p&gt;说一下 &lt;code&gt;Mi4C.bin&lt;/code&gt; 这个openw 的固件。这个固件来自前面提到的广东工业大学项目中的 &lt;a class="link" href="https://github.com/shengqiangzhang/Drcom-GDUT-HC5661A-OpenWrt/issues/27" target="_blank" rel="noopener"
&gt;issue&lt;/a&gt;，是一位同学自己找人定制的一份固件并且免费分享出来了，其中已经内置了 Dr.com 插件（用来发送心跳包）及防检测插件（ttl，ipid，cookieflash，ua2f 最新版），非常感谢这位同学的分享。&lt;/p&gt;
&lt;h3 id="配置-pppoe-拨号"&gt;配置 PPPoE 拨号
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;前置条件&lt;/strong&gt;：宿舍上面的AP接口插入路由器的 WAN 口&lt;/p&gt;
&lt;p&gt;选择 网络 &amp;mdash;&amp;gt; 接口，点击 &lt;code&gt;WAN&lt;/code&gt; 接口对应的 编辑（Edit）按钮。&lt;/p&gt;
&lt;p&gt;下面图中是我的已经配置好的界面，初次进入应该是有个 &lt;code&gt;WAN&lt;/code&gt; 和 &lt;code&gt;WAN6&lt;/code&gt; 接口，它们两个的下面并不是我图中的 &lt;code&gt;pppoe-wan&lt;/code&gt;，应该是 &lt;code&gt;eht0.2&lt;/code&gt;。&lt;code&gt;WAN6&lt;/code&gt; 接口是一个 DHCP IPV6 客户端，它和 &lt;code&gt;WAN&lt;/code&gt; 接口是同一个物理接口，留着也不影响 。&lt;code&gt;LAN&lt;/code&gt; 口尽量不要动。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/63452a57015e9.png"
loading="lazy"
alt="网络接口配置"
&gt;&lt;/p&gt;
&lt;p&gt;通信协议选择 &lt;code&gt;PPPoE&lt;/code&gt; 然后点击出现的&lt;strong&gt;切换协议&lt;/strong&gt;按钮。然后根据下表填入信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PAP/CHAP 用户名。校园网账号，前置知识中的&lt;code&gt;\r\n****@***&lt;/code&gt;格式。&lt;/li&gt;
&lt;li&gt;PAP/CHAP 密码。校园网密码。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他的不用动，请仔细检查校园网账号和密码是否正确。之后点击保存退出后，点击界面右下角的&lt;strong&gt;保存并应用&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/63452de3e1732.png"
loading="lazy"
alt="1665478137525.png"
&gt;&lt;/p&gt;
&lt;p&gt;PPPoE 部分配置完成。但是校园网目前还不能用。&lt;/p&gt;
&lt;h3 id="配置无线网络"&gt;配置无线网络
&lt;/h3&gt;&lt;p&gt;选择 网络 &amp;mdash;&amp;gt; 无线，如果提示已禁用就点击启用，只有一个你可以点击编辑的按钮。&lt;code&gt;ESSID&lt;/code&gt; 就是设备搜索到的无线网名称。网络是 &lt;code&gt;LAN&lt;/code&gt; 接口就不用动。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/63452e4608e41.png"
loading="lazy"
alt="无线网名称配置"
&gt;&lt;/p&gt;
&lt;p&gt;选择 无线安全 配置无线网密码，加密选择 &lt;code&gt;WPA2-PSK&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/63452e93b28bc.png"
loading="lazy"
alt="无线网密码配置"
&gt;&lt;/p&gt;
&lt;p&gt;无线网络部分配置完成。&lt;/p&gt;
&lt;h3 id="配置管理后台密码"&gt;配置管理后台密码
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;192.168.1.1&lt;/code&gt; 管理后台默认密码 &lt;code&gt;password&lt;/code&gt; 容易被进入，进入 系统 &amp;mdash;&amp;gt; 管理权，可以更改访问后台管理员的密码。&lt;/p&gt;
&lt;h2 id="校园网认证"&gt;校园网认证
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;前置条件&lt;/strong&gt;：配置好 PPPoE 拨号&lt;/p&gt;
&lt;p&gt;在前面我们已经成功配置了 PPPoE 拨号，但是要记得校园网还要发送心跳包保证在线状态。这部分主要解决发送心跳包的问题。&lt;/p&gt;
&lt;p&gt;还需要说一下，发送心跳包的主要原理来自 &lt;a class="link" href="https://github.com/drcoms/drcom-generic" target="_blank" rel="noopener"
&gt;drcom-generic&lt;/a&gt; 项目，广工大项目中使用的 Dr.com 插件是这个项目的 openwrt 插件版本，并且现在刷入的 openwrt 固件自带的也是这个插件，我并没用使用成功。最终是结合了学校贴吧老哥使用的 &lt;a class="link" href="https://github.com/mchome/dogcom" target="_blank" rel="noopener"
&gt;dogcom&lt;/a&gt; 才成功，dogcom 则是前面那个项目的 C 语言实现版本。&lt;/p&gt;
&lt;h3 id="删除-drcom-插件"&gt;删除 Dr.com 插件
&lt;/h3&gt;&lt;p&gt;在使用 dogcom 之前，需要把之前的 Dr.com 插件删除，因为会造成重复发包的问题导致无法认证。&lt;/p&gt;
&lt;p&gt;进入 系统 &amp;mdash;&amp;gt; 软件包，在界面中筛选器部分搜索 drcom 或者 gdut （记不清了），然后选择 已安装列表，搜索到的软件包点击移除按钮，自动移除未使用的依赖可以取消勾选。&lt;/p&gt;
&lt;h3 id="通过-openwrt-提供的-ssh-连接路由器"&gt;通过 openwrt 提供的 ssh 连接路由器
&lt;/h3&gt;&lt;p&gt;openwrt 安装成功以后其实就可以通过 ssh 连接路由器了，使用 MobaXterm 连接路由器。这时连接的地址是 &lt;code&gt;192.168.1.1&lt;/code&gt;，用户名是 &lt;code&gt;root&lt;/code&gt;，密码是你 openwrt 的&lt;strong&gt;管理后台密码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/6345354d1c8b6.png"
loading="lazy"
alt="ssh连接"
&gt;&lt;/p&gt;
&lt;p&gt;MobaXterm 使用 ssh 连接以后左边会自己创建一个 ftp 连接，就是图中的框框部分&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/634535f1bcec4.png"
loading="lazy"
alt="1665480198855.png"
&gt;&lt;/p&gt;
&lt;p&gt;上面蓝色选中的部分是当前的路径，可以修改当前所在路径，通过拖拽可以直接上传文件&lt;/p&gt;
&lt;h3 id="安装-dogcom"&gt;安装 dogcom
&lt;/h3&gt;&lt;p&gt;dogcom 安装方式有两种， 一种是使用 openwrt 版本的通过 opkg 软件包管理器安装，另一种是通过 ftp 上传 dogcom 可执行文件到 &lt;code&gt;/usr/bin/&lt;/code&gt; 文件夹中。就算使用 opkg 软件包安装，两个最后的结果都是一样的，就是在 &lt;code&gt;/usr/bin/&lt;/code&gt; 文件夹中有一个 dogcom 的可执行文件。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;方法一：使用 opkg 软件包安装&lt;/p&gt;
&lt;p&gt;还是在系统 &amp;mdash;&amp;gt; 软件包界面，有一个上传软件包按钮，点击上传下载的压缩包 &lt;code&gt;dogcom.zip&lt;/code&gt; 中的 &lt;code&gt;dogcom_v1.6.2-1_mipsel_24kc.ipk&lt;/code&gt;，之后执行安装即可。&lt;/p&gt;
&lt;p&gt;也可以通过 ftp 把文件上传到 &lt;code&gt;/tmp&lt;/code&gt; 文件夹中，然后在控制台执行&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;opkg install /tmp/dogcom_v1.6.2-1_mipsel_24kc.ipk
&lt;/code&gt;&lt;/pre&gt;&lt;ol start="2"&gt;
&lt;li&gt;方法二：通过 ssh 上传到指定目录
在左侧的 ftp 界面上面路径输入 &lt;code&gt;/usr/bin&lt;/code&gt; 进入文件夹，然后拖动名为 &lt;strong&gt;dogcom&lt;/strong&gt; 的文件上传到该目录。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过以上方法两个方法上传安装 dogcom 以后，可以在控制台执行&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;/usr/bin/dogcom -h
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;测试软件是否可用，软件输出为&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;root@iapp:~# /usr/bin/dogcom
Drcom-generic implementation in C.
Version: 1.6.2
Usage:
dogcom -m &amp;lt;dhcp/pppoe&amp;gt; -c &amp;lt;FILEPATH&amp;gt; [options &amp;lt;argument&amp;gt;]...
Options:
--mode &amp;lt;dhcp/pppoe&amp;gt;, -m &amp;lt;dhcp/pppoe&amp;gt; set your dogcom mode
--conf &amp;lt;FILEPATH&amp;gt;, -c &amp;lt;FILEPATH&amp;gt; import configuration file
--bindip &amp;lt;IPADDR&amp;gt;, -b &amp;lt;IPADDR&amp;gt; bind your ip address(default is 0.0.0.0)
--log &amp;lt;LOGPATH&amp;gt;, -l &amp;lt;LOGPATH&amp;gt; specify log file
--daemon, -d set daemon flag
--802.1x, -x enable 802.1x
--eternal, -e set eternal flag
--verbose, -v set verbose flag
--help, -h display this help
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;视为成功。&lt;/p&gt;
&lt;h3 id="上传-dogcom-配置文件"&gt;上传 dogcom 配置文件
&lt;/h3&gt;&lt;p&gt;可以参考上一节安装 dogcom 的方法二，使用 ftp 上传 &lt;code&gt;dogcom.conf&lt;/code&gt; 文件到 &lt;code&gt;/usr/&lt;/code&gt; 目录下。这个 &lt;code&gt;dogcom.conf&lt;/code&gt; 内容是发送心跳包的配置文件，来源是通过 &lt;a class="link" href="https://github.com/drcoms/drcom-generic" target="_blank" rel="noopener"
&gt;drcom-generic&lt;/a&gt; 项目教程，使用 Wireshark 软件进行抓包并使用 &lt;a class="link" href="http://drcoms.github.io/drcom-generic/" target="_blank" rel="noopener"
&gt;在线配置器&lt;/a&gt; 获得的，如果以后校园网配置更改还需要自行抓包测试。&lt;code&gt;dogcom.conf&lt;/code&gt; 的内容如下&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;server = &amp;#39;1.1.1.1&amp;#39;
pppoe_flag = &amp;#39;\x2f&amp;#39;
keep_alive2_flag = &amp;#39;\xdb&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="配置-pppoe-拨号文件"&gt;配置 PPPoE 拨号文件
&lt;/h3&gt;&lt;p&gt;在 ssh 中按照顺序执行以下指令，&lt;strong&gt;这一步十分的重要！！！&lt;/strong&gt;：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;cp /lib/netifd/proto/ppp.sh /lib/netifd/proto/ppp.sh_bak
sed -i &amp;#39;/proto_run_command/i username=`echo -e &amp;#34;$username&amp;#34;`&amp;#39; /lib/netifd/proto/ppp.sh
sed -i &amp;#39;/proto_run_command/i password=`echo -e &amp;#34;$password&amp;#34;`&amp;#39; /lib/netifd/proto/ppp.sh
chmod 777 /usr/bin/dogcom
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后就可以执行&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;/usr/bin/dogcom -m pppoe -c /usr/drcom.conf -e -d &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;dogcom 会自动启用一个守护进程发送心跳包认证，为了保证每次路由器重启以后自动连接校园网并认证，建议在 openwrt 管理页面的 系统 &amp;mdash;&amp;gt; 计划任务 中添加本地启动脚本&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sleep 10 &amp;amp;&amp;amp; /usr/bin/dogcom -m pppoe -c /usr/drcom.conf -e -d &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/63453a962923a.png"
loading="lazy"
alt="1665481387645.png"
&gt;&lt;/p&gt;
&lt;h3 id="查看校园网是否成功认证"&gt;查看校园网是否成功认证
&lt;/h3&gt;&lt;p&gt;配置完成后，重启路由器，并请耐心等待若干分钟（3分钟内），重新回到 openwrt 管理页面的 网络 &amp;mdash;&amp;gt; 接口中，查看 &lt;code&gt;WAN&lt;/code&gt; 接口 PPPoE 是否拨号成功，如果运行时间、发送、接受均有数据，并且 IPv4 获得的一个地址，则说明路由器已经可以上网了。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://img.braindance.top/article/2022/10/11/63453da03857e.png"
loading="lazy"
alt="拨号成功"
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;wan中，学号密码输入错误。&lt;/p&gt;
&lt;p&gt;路由器的wan没有与校园网端口连接&lt;/p&gt;
&lt;p&gt;网线断了，或者路由器坏了&lt;/p&gt;
&lt;p&gt;压根没开通校园网&lt;/p&gt;
&lt;p&gt;dogcom 插件中，校园网心跳配置已经更改&lt;/p&gt;
&lt;p&gt;端口被学校网络中心拉黑了&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="挖个坑"&gt;挖个坑
&lt;/h2&gt;&lt;h3 id="校园网防检测"&gt;校园网防检测
&lt;/h3&gt;&lt;p&gt;常见的四种检测：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于 IPv4 数据包包头内的 TTL 字段的检测（固定TTL）&lt;/li&gt;
&lt;li&gt;基于 HTTP 数据包请求头内的 User-Agent 字段的检测(UA2F)&lt;/li&gt;
&lt;li&gt;DPI (Deep Packet Inspection) 深度包检测技术）（不常用）&lt;/li&gt;
&lt;li&gt;基于 IPv4 数据包包头内的 Identification 字段的检测（rkp-ipid 设置 IPID）&lt;/li&gt;
&lt;li&gt;基于网络协议栈时钟偏移的检测技术（防时钟偏移检测）&lt;/li&gt;
&lt;li&gt;Flash Cookie 检测技术（iptables 拒绝 AC 进行 Flash 检测 不常用）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大佬讲解文章：https://catalog.chn.moe/&lt;/p&gt;
&lt;p&gt;广东工业大学项目：https://github.com/shengqiangzhang/Drcom-GDUT-HC5661A-OpenWrt#步骤六配置防检测&lt;/p&gt;
&lt;h3 id="校园网经常掉线"&gt;校园网经常掉线
&lt;/h3&gt;&lt;p&gt;2022.10.31 更新&lt;/p&gt;
&lt;p&gt;自己从网上找了一个检测断网并自动重新拨号的脚本，配合定时任务每天凌晨 4 点重启，已经用了 20 多天了感觉还不错，分享一波代码。可以在任意目录下创建一个 ping 文件夹（但是需要自己改下某些配置路径），下面的例子是在 /root/ping 目录里放的脚本。脚本包括产生的日志有三个文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ping.sh。每间隔 &lt;code&gt;SLEEP_SEC&lt;/code&gt; 时间测试两个外网地址能否访问，超过 &lt;code&gt;PING_SUM&lt;/code&gt; 次数无法访问判断为拨号掉线，重启 wan 口进行拨号。产生的日志文件存放到 &lt;code&gt;/root/ping/log.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;daemon.sh。检测 ping.sh 进程是否存活，如果不存在进程则重启进程；判断日志文件超过 50MB 清空日志文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ping.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#!/bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;PING_SUM&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#ping interval&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;SLEEP_SEC&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#连续重启网卡 REBOOT_CNT 次网络都没有恢复正常，重启软路由&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#时间= (SLEEP_SEC * PING_SUM + 20) * REBOOT_CNT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;REBOOT_CNT&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;LOG_PATH&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;/root/ping/log.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;cnt&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;reboot_cnt&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;while&lt;/span&gt; :
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ping -c &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt; -W &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt; 114.114.114.114 &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ret&lt;span style="color:#f92672"&gt;=&lt;/span&gt;$?
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ping -c &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt; -W &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt; 223.6.6.6 &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ret2&lt;span style="color:#f92672"&gt;=&lt;/span&gt;$?
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#f92672"&gt;[[&lt;/span&gt; $ret -eq &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt; &lt;span style="color:#f92672"&gt;||&lt;/span&gt; $ret2 -eq &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt; &lt;span style="color:#f92672"&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; echo &lt;span style="color:#e6db74"&gt;&amp;#39;Network OK!&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; cnt&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; reboot_cnt&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; cnt&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;expr $cnt + 1&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; echo -n &lt;span style="color:#e6db74"&gt;`&lt;/span&gt;date &lt;span style="color:#e6db74"&gt;&amp;#39;+%Y-%m-%d %H:%M:%S&amp;#39;&lt;/span&gt;&lt;span style="color:#e6db74"&gt;`&lt;/span&gt; &amp;gt;&amp;gt; $LOG_PATH
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; printf &lt;span style="color:#e6db74"&gt;&amp;#39;-&amp;gt; [%d/%d] Network maybe disconnected,checking again after %d seconds!\r\n&amp;#39;&lt;/span&gt; $cnt $PING_SUM $SLEEP_SEC &amp;gt;&amp;gt; $LOG_PATH
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; printf &lt;span style="color:#e6db74"&gt;&amp;#39;-&amp;gt; [%d/%d] Network maybe disconnected,checking again after %d seconds!\r\n&amp;#39;&lt;/span&gt; $cnt $PING_SUM $SLEEP_SEC
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#f92672"&gt;[&lt;/span&gt; $cnt &lt;span style="color:#f92672"&gt;==&lt;/span&gt; $PING_SUM &lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; echo &lt;span style="color:#e6db74"&gt;&amp;#39;ifup wan!!!&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; $LOG_PATH
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; echo &lt;span style="color:#e6db74"&gt;&amp;#39;ifup wan!!!&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ifdown wan
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; sleep &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ifup wan
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; cnt&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#重连后，等待20秒再进行ping检测&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; sleep &lt;span style="color:#ae81ff"&gt;20&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#网卡重启超过指定次数还没恢复正常，重启软路由&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; reboot_cnt&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;expr $reboot_cnt + 1&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#f92672"&gt;[&lt;/span&gt; $reboot_cnt &lt;span style="color:#f92672"&gt;==&lt;/span&gt; $REBOOT_CNT &lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; echo -n &lt;span style="color:#e6db74"&gt;`&lt;/span&gt;date &lt;span style="color:#e6db74"&gt;&amp;#39;+%Y-%m-%d %H:%M:%S&amp;#39;&lt;/span&gt;&lt;span style="color:#e6db74"&gt;`&lt;/span&gt; &amp;gt;&amp;gt; $LOG_PATH
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; echo &lt;span style="color:#e6db74"&gt;&amp;#39;-&amp;gt; =============== reboot!&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; $LOG_PATH
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; echo &lt;span style="color:#e6db74"&gt;&amp;#39;-&amp;gt; =============== reboot!&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; sshpass -p &lt;span style="color:#ae81ff"&gt;132465&lt;/span&gt; ssh -p &lt;span style="color:#ae81ff"&gt;22&lt;/span&gt; root@192.168.1.1 &lt;span style="color:#e6db74"&gt;&amp;#39;reboot&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; sleep $SLEEP_SEC
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;daemon.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#!/bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;LOG_PATH&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;/root/ping/log.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 用ps获取ups进程数量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;NUM&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;ps | grep ping.sh | grep -v grep | wc -l&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;echo &lt;span style="color:#e6db74"&gt;${&lt;/span&gt;NUM&lt;span style="color:#e6db74"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 少于1，重启进程&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#f92672"&gt;[&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;&lt;/span&gt;&lt;span style="color:#e6db74"&gt;${&lt;/span&gt;NUM&lt;span style="color:#e6db74"&gt;}&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;&lt;/span&gt; -lt &lt;span style="color:#e6db74"&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; /root/ping/ping.sh &amp;gt; /dev/null &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; echo -n &lt;span style="color:#e6db74"&gt;`&lt;/span&gt;date &lt;span style="color:#e6db74"&gt;&amp;#39;+%Y-%m-%d %H:%M:%S&amp;#39;&lt;/span&gt;&lt;span style="color:#e6db74"&gt;`&lt;/span&gt; &amp;gt;&amp;gt; $LOG_PATH
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; echo &lt;span style="color:#e6db74"&gt;&amp;#39;-&amp;gt; Ping daemon start&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; $LOG_PATH
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;s&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;du -k /root/ping/log.txt|awk &lt;span style="color:#e6db74"&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; &lt;span style="color:#f92672"&gt;[&lt;/span&gt; $s -gt &lt;span style="color:#ae81ff"&gt;500000&lt;/span&gt; &lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; chengdatetime&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;date &lt;span style="color:#e6db74"&gt;&amp;#34;+%Y-%m-%d %H:%M:%S&amp;#34;&lt;/span&gt;&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; echo $chengdatetime&lt;span style="color:#e6db74"&gt;&amp;#34;:log size is large than expected and cleaning is started&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; $LOG_PATH
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; cat /dev/null &amp;gt; /root/ping/log.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;exit &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后在 openwrt 的管理后台 &amp;mdash;&amp;gt; 系统 &amp;mdash;&amp;gt; 计划任务中添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;4&lt;/span&gt; * * * reboot
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#ae81ff"&gt;0&lt;/span&gt; */1 * * * /root/ping/daemon.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第一行是每天 4 点重启路由器，第二行是启动检测存活脚本（看好文件路径别错），可以自行设置计划运行时间。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;分割线，以下是旧内容&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这个我也遇到过了，不知道是什么原因，毕竟我自己用电脑连着认证时不时也会掉，但是也有搜到的下面的办法&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://blog.csdn.net/weixin_35251837/article/details/119553540" target="_blank" rel="noopener"
&gt;https://blog.csdn.net/weixin_35251837/article/details/119553540&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;/etc/ppp/options&lt;/code&gt; 文件中添加 &lt;code&gt;persist&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="完工"&gt;完工
&lt;/h2&gt;&lt;p&gt;读到这里相信你也费了好大的力气了，也恭喜你，至少你是一个善于坚持的人，请享用你的校园网吧。有问题可以在评论区提问。&lt;/p&gt;</description></item></channel></rss>